//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using Newtonsoft.Json;
using SDK.Platform.AliExpressApi.Model;

namespace SDK.Platform.AliExpressApi
{
    partial class AliExpressModelClient
    {
        #region AliAPI方法
        /// <summary>
        /// 根据请求地址的类型：发货地址信息，揽收地址信息，退货地址信息，返回相应的地址列表。
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public AlibabaAeApiGetLogisticsSellerAddressesResponse AlibabaAeApiGetLogisticsSellerAddresses(string request)
        {
            var str = StrClient.alibaba_ae_api_getLogisticsSellerAddresses(request);
            return this.DeserializeObject<AlibabaAeApiGetLogisticsSellerAddressesResponse>(str);
        }
        /// <summary>
        /// 满足api对新纠纷的查询需求
        /// </summary>
        /// <param name="issueId">纠纷ID<example>400094178884822</example></param>
        /// <returns></returns>
        public AlibabaAeIssueFindIssueDetailByIssueIdResponse AlibabaAeIssueFindIssueDetailByIssueId(long issueId)
        {
            var str = StrClient.alibaba_ae_issue_findIssueDetailByIssueId(issueId);
            return this.DeserializeObject<AlibabaAeIssueFindIssueDetailByIssueIdResponse>(str);
        }
        /// <summary>
        /// 物流面单的字段信息
        /// </summary>
        /// <param name="request">运单号面单PDF打印查询参数</param>
        /// <returns></returns>
        public AlibabaAeLogisticsAeopWarehouseOrderPrintFieldResponse AlibabaAeLogisticsGetFieldInfoForPrint(string request)
        {
            var str = StrClient.alibaba_ae_logistics_getFieldInfoForPrint(request);
            return this.DeserializeObject<AlibabaAeLogisticsAeopWarehouseOrderPrintFieldResponse>(str);
        }
        /// <summary>
        /// AppsFlyer是AE合作的广告商，它会给AE传输AE否投放广告的效果数据
        /// </summary>
        /// <returns></returns>
        public AlibabaAeMessagePushPerfDataResponse AlibabaAeMessagePushPerfData()
        {
            var str = StrClient.alibaba_ae_message_pushPerfData();
            return this.DeserializeObject<AlibabaAeMessagePushPerfDataResponse>(str);
        }
        /// <summary>
        /// 卖家post商品时可选择商品有效期。
        /// 每次延长的有效期=post商品时卖家选择的商品有效期
        /// </summary>
        /// <param name="productId">需要延长有效期的商品id<example>1234</example></param>
        /// <returns></returns>
        public AlibabaAeProductRenewExpireResponse AlibabaAeProductRenewExpire(long productId)
        {
            var str = StrClient.alibaba_ae_product_renewExpire(productId);
            return this.DeserializeObject<AlibabaAeProductRenewExpireResponse>(str);
        }
        /// <summary>
        /// 查询店铺当月服务等级相关信息（包括该卖家上月考核订单量，当月考核周期，当月服务等级计算起始时间，当月服务等级计算截止时间，当月服务等级，上月每日服务分均值，下月等级预估计算起始时间，下月等级预估计算截止时间，下月等级预估）
        /// </summary>
        /// <param name="loginId">卖家loginId，需要与授权用户相同<value>$req.userAuthz.userId</value><example>cn11311231</example></param>
        /// <returns></returns>
        public AlibabaAeSellerGetCurrentLevelInfoResponse AlibabaAeSellerGetCurrentLevelInfo(string loginId = null)
        {
            var str = StrClient.alibaba_ae_seller_getCurrentLevelInfo(loginId);
            return this.DeserializeObject<AlibabaAeSellerGetCurrentLevelInfoResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内未在48小时内发货订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetOrderListForLateShipmentResponse AlibabaAeSellerGetOrderListForLateShipment(string query)
        {
            var str = StrClient.alibaba_ae_seller_getOrderListForLateShipment(query);
            return this.DeserializeObject<AlibabaAeSellerGetOrderListForLateShipmentResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内成交不卖订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetOrderListForNoShipmentResponse AlibabaAeSellerGetOrderListForNoShipment(string query)
        {
            var str = StrClient.alibaba_ae_seller_getOrderListForNoShipment(query);
            return this.DeserializeObject<AlibabaAeSellerGetOrderListForNoShipmentResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内未收到货物纠纷提起订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetOrderListForNRResponse AlibabaAeSellerGetOrderListForNR(string query)
        {
            var str = StrClient.alibaba_ae_seller_getOrderListForNR(query);
            return this.DeserializeObject<AlibabaAeSellerGetOrderListForNRResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内货不对版纠纷提起订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetOrderListForSNADResponse AlibabaAeSellerGetOrderListForSNAD(string query)
        {
            var str = StrClient.alibaba_ae_seller_getOrderListForSNAD(query);
            return this.DeserializeObject<AlibabaAeSellerGetOrderListForSNADResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内DSR卖家服务中低分商品分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetProductListForLowCustomerServiceDSRResponse AlibabaAeSellerGetProductListForLowCustomerServiceDSR(string query)
        {
            var str = StrClient.alibaba_ae_seller_getProductListForLowCustomerServiceDSR(query);
            return this.DeserializeObject<AlibabaAeSellerGetProductListForLowCustomerServiceDSRResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内DSR商品描述中低分商品分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetProductListForLowDescriptionDSRResponse AlibabaAeSellerGetProductListForLowDescriptionDSR(string query)
        {
            var str = StrClient.alibaba_ae_seller_getProductListForLowDescriptionDSR(query);
            return this.DeserializeObject<AlibabaAeSellerGetProductListForLowDescriptionDSRResponse>(str);
        }
        /// <summary>
        /// 获取全店铺考核期内DSR物流中低分商品分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetProductListForLowLogisticsDSRResponse AlibabaAeSellerGetProductListForLowLogisticsDSR(string query)
        {
            var str = StrClient.alibaba_ae_seller_getProductListForLowLogisticsDSR(query);
            return this.DeserializeObject<AlibabaAeSellerGetProductListForLowLogisticsDSRResponse>(str);
        }
        /// <summary>
        /// 获取卖家每日服务分计算起始时间，每日服务分计算截止时间，每日服务分，该卖家所在主营二级行业名称，该卖家所在主营二级行业平均分，各考核项（考核项名称、权重、该卖家该考核项指标、该卖家该考核项得分、该卖家所在主营二级行业指标均值，该卖家所在主营二级行业得分均值）
        /// </summary>
        /// <param name="loginId">卖家loginId，需要与授权用户相同<value>$req.userAuthz.userId</value><example>cn11311231</example></param>
        /// <param name="localeStr">语言环境<example>zh_CN，zh_TW，en_US</example></param>
        /// <returns></returns>
        public AlibabaAeSellerGetServiceScoreInfoResponse AlibabaAeSellerGetServiceScoreInfo(string loginId = null, string localeStr = null)
        {
            var str = StrClient.alibaba_ae_seller_getServiceScoreInfo(loginId, localeStr);
            return this.DeserializeObject<AlibabaAeSellerGetServiceScoreInfoResponse>(str);
        }
        /// <summary>
        /// 获取考核期内指定类目的服务分信息
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public AlibabaAeSellerGetServiceScoreInfoByCategoryResponse AlibabaAeSellerGetServiceScoreInfoByCategory(string query)
        {
            var str = StrClient.alibaba_ae_seller_getServiceScoreInfoByCategory(query);
            return this.DeserializeObject<AlibabaAeSellerGetServiceScoreInfoByCategoryResponse>(str);
        }
        /// <summary>
        /// 获取考核期内指定商品的服务得分信息
        /// </summary>
        /// <param name="query"><example>查询参数</example></param>
        /// <returns></returns>
        public AlibabaAeSellerGetServiceScoreInfoByProductResponse AlibabaAeSellerGetServiceScoreInfoByProduct(string query)
        {
            var str = StrClient.alibaba_ae_seller_getServiceScoreInfoByProduct(query);
            return this.DeserializeObject<AlibabaAeSellerGetServiceScoreInfoByProductResponse>(str);
        }
        /// <summary>
        /// 返回值包装类
        /// </summary>
        /// <param name="sellerId">卖家主账号ID</param>
        /// <param name="properties">字段列表</param>
        /// <returns></returns>
        public AlibabaAeSellerMerchantResultModel AlibabaAeSellerQueryMerchant(long sellerId, string properties = null)
        {
            var str = StrClient.alibaba_ae_seller_queryMerchant(sellerId, properties);
            return this.DeserializeObject<AlibabaAeSellerMerchantResultModel>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId"></param>
        /// <param name="sellerOperationAliid"></param>
        /// <returns></returns>
        public OperationResult AlibabaAeSellerTradeSellerSendGoodsFinish(long orderId, long sellerOperationAliid)
        {
            var str = StrClient.alibaba_ae_seller_trade_sellerSendGoodsFinish(orderId, sellerOperationAliid);
            return this.DeserializeObject<OperationResult>(str);
        }
        /// <summary>
        /// 查询商家认证信息
        /// </summary>
        /// <param name="adminMemberSeq"></param>
        /// <returns></returns>
        public AlibabaAeUserauthQueryMerchantCertificationInfoResponse AlibabaAeUserauthQueryMerchantCertificationInfo(long adminMemberSeq)
        {
            var str = StrClient.alibaba_ae_userauth_queryMerchantCertificationInfo(adminMemberSeq);
            return this.DeserializeObject<AlibabaAeUserauthQueryMerchantCertificationInfoResponse>(str);
        }
        /// <summary>
        /// 保修相关API接口，故从纠纷类调整至保修类API。
        /// </summary>
        /// <param name="supplierId">供应商id</param>
        /// <param name="startBuyTime">服务购买开始时间</param>
        /// <param name="endBuyTime">服务购买结束时间</param>
        /// <param name="startCreateTime">服务判定生效开始时间</param>
        /// <param name="endCreateTime">服务判定生效结束时间</param>
        /// <param name="pageSize">每页获取条数<value>50</value><example>200</example></param>
        /// <param name="pageNo">页码<value>1</value><example>1</example></param>
        /// <returns></returns>
        public AlibabaAeWarrantieGetListResponse AlibabaAeWarrantieGetList(string supplierId, string startBuyTime = null, string endBuyTime = null, string startCreateTime = null, string endCreateTime = null, int? pageSize = null, int? pageNo = null)
        {
            var str = StrClient.alibaba_ae_warrantie_getList(supplierId, startBuyTime, endBuyTime, startCreateTime, endCreateTime, pageSize, pageNo);
            return this.DeserializeObject<AlibabaAeWarrantieGetListResponse>(str);
        }
        /// <summary>
        /// 多语言原发接口。卖家可以通过这个接口发布一个多语言商品。一次只能发布一种多语言商品，例如：俄文。
        /// </summary>
        /// <param name="detail">Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example><ul> <li> <h2 style="padding: 5px;"> product details </h2> </li></ul><div> <div>  <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i1/TB1h8QnHpXXXXbgXFXXXXXXXXXX_!!0-item_pic.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p> </div>  <div>   <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i1/1829426776/TB2VKM4cXXXXXaFXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <div>   <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i3/1829426776/TB21v3GcXXXXXaeXpXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <div>   <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i3/1829426776/TB2tkMGcXXXXXaFXpXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <p> <img src="http: //img01.cp.aliimg.com/kissy/1.0.0/build/imglazyload/spaceball.gif" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <div>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i2/1829426776/TB2PXfDcpXXXXXvXpXXXXXXXXXX-1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i4/1829426776/TB27Y.QcXXXXXXtXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i2/1829426776/TB2L5cMcXXXXXbFXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i2/1829426776/TB2P_7LcXXXXXciXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div></div><div style="margin: 10px;padding-top: 10px;width: 580px;">  <ul>   <li> <h2 style="padding: 5px;"> size information </h2> </li>  </ul>  <p style="line-height: 16px;"> note : the following information is for reference only . please contact the seller to get the detailed information . </p>  <p> <img src="http: //img.alibaba.com/images/cms/upload/seller/product/01size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <p> <img src="http: //img.alibaba.com/images/cms/upload/seller/product/02size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <p> <img src="http: //img.alibaba.com/images/cms/upload/seller/product/03size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p></div><p>   </p><p>   </p></example></param>
        /// <param name="aeopAeProductSKUs">列表类型，以json格式来表达。参看aeopAeProductSKUs数据结构。特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[;        ;{;            ;"ipmSkuStock": 10,;            ;"skuPrice": "11.00",;            ;"aeopSKUProperty": [;                ;{;                    ;"propertyValueId": 193,;                    ;"skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg",;                    ;"propertyValueDefinitionName": "balck",;                    ;"skuPropertyId": 200000182;                },;                ;{;                    ;"propertyValueId": 201336100,;                    ;"skuPropertyId": 200007763;                };            ],;            ;"skuCode": "11234";        };    ]</example></param>
        /// <param name="deliveryTime">备货期。取值范围:1-60;单位:天。<example>7</example></param>
        /// <param name="promiseTemplateId">服务模板设置。（需和服务模板查询接口api.queryPromiseTemplateById进行关联使用）<example>100</example></param>
        /// <param name="categoryId">商品所属类目ID。必须是叶子类目，通过类目接口获取。<example>200002101</example></param>
        /// <param name="subject">商品标题  长度在1-128之间英文。<example>knew odd of test</example></param>
        /// <param name="productPrice">商品一口价。取值范围:0-100000,保留两位小数;单位:美元。如:200.07，表示:200美元7分。需要在正确的价格区间内。上传多属性产品的时候，有好几个SKU和价格，productprice无需填写。<example>11.00</example></param>
        /// <param name="freightTemplateId">运费模版ID。通过运费接口listFreightTemplate获取。<example>703476858</example></param>
        /// <param name="imageURLs">产品的主图URL列表。如果这个产品有多张主图，那么这些URL之间使用英文分号(";")隔开。;一个产品最多只能有6张主图。图片格式JPEG，文件大小5M以内；图片像素建议大于800*800；横向和纵向比例建议1:1到1:1.3之间；图片中产品主体占比建议大于70%；背景白色或纯色，风格统一；如果有LOGO，建议放置在左上角，不宜过大。;;不建议自行添加促销标签或文字。切勿盗用他人图片，以免受网规处罚。更多说明请至http://seller.aliexpress.com/so/tupianguifan.php进行了解。<example>http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg</example></param>
        /// <param name="productUnit">商品单位 (存储单位编号) ;100000000:袋 (bag/bags);100000001:桶 (barrel/barrels);100000002:蒲式耳 (bushel/bushels);100078580:箱 (carton);100078581:厘米 (centimeter);100000003:立方米 (cubic meter);100000004:打 (dozen);100078584:英尺 (feet);100000005:加仑 (gallon);100000006:克 (gram);100078587:英寸 (inch);100000007:千克 (kilogram);100078589:千升 (kiloliter);100000008:千米 (kilometer);100078559:升 (liter/liters);100000009:英吨 (long ton);100000010:米 (meter);100000011:公吨 (metric ton);100078560:毫克 (milligram);100078596:毫升 (milliliter);100078597:毫米 (millimeter);100000012:盎司 (ounce);100000014:包 (pack/packs);100000013:双 (pair);100000015:件/个 (piece/pieces);100000016:磅 (pound);100078603:夸脱 (quart);100000017:套 (set/sets);100000018:美吨 (short ton);100078606:平方英尺 (square feet);100078607:平方英寸 (square inch);100000019:平方米 (square meter);100078609:平方码 (square yard);100000020:吨 (ton);100078558:码 (yard/yards)<example>100000000</example></param>
        /// <param name="packageType">打包销售: true 非打包销售:false<example>false</example></param>
        /// <param name="lotNum">每包件数。  打包销售情况，lotNum>1,非打包销售情况,lotNum=1<example>1</example></param>
        /// <param name="packageLength">商品包装长度。取值范围:1-700,单位:厘米。产品包装尺寸的最大值+2×（第二大值+第三大值）不能超过2700厘米。<example>20</example></param>
        /// <param name="packageWidth">商品包装宽度。取值范围:1-700,单位:厘米。<example>30</example></param>
        /// <param name="packageHeight">商品包装高度。取值范围:1-700,单位:厘米。<example>40</example></param>
        /// <param name="grossWeight">商品毛重,取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>10.020</example></param>
        /// <param name="isPackSell">是否自定义计重.true为自定义计重,false反之.<example>false</example></param>
        /// <param name="baseUnit">isPackSell为true时,此项必填。购买几件以内不增加运费。取值范围1-1000<example>1</example></param>
        /// <param name="addUnit">isPackSell为true时,此项必填。  每增加件数.取值范围1-1000。<example>2</example></param>
        /// <param name="addWeight">isPackSell为true时,此项必填。  对应增加的重量.取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>3.03</example></param>
        /// <param name="wsValidNum">商品有效天数。取值范围:1-30,单位:天。<example>30</example></param>
        /// <param name="aeopAeProductPropertys">产品属性，以json格式进行封装后提交。参看aeopAeProductPropertys数据结构。此字段是否必填，需从类目接口getChildAttributesResultByPostCateIdAndPath获取（即获取到的required来判断属性是否必填），该项只输入普通类目属性数据，不可输入sku类目属性。 对于类目属性包含子类目属性的情况，此处不确认父属性和子属性，即选择任何属性，都以该对象提交。 对于一个属性多个选中值的情况，以多个该对象存放。 其中"attrNameId","attrValueId"为整型(Integer), "attrName", "attrValue"为字符串类型(String)。 1. 当设置一些系统属性时，如果类目自定义了一些候选值，只需要提供"attrNameId"和"attrValueId"即可。例如：{"attrNameId":494, "attrValueId":284}。 2. 当设置一些需要手工输入属性内容时，只需要提供"attrNameId"和"attrValue"即可。例如：{"attrNameId": 1000, "attrValue": "test"} 3. 当设置自定义属性时，需要提供"attrName"和"attrValue"即可。例如: {"attrName": "Color", "attrValue": "red"} 4. 当设置一个Other属性时，需要提供"attrNameId", "attrValueId", "attrValue"三个参数。例如：{"attrNameId": 1000, "attrValueId": 4, "attrValue": "Other Value"}。<example>[;        ;{;            ;"attrNameId": 2,;            ;"attrValue": "STD";        },;        ;{;            ;"attrValueId": 200004894,;            ;"attrNameId": 175;        },;        ;{;            ;"attrValueId": 200660860,;            ;"attrNameId": 186;        };    ]</example></param>
        /// <param name="bulkOrder">批发最小数量 。取值范围2-100000。批发最小数量和批发折扣需同时有值或无值。<example>5</example></param>
        /// <param name="bulkDiscount">批发折扣。扩大100倍，存整数。取值范围:1-99。注意：这是折扣，不是打折率。 如,打68折,则存32。批发最小数量和批发折扣需同时有值或无值。<example>90</example></param>
        /// <param name="sizechartId">尺码表模版ID。必须选择当前类目下的尺码模版。<example>100</example></param>
        /// <param name="reduceStrategy">库存扣减策略，总共有2种：下单减库存(place_order_withhold)和支付减库存(payment_success_deduct)。<example>place_order_withhold或payment_success_deduct</example></param>
        /// <param name="groupId">这个产品需要关联的产品分组ID. 只能关联一个产品分组，如果想关联多个产品分组，请使用api.setGroups接口。<example>124</example></param>
        /// <param name="currencyCode">货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。<example>USD;RUB</example></param>
        /// <param name="couponStartDate">卡券商品开始有效期<example>20160119113420000+0800</example></param>
        /// <param name="couponEndDate">卡券商品结束有效期<example>20160124113420000+0800</example></param>
        /// <param name="multilanguageSubject">多语言标题，长度不能超过218个字符。<example>Название нескольких языков</example></param>
        /// <param name="multilanguageDetail">多语言详描，长度不能超过90000个字符。<example>Многоязычный подробное описание</example></param>
        /// <param name="localeName">多语言语种。当前支持的语种有：ru_RU(俄语)、pt_BR(葡萄牙语)、fr_FR(法语)、es_ES(西班牙语)、in_ID(印度尼西亚语)、it_IT(意大利语)、de_DE(德语)、nl_NL(荷兰语)、tr_TR(土耳其语)、iw_IL(以色列语)、ja_JP(日语)、ar_MA(阿拉伯语)、th_TH(泰语)、vi_VN(越南语)、ko_KR(韩语)、pl_PL(波兰语)<example>ru_RU</example></param>
        /// <param name="useAutoTrans">是否使用自动翻译，如果带上这个参数，则localeName必须为ru_RU，并且会自动把多语言标题和描述通过机器翻译自动翻译成英文，覆盖传人的英文描述和标题里面<example>true</example></param>
        /// <param name="aeopNationalQuoteConfiguration">商品分国家报价的配置</param>
        /// <returns></returns>
        public AlibabaProductPostMultilanguageAeProductResponse AlibabaProductPostMultilanguageAeProduct(string detail, string aeopAeProductSKUs, int categoryId, string subject, string imageURLs, string aeopAeProductPropertys, string multilanguageSubject, string multilanguageDetail, string localeName, int? deliveryTime = null, long? promiseTemplateId = null, string productPrice = null, int? freightTemplateId = null, int? productUnit = null, bool? packageType = null, int? lotNum = null, int? packageLength = null, int? packageWidth = null, int? packageHeight = null, string grossWeight = null, bool? isPackSell = null, int? baseUnit = null, int? addUnit = null, string addWeight = null, int? wsValidNum = null, int? bulkOrder = null, int? bulkDiscount = null, long? sizechartId = null, string reduceStrategy = null, long? groupId = null, string currencyCode = null, System.DateTimeOffset? couponStartDate = null, System.DateTimeOffset? couponEndDate = null, bool? useAutoTrans = null, string aeopNationalQuoteConfiguration = null)
        {
            var str = StrClient.alibaba_product_postMultilanguageAeProduct(detail, aeopAeProductSKUs, categoryId, subject, imageURLs, aeopAeProductPropertys, multilanguageSubject, multilanguageDetail, localeName, deliveryTime, promiseTemplateId, productPrice, freightTemplateId, productUnit, packageType, lotNum, packageLength, packageWidth, packageHeight, grossWeight, isPackSell, baseUnit, addUnit, addWeight, wsValidNum, bulkOrder, bulkDiscount, sizechartId, reduceStrategy, groupId, currencyCode, couponStartDate, couponEndDate, useAutoTrans, aeopNationalQuoteConfiguration);
            return this.DeserializeObject<AlibabaProductPostMultilanguageAeProductResponse>(str);
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID，即关系ID<example>334455556</example></param>
        /// <param name="buyerId">买家账号<example>uk33445</example></param>
        /// <param name="content">内容<example>hello</example></param>
        /// <param name="msgSources">类型(message_center/order_msg)<value>message_center</value><example>message_center</example></param>
        /// <param name="imgPath">图片地址<example>http://g02.a.alicdn.com/kf/HTB1U07VIVXXXXaiaXXXq6xXFXXXu.jpg</example></param>
        /// <returns></returns>
        public EcResult AddMsg(string buyerId, string content, string msgSources, string channelId = null, string imgPath = null)
        {
            var str = StrClient.api_addMsg(buyerId, content, msgSources, channelId, imgPath);
            return this.DeserializeObject<EcResult>(str);
        }
        /// <summary>
        /// 运费计算
        /// </summary>
        /// <param name="length">长</param>
        /// <param name="width">宽</param>
        /// <param name="height">高</param>
        /// <param name="weight">毛重</param>
        /// <param name="count">数量</param>
        /// <param name="country">country</param>
        /// <param name="customPackWeight">是否为自定义打包计重,Y/N<example>Y</example></param>
        /// <param name="packBaseUnit">打包计重几件以内按单个产品计重,当isCustomPackWeight=Y时必选</param>
        /// <param name="packAddUnit">打包计重超过部分每增加件数,当isCustomPackWeight=Y时必选</param>
        /// <param name="packAddWeight">打包计重超过部分续重,当isCustomPackWeight=Y时必选</param>
        /// <param name="freightTemplateId">运费模板ID 必选</param>
        /// <param name="productPrice">产品价格</param>
        /// <returns></returns>
        public ApiCalculateFreightResponse CalculateFreight(int? length = null, int? width = null, int? height = null, double? weight = null, int? count = null, string country = null, bool? customPackWeight = null, int? packBaseUnit = null, int? packAddUnit = null, double? packAddWeight = null, int? freightTemplateId = null, decimal? productPrice = null)
        {
            var str = StrClient.api_calculateFreight(length, width, height, weight, count, country, customPackWeight, packBaseUnit, packAddUnit, packAddWeight, freightTemplateId, productPrice);
            return this.DeserializeObject<ApiCalculateFreightResponse>(str);
        }
        /// <summary>
        /// 通过淘宝产品的url进行单品认领（URL需做代码转译。)
        /// </summary>
        /// <param name="url">淘宝或者天猫产品的detail url<example>http://detail.tmall.com/item.htm?spm=a2106.m861.1000384.1.vxsG6t&id=13187863348&source=dou&scm=1029.newlist-0.tagbeta.50000582&ppath=&sku=&ug=</example></param>
        /// <returns></returns>
        public ApiClaimTaobaoProducts4APIResponse ClaimTaobaoProducts4API(string url)
        {
            var str = StrClient.api_claimTaobaoProducts4API(url);
            return this.DeserializeObject<ApiClaimTaobaoProducts4APIResponse>(str);
        }
        /// <summary>
        /// 创建一个新的产品分组.一个用户的一级分组最多有10个，二级分组最多有10个。
        /// </summary>
        /// <param name="name">分组的名称, 请控制在1～50个英文字符之内。<example>foo</example></param>
        /// <param name="parentId">父分组的ID。如果为0则表示创建根分组，否则创建指定分组下的二级分组。<example>0或者100</example></param>
        /// <returns></returns>
        public ApiCreateProductGroupResponse CreateProductGroup(string name, long parentId)
        {
            var str = StrClient.api_createProductGroup(name, parentId);
            return this.DeserializeObject<ApiCreateProductGroupResponse>(str);
        }
        /// <summary>
        /// 创建线上发货物流订单
        /// 关于中国邮政平常小包 使用说明请参见http://seller.aliexpress.com/so/onlinelogistics_postbj.php
        /// 中国邮政平常小包 获取国际跟踪单号请通过http://gw.api.alibaba.com/dev/doc/api.htm?ns=aliexpress.open
        /// </summary>
        /// <param name="tradeOrderId">交易订单号<example>60000970354018</example></param>
        /// <param name="tradeOrderFrom">交易订单来源,AE订单为ESCROW ；<example>ESCROW</example></param>
        /// <param name="warehouseCarrierService">”根据订单号获取线上发货物流方案“API获取用户选择的实际发货物流服务（物流服务key,即仓库服务名称)例如：HRB_WLB_ZTOGZ是 中俄航空 Ruston广州仓库； ;HRB_WLB_RUSTONHEB为哈尔滨备货仓暂不支持，该渠道请做忽略。<example>CPAM_WLB_FPXSZ;CPAM_WLB_CPHSH;CPAM_WLB_ZTOBJ;HRB_WLB_ZTOGZ;HRB_WLB_ZTOSH</example></param>
        /// <param name="domesticLogisticsCompanyId">国内快递ID<example>505(物流公司是other时,ID为-1)</example></param>
        /// <param name="domesticLogisticsCompany">国内快递公司名称<example>物流公司Id为-1时,必填</example></param>
        /// <param name="domesticTrackingNo">国内快递运单号,长度1-32<example>123231231</example></param>
        /// <param name="remark">备注</param>
        /// <param name="declareProductDTOs">申报产品信息,列表类型，以json格式来表达。{productId为产品ID(必填,如为礼品,则设置为0);categoryCnDesc为申报中文名称(必填,长度1-20);categoryEnDesc为申报英文名称(必填,长度1-60);productNum产品件数(必填1-999);productDeclareAmount为产品申报金额(必填,0.01-10000.00);productWeight为产品申报重量(必填0.001-2.000);isContainsBattery为是否包含锂电池(必填0/1);scItemId为仓储发货属性代码（团购订单，仓储发货必填，物流服务为RUSTON 哈尔滨备货仓 HRB_WLB_RUSTONHEB，属性代码对应AE商品的sku属性一级，暂时没有提供接口查询属性代码，可以在仓储管理--库存管理页面查看，例如： 团购产品的sku属性White对应属性代码 40414943126）;skuValue为属性名称（团购订单，仓储发货必填，例如：White）;hsCode为产品海关编码，获取相关数据请至：http://www.customs.gov.cn/Tabid/67737/Default.aspx};isAneroidMarkup为是否含非液体化妆品（必填，填0代表不含非液体化妆品；填1代表含非液体化妆品；默认为0）;isOnlyBattery为是否含纯电池产品（必填，填0代表不含纯电池产品；填1代表含纯电池产品；默认为0）;<example>[;    {;        "categoryCnDesc": "小米手机",;        "categoryEnDesc": "xiaomi Phone",;        "isContainsBattery": 1,;        "productDeclareAmount": 1,;        "productId": 20003,;        "productNum": 1,;        "productWeight": 10,;        "hsCode": 12345678,;        "isAneroidMarkup": 0,;        "isOnlyBattery": 1;    },;    {;        "categoryCnDesc": "MP3",;        "categoryEnDesc": "MP3",;        "isContainsBattery": 0,;        "productDeclareAmount": 2,;        "productId": 0,;        "productNum": 4,;        "productWeight": 20,;        "hsCode": 12345678,;        "isAneroidMarkup": 1,;        "isOnlyBattery": 0;    };]</example></param>
        /// <param name="addressDTOs">地址信息,包含发货人地址,收货人地址，揽收地址（可选），退货地址（可选）。发货人地址key值是sender; 收货人地址key值是receiver,都必填{country为国家简称,必填;province为省/州,（必填，长度限制1-48字节）;city为城市,（必填，长度限制1-48，可以直接填写城市信息）,county为区县，（收货人地址中不需要填写，发货人地址必填，长度限制1-20字节）；street为街道 ,（选填，长度限制1-90字节）streetAddress为详细地址 ,（必填，长度限制1-90字节）;name为姓名,（必填，长度限制1-90字节）;phone,mobile两者二选一,phone（长度限制1- 54字节）;mobile（长度限制1-30字节）;email邮箱非必填（长度限制1-64字节）;trademanageId旺旺（非必填，长度限制1-32字节）; addressId: 由getLogisticsSellerAddress API获取的卖家后台地址中的addressId带入，必填；如果是中俄航空Ruston需要揽收的订单，则再添加揽收地址信息，key值是pickup,字段同上，内容必须是中文（如无需揽收，则不必传pickup的值）。升级后只有传入Long型的addressId有效，其它字段的值无效。<example>{"receiver":{"city":"Russian City","country":"BR","email":"db1007825240@alibaba.com","fax":"23 3423 324","memberType":"receiver","mobile":"123123","name":"Mrs.Kson","phone":"23 05 1231232","postcode":"123456","province":"Russian State","streetAddress":"abasa basd basd ","trademanageId":"db1007825240"},"sender":{"city":"310100","country":"CN","county":"310115","email":"hjy_seller@aliqatest.com","memberType":"sender","name":"lisi","phone":"123123123","postcode":"310052","province":"310100","streetAddress":"dong da jie No.123","trademanageId":"hjy_seller"},"refund": {"addressId": "12345"}}</example></param>
        /// <param name="undeliverableDecision">不可达处理(退回:0/销毁:1);目前因部分ISV还未升级，系统文档中该参数当前设置为可选，默认值为-1。请ISV升级时，将参数设置为必选，默认值为1，否则将影响9月28日之后的发货功能。详情请参考：http://bbs.seller.aliexpress.com/bbs/read.php?tid=514111<value>-1</value><example>0</example></param>
        /// <param name="packageNum">包裹数量： 创建国家小包订单时非必填，创建国家快递订单时必填</param>
        /// <returns></returns>
        public ApiCreateWarehouseOrderResponse CreateWarehouseOrder(long tradeOrderId, string tradeOrderFrom, string warehouseCarrierService, long domesticLogisticsCompanyId, string domesticTrackingNo, string declareProductDTOs, string addressDTOs, string domesticLogisticsCompany = null, string remark = null, int? undeliverableDecision = null, int? packageNum = null)
        {
            var str = StrClient.api_createWarehouseOrder(tradeOrderId, tradeOrderFrom, warehouseCarrierService, domesticLogisticsCompanyId, domesticTrackingNo, declareProductDTOs, addressDTOs, domesticLogisticsCompany, remark, undeliverableDecision, packageNum);
            return this.DeserializeObject<ApiCreateWarehouseOrderResponse>(str);
        }
        /// <summary>
        /// 删除用户图片银行中未被引用的图片信息
        /// </summary>
        /// <param name="imageRepositoryId">图片ID(通过“图片银行列表分页查询”接口进行获取，出参中“ iid:图片”为图片ID。<example>100403959</example></param>
        /// <returns></returns>
        public ApiDelUnUsePhotoResponse DelUnUsePhoto(long imageRepositoryId)
        {
            var str = StrClient.api_delUnUsePhoto(imageRepositoryId);
            return this.DeserializeObject<ApiDelUnUsePhotoResponse>(str);
        }
        /// <summary>
        /// 商品编辑接口（修改任何一个商品信息时，必须将其他所有信息进行填写全面后再提交，否则会出现报错情况出现。）
        /// </summary>
        /// <param name="productId">编辑产品ID<example>1239273</example></param>
        /// <param name="detail">Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>detail html block</example></param>
        /// <param name="aeopAeProductSKUs">列表类型，以json格式来表达。参看aeopAeProductSKUs数据结构。特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[ { "ipmSkuStock": 10, "skuPrice": "11.00", "aeopSKUProperty": [ { "propertyValueId": 193, "skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg", "propertyValueDefinitionName": "balck", "skuPropertyId": 200000182 }, { "propertyValueId": 201336100, "skuPropertyId": 200007763 } ], "skuCode": "11234" } ]</example></param>
        /// <param name="deliveryTime">备货期。取值范围:1-60;单位:天。<example>3</example></param>
        /// <param name="categoryId">商品所属类目ID。必须是叶子类目，通过类目接口获取。<example>200002101</example></param>
        /// <param name="subject">商品标题  长度在1-128之间英文。<example>knew odd</example></param>
        /// <param name="promiseTemplateId">服务模板ID。如果不填，则为新手模板ID。<example>100</example></param>
        /// <param name="productPrice">商品一口价。取值范围:0-100000,保留两位小数;单位:美元。如:200.07，表示:200美元7分。需要在正确的价格区间内。<example>10.11</example></param>
        /// <param name="freightTemplateId">运费模版ID。通过运费接口listFreightTemplate获取。<example>703476858</example></param>
        /// <param name="imageURLs">图片URL.静态单图主图个数为1,动态多图主图个数为2-6.可从图片接口uploadTempImage上传，也可以从图片银行引入.  多个图片url用‘;’分隔符连接。<example>http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg</example></param>
        /// <param name="productUnit">商品单位 (存储单位编号) ;100000000:袋 (bag/bags);100000001:桶 (barrel/barrels);100000002:蒲式耳 (bushel/bushels);100078580:箱 (carton);100078581:厘米 (centimeter);100000003:立方米 (cubic meter);100000004:打 (dozen);100078584:英尺 (feet);100000005:加仑 (gallon);100000006:克 (gram);100078587:英寸 (inch);100000007:千克 (kilogram);100078589:千升 (kiloliter);100000008:千米 (kilometer);100078559:升 (liter/liters);100000009:英吨 (long ton);100000010:米 (meter);100000011:公吨 (metric ton);100078560:毫克 (milligram);100078596:毫升 (milliliter);100078597:毫米 (millimeter);100000012:盎司 (ounce);100000014:包 (pack/packs);100000013:双 (pair);100000015:件/个 (piece/pieces);100000016:磅 (pound);100078603:夸脱 (quart);100000017:套 (set/sets);100000018:美吨 (short ton);100078606:平方英尺 (square feet);100078607:平方英寸 (square inch);100000019:平方米 (square meter);100078609:平方码 (square yard);100000020:吨 (ton);100078558:码 (yard/yards)<example>100000000</example></param>
        /// <param name="packageType">打包销售: true 非打包销售:false<example>false</example></param>
        /// <param name="lotNum">每包件数。  打包销售情况，lotNum>1,非打包销售情况,lotNum=1<example>1</example></param>
        /// <param name="packageLength">商品包装长度。取值范围:1-700,单位:厘米。产品包装尺寸的最大值+2×（第二大值+第三大值）不能超过2700厘米。<example>20</example></param>
        /// <param name="packageWidth">商品包装宽度。取值范围:1-700,单位:厘米。<example>30</example></param>
        /// <param name="packageHeight">商品包装高度。取值范围:1-700,单位:厘米。<example>40</example></param>
        /// <param name="grossWeight">商品毛重,取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>50</example></param>
        /// <param name="isPackSell">是否自定义计重.true为自定义计重,false反之.<example>false</example></param>
        /// <param name="baseUnit">isPackSell为true时,此项必填。购买几件以内不增加运费。取值范围1-1000<example>1</example></param>
        /// <param name="addUnit">isPackSell为true时,此项必填。  每增加件数.取值范围1-1000。<example>2</example></param>
        /// <param name="addWeight">isPackSell为true时,此项必填。  对应增加的重量.取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>30.11</example></param>
        /// <param name="wsValidNum">商品有效天数。取值范围:1-30,单位:天。<example>30</example></param>
        /// <param name="aeopAeProductPropertys">产品属性，以json格式进行封装后提交。参看aeopAeProductPropertys数据结构。此字段是否必填，需从类目接口getAttributesResultByCateId获取（即获取到的required来判断属性是否必填），该项只输入普通类目属性数据，不可输入sku类目属性。;对于类目属性包含子类目属性的情况，此处不确认父属性和子属性，即选择任何属性，都以该对象提交。;对于一个属性多个选中值的情况，以多个该对象存放。;其中"attrNameId","attrValueId"为整型(Integer), "attrName", "attrValue"为字符串类型(String)。;         i).  当设置一些系统属性时，如果类目自定义了一些候选值，只需要提供"attrNameId"和"attrValueId"即可。例如：{"attrNameId":494, "attrValueId":284}。;         ii). 当设置一些需要手工输入属性内容时，只需要提供"attrNameId"和"attrValue"即可。例如：{"attrNameId": 1000, "attrValue": "test"};         iii）当设置自定义属性时，需要提供"attrName"和"attrValue"即可。例如: {"attrName": "Color", "attrValue": "red"};         iv） 当设置一个Other属性时，需要提供"attrNameId", "attrValueId", "attrValue"三个参数。例如：{"attrNameId": 1000, "attrValueId": 4, "attrValue": "Other Value"}。<example>"aeopAeProductPropertys": [;      {;         "attrValueId": 494,;         "attrNameId": 284;      },;      {;         "attrValueId": 200004213,;         "attrNameId": 200000309;      },;      {;         "attrValueId": 1875,;         "attrNameId": 200000303;      },;      {;         "attrName": "Modeling clothing",;         "attrValue": "slim";      },;      {;         "attrName": "clothes design details",;         "attrValue": "wool collar";      };]</example></param>
        /// <param name="bulkOrder">批发最小数量 。取值范围2-100000。批发最小数量和批发折扣需同时有值或无值。<example>5</example></param>
        /// <param name="bulkDiscount">批发折扣。扩大100倍，存整数。取值范围:1-99。注意：这是折扣，不是打折率。 如,打68折,则存32。批发最小数量和批发折扣需同时有值或无值。<example>90</example></param>
        /// <param name="groupId">产品分组ID<example>123</example></param>
        /// <param name="reduceStrategy">库存扣减策略<example>place_order_withhold或payment_success_deduct</example></param>
        /// <param name="currencyCode">货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。<example>USD;RUB</example></param>
        /// <param name="couponStartDate"></param>
        /// <param name="couponEndDate"></param>
        /// <param name="mobileDetail">mobile Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>mobile Detail html block</example></param>
        /// <param name="aeopAEMultimedia">商品多媒体信息，该属性主要包含商品的视频列表<example>"aeopAEMultimedia":{"aeopAEVideos":[{"mediaId":30994083,"posterUrl":"http://img02.taobaocdn.com/bao/uploaded/TB16e9MJVXXXXacXVXXXXXXXXXX.jpg","mediaStatus":"approved","mediaType":"video","aliMemberId":225671041}]}</example></param>
        /// <param name="aeopNationalQuoteConfiguration">商品分国家报价的配置<example>如果需要删除分国家报价，只需将该对象的属性值设为空串：{"configurationType":"","configurationData":""}</example></param>
        /// <returns></returns>
        public ApiEditAeProductResponse EditAeProduct(string productId, string detail, string aeopAeProductSKUs, int categoryId, string subject, string imageURLs, string aeopAeProductPropertys, int? deliveryTime = null, long? promiseTemplateId = null, string productPrice = null, int? freightTemplateId = null, int? productUnit = null, bool? packageType = null, int? lotNum = null, int? packageLength = null, int? packageWidth = null, int? packageHeight = null, string grossWeight = null, bool? isPackSell = null, int? baseUnit = null, int? addUnit = null, string addWeight = null, int? wsValidNum = null, int? bulkOrder = null, int? bulkDiscount = null, long? groupId = null, string reduceStrategy = null, string currencyCode = null, System.DateTimeOffset? couponStartDate = null, System.DateTimeOffset? couponEndDate = null, string mobileDetail = null, string aeopAEMultimedia = null, string aeopNationalQuoteConfiguration = null)
        {
            var str = StrClient.api_editAeProduct(productId, detail, aeopAeProductSKUs, categoryId, subject, imageURLs, aeopAeProductPropertys, deliveryTime, promiseTemplateId, productPrice, freightTemplateId, productUnit, packageType, lotNum, packageLength, packageWidth, packageHeight, grossWeight, isPackSell, baseUnit, addUnit, addWeight, wsValidNum, bulkOrder, bulkDiscount, groupId, reduceStrategy, currencyCode, couponStartDate, couponEndDate, mobileDetail, aeopAEMultimedia, aeopNationalQuoteConfiguration);
            return this.DeserializeObject<ApiEditAeProductResponse>(str);
        }
        /// <summary>
        /// 原发编辑商品多语言标题或详描描述（英文版本除外）。试用
        /// </summary>
        /// <param name="productId">待编辑的商品ID。<example>32234411234</example></param>
        /// <param name="locale">语种，合法的参数有: ru_RU(俄语);pt_BR(葡语);fr_FR(法语);es_ES(西班牙语);in_ID(印尼语);it_IT(意大利语);de_DE(德语);nl_NL(荷兰语);tr_TR(土耳其语);iw_IL(以色列语);ja_JP(日语);ar_MA(阿拉伯语);th_TH(泰语);vi_VN(越南语);ko_KR(韩语);<example>ru_RU</example></param>
        /// <param name="subject">商品对应语种的标题, 长度控制在1～218个字符之间。<example>foo</example></param>
        /// <param name="detail">商品对应语种的详描<example>bar</example></param>
        /// <param name="mobileDetail">商品对应语种的无线端详描（json格式），如要清空无线详描请传""空串<example>{;    "mobileDetail": [;        {;            "content": "context1",;            "type": "text";        },;        {;            "col": 1,;            "images": [;                {;                    "height":500,;                    "imgUrl": "https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg",;                    "width":500,;                    "targetUrl":"https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg";                },;                {;                    "imgUrl": "https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg",;                    "targetUrl":"https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg";                };            ],;            "type": "image";        },;        {;            "content": "context3",;            "type": "text";        };    ],;    "version": "1.0",;    "versionNum": 1;}</example></param>
        /// <returns></returns>
        public ApiEditMultilanguageProductResponse EditMultilanguageProduct(long productId, string locale, string subject = null, string detail = null, string mobileDetail = null)
        {
            var str = StrClient.api_editMultilanguageProduct(productId, locale, subject, detail, mobileDetail);
            return this.DeserializeObject<ApiEditMultilanguageProductResponse>(str);
        }
        /// <summary>
        /// 编辑单个商品的一个或者多个SKU可售库存。将要修改的SKU的库存值保存在skuStocks参数中(Map类型数据)，其中key为SKU ID(字符串), value为对应的库存值(Long型)。
        /// </summary>
        /// <param name="productId">产品ID<example>32297192242</example></param>
        /// <param name="skuStocks">SKU的库存信息(一个或着多个)<example>{"14:200003699;5:100014064":240, "14:200003699;5:361386": 220}</example></param>
        /// <returns></returns>
        public ApiEditMutilpleSkuStocksResponse EditMutilpleSkuStocks(long productId, object skuStocks)
        {
            var str = StrClient.api_editMutilpleSkuStocks(productId, skuStocks);
            return this.DeserializeObject<ApiEditMutilpleSkuStocksResponse>(str);
        }
        /// <summary>
        /// 编辑商品的类目属性，用给定的类目属性覆盖原有的类目属性。(试用)
        /// </summary>
        /// <param name="productId">产品的ID<example>1706468951</example></param>
        /// <param name="productCategoryAttributes">该产品要修改的类目属性列表<example>[{"attrNameId":284, "attrValueId":491}, {"attrNameId":200000137,"attrValueId":7926}, {"attrName":"Color", "attrValue":"Red"}, {"attrName":"Additional", "attrValue":"Value"}]</example></param>
        /// <returns></returns>
        public ApiEditProductCategoryAttributesResponse EditProductCategoryAttributes(long productId, string productCategoryAttributes)
        {
            var str = StrClient.api_editProductCategoryAttributes(productId, productCategoryAttributes);
            return this.DeserializeObject<ApiEditProductCategoryAttributesResponse>(str);
        }
        /// <summary>
        /// 编辑产品类目、属性、sku
        /// </summary>
        /// <param name="productId">商品id，一次只能上传一个</param>
        /// <param name="categoryId">产品类目ID，如果不想调整类目，则不要填写。</param>
        /// <param name="productSkus">该产品新的类目SKU属性。如果没有指定categoryId, 则该SKU属性则为当前产品所属类目下的SKU属性，如果指定了categoryId, 则该SKU属性则为新类目下的SKU属性。;特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[ { "aeopSKUProperty" : [ { "propertyValueId" : 496,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 4181,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "asdfas",;        "skuPrice" : "999.00",;        "skuStock" : true,;        "ipmSkuStock":"100";      },;      { "aeopSKUProperty" : [ { "propertyValueId" : 771,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 100014066,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "fasdf",;        "skuPrice" : "999.00",;        "skuStock" : true;      },;      { "aeopSKUProperty" : [ { "propertyValueId" : 496,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 100014066,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "fasdfa",;        "skuPrice" : "999.00",;        "skuStock" : true;      },;      { "aeopSKUProperty" : [ { "propertyValueId" : 771,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 4181,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "sfas",;        "skuPrice" : "999.00",;        "skuStock" : true,;        "ipmSkuStock":"100";      };    ]</example></param>
        /// <param name="productProperties">该产品新的类目属性。如果没有指定categoryId, 则该类目属性则为当前产品所属类目下的类目属性，如果指定了categoryId, 则该类目属性则为新类目下的类目属性。<example>[ { "attrNameId" : 200000137,;        "attrValueId" : 200001645;      },;      { "attrNameId" : 200000332,;        "attrValueId" : 1927;      },;      { "attrNameId" : 284,;        "attrValueId" : 494;      };    ]</example></param>
        /// <returns></returns>
        public ApiEditProductCidAttIdSkuResponse EditProductCidAttIdSku(long productId, long? categoryId = null, string productSkus = null, string productProperties = null)
        {
            var str = StrClient.api_editProductCidAttIdSku(productId, categoryId, productSkus, productProperties);
            return this.DeserializeObject<ApiEditProductCidAttIdSkuResponse>(str);
        }
        /// <summary>
        /// 编辑商品的单个字段(目前使用api.editSimpleProductFiled这个接口 暂不支持商品分组、商品属性、SKU、服务模板的修改。请注意！)
        /// </summary>
        /// <param name="productId">指定编辑产品的id<example>id=1234</example></param>
        /// <param name="fiedName">编辑的字段名称，为以下字段内容里的其中一项, 可以编辑的字段包括: subject: 商品的标题; Detail: 商品的详细描述信息； deliveryTime: 备货期； groupId: 产品组； freightTemplateId: 运费模版； packageLength: 商品包装长度； packageWidth: 商品包装宽度； packageHeight：商品包装高度； grossWeight: 商品毛重； wsValidNum商品的有效天数；mobileDetail：无线详描;（注意：该字段的提交修改，数据生效时间：商品（到期或手动）下架再上架生效。”）; reduceStrategy: 库存扣减策略(总共有2种：下单减库存(place_order_withhold)和支付减库存(payment_success_deduct)。)<example>deliveryTime</example></param>
        /// <param name="fiedvalue">根据fiedName变化：fiedName=detail时，本字段是一段html字符串；fiedName=mobileDetail时，本字段的值是一段json字符串；fiedName=groupId时，本字段是一个产品分组唯一标识（数字类型）。<example>{;  "mobileDetail": [;  {;        "type": "text",;        "content": " POSTAGE<>:  We provide free express shipping via UPS / DHL / FEDEX / EMS / TNT / ARAMEX / for most of country when your orders around US$200 (please contact us if you have qustions). Delivery time around 4-7 days (business days).NOTE<>: We have only one store called 'TWOTWINSTYLE' on aliexpress. The products selling in other stores with same designs or photos are not from us. 'TWOTWINSTYLE' have their own separate production lines, all merchandise sold are exclusive and high quality.";      }; ],;  "version": "1.0",;  "versionNum": 1;}</example></param>
        /// <returns></returns>
        public ApiEditSimpleProductFiledResponse EditSimpleProductFiled(long productId, string fiedName, string fiedvalue)
        {
            var str = StrClient.api_editSimpleProductFiled(productId, fiedName, fiedvalue);
            return this.DeserializeObject<ApiEditSimpleProductFiledResponse>(str);
        }
        /// <summary>
        /// 编辑商品的单个SKU价格信息。
        /// </summary>
        /// <param name="productId">需修改编辑的商品ID<example>123456789</example></param>
        /// <param name="skuId">需修改编辑的商品单个SKUID。SKU ID可以通过api.findAeProductById接口中的aeopAeproductSKUs获取单个产品信息中"id"进行获取。 没有SKU属性的商品SKUID回传“<none>”<example>14:771;5:100014066</example></param>
        /// <param name="skuPrice">修改编辑后的商品价格<example>999</example></param>
        /// <returns></returns>
        public ApiEditSingleSkuPriceResponse EditSingleSkuPrice(long productId, string skuId, string skuPrice)
        {
            var str = StrClient.api_editSingleSkuPrice(productId, skuId, skuPrice);
            return this.DeserializeObject<ApiEditSingleSkuPriceResponse>(str);
        }
        /// <summary>
        /// 编辑商品单个SKU的库存信息.
        /// </summary>
        /// <param name="productId">需修改编辑的商品ID<example>32297192242</example></param>
        /// <param name="skuId">需修改编辑的商品单个SKUID。SKU ID可以通过api.findAeProductById接口中的aeopAeproductSKUs获取单个产品信息中"id"进行获取。<example>14:200003699;5:100014065</example></param>
        /// <param name="ipmSkuStock">SKU的库存值<example>299</example></param>
        /// <returns></returns>
        public ApiEditSingleSkuStockResponse EditSingleSkuStock(long productId, string skuId, long ipmSkuStock)
        {
            var str = StrClient.api_editSingleSkuStock(productId, skuId, ipmSkuStock);
            return this.DeserializeObject<ApiEditSingleSkuStockResponse>(str);
        }
        /// <summary>
        /// 查询待卖家评价的订单信息
        /// </summary>
        /// <param name="currentPage">当前页；</param>
        /// <param name="pageSize">每页显示记录数；</param>
        /// <param name="orderIds">订单ID，多个使用半角逗号分隔；</param>
        /// <returns></returns>
        public ApiEvaluationQuerySellerEvaluationOrderListResponse EvaluationQuerySellerEvaluationOrderList(int? currentPage = null, int? pageSize = null, string orderIds = null)
        {
            var str = StrClient.api_evaluation_querySellerEvaluationOrderList(currentPage, pageSize, orderIds);
            return this.DeserializeObject<ApiEvaluationQuerySellerEvaluationOrderListResponse>(str);
        }
        /// <summary>
        /// 卖家对未评价的订单进行评价
        /// </summary>
        /// <param name="orderId">订单编号</param>
        /// <param name="score">用户对主订单的打分</param>
        /// <param name="feedbackContent">卖家对未评价的订单进行评价(Max 1,000 characters. Please do not use HTML codes or Chinese characters.同时包括中文标点也不支持）</param>
        /// <returns></returns>
        public ApiEvaluationSaveSellerFeedbackResponse EvaluationSaveSellerFeedback(long orderId, int? score = null, string feedbackContent = null)
        {
            var str = StrClient.api_evaluation_saveSellerFeedback(orderId, score, feedbackContent);
            return this.DeserializeObject<ApiEvaluationSaveSellerFeedbackResponse>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">需要延长的订单ID。<example>1234567890</example></param>
        /// <param name="day">请求延长的具体天数。<example>30</example></param>
        /// <returns></returns>
        public OperationResult ExtendsBuyerAcceptGoodsTime(long orderId, int? day = null)
        {
            var str = StrClient.api_extendsBuyerAcceptGoodsTime(orderId, day);
            return this.DeserializeObject<OperationResult>(str);
        }
        /// <summary>
        /// 根据商品id查询单个商品的详细信息。
        /// </summary>
        /// <param name="productId">商品ID<example>1307422965</example></param>
        /// <returns></returns>
        public ApiFindAeProductByIdResponse FindAeProductById(long productId)
        {
            var str = StrClient.api_findAeProductById(productId);
            return this.DeserializeObject<ApiFindAeProductByIdResponse>(str);
        }
        /// <summary>
        /// 查询信息模板列表
        /// </summary>
        /// <param name="moduleStatus">要查询模块的状态，包含：tbd(审核不通过),auditing（审核中）,approved（审核通过）</param>
        /// <param name="type">要查询模块的类型，包含：custom（自定义模块）,relation（关联模块）</param>
        /// <param name="pageIndex">要查询当前页码，每页返回50条记录，从1开始</param>
        /// <returns></returns>
        public ApiFindAeProductDetailModuleListByQureyResponse FindAeProductDetailModuleListByQurey(string moduleStatus, int pageIndex, string type = null)
        {
            var str = StrClient.api_findAeProductDetailModuleListByQurey(moduleStatus, pageIndex, type);
            return this.DeserializeObject<ApiFindAeProductDetailModuleListByQureyResponse>(str);
        }
        /// <summary>
        /// 根据模块id查询模块，模块在detail详情中显示格式：<kse:widget data-widget-type="widget" id="1004" title="Specification " type="relation"></kse:widget>
        /// 标签属性id="1004"对应返回值中的id,标签属性type="relation"对应返回值中的type, 标签属性title="Specification "对应返回值中的name.
        /// </summary>
        /// <param name="moduleId">moduleId 对应商品详情中的kse标签中的id属性;如: id="1004"</param>
        /// <returns></returns>
        public ApiFindAeProductModuleByIdResponse FindAeProductModuleById(long moduleId)
        {
            var str = StrClient.api_findAeProductModuleById(moduleId);
            return this.DeserializeObject<ApiFindAeProductModuleByIdResponse>(str);
        }
        /// <summary>
        /// 调用发布商品接口api.postaeproduct前，针对商品标题等信息做违禁词相关信息查询接口。
        /// 当前支持的违禁词查询范围包括：1.商品的标题，2.商品的关键字, 3. 商品的类目属性, 4.商品的详细描述。用户提供以上四个参数以及商品的类目ID来查询标题、关键字、类目属性、详细描述中是否包含了当前类目的违禁词。
        /// 发布产品时平台提供的违禁词查询只供参考和引导的作用，同时由于是系统检测并不能判断实际词语应用的场景，所以还需请您不断仔细检查相关词语的应用情况，可点此进入知识产权的相关学习：http://seller.aliexpress.com/education/rules/ipr31.html?tracelog=ipr01zscqzq
        /// </summary>
        /// <param name="categoryId">商品类目ID<example>322</example></param>
        /// <param name="title">商品的标题<example>nike</example></param>
        /// <param name="keywords">商品的关键字列表<example>["nike", "shoes", "adidas"]</example></param>
        /// <param name="productProperties">商品的类目属性，只能填写字符形式的类目属性<example>["red", "nike", "shoes"]</example></param>
        /// <param name="detail">商品的详细描述<example>This is a test for the product.</example></param>
        /// <returns></returns>
        public ApiFindAeProductProhibitedWordsResponse FindAeProductProhibitedWords(int categoryId, string title = null, string[] keywords = null, string[] productProperties = null, string detail = null)
        {
            var str = StrClient.api_findAeProductProhibitedWords(categoryId, title, keywords, productProperties, detail);
            return this.DeserializeObject<ApiFindAeProductProhibitedWordsResponse>(str);
        }
        /// <summary>
        /// 查询商品状态，商品供三种状态。审核通过:approved;审核中:auditing;审核不通过:refuse
        /// </summary>
        /// <param name="productId">商品ID<example>32462942083</example></param>
        /// <returns></returns>
        public ApiFindAeProductStatusByIdResponse FindAeProductStatusById(long productId)
        {
            var str = StrClient.api_findAeProductStatusById(productId);
            return this.DeserializeObject<ApiFindAeProductStatusByIdResponse>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="page">当前页码.。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <param name="createDateStart">放款时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00</param>
        /// <param name="createDateEnd">放款时间截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00</param>
        /// <param name="loanStatus">订单放款状态：wait_loan 未放款，loan_ok已放款。<example>wait_loan</example></param>
        /// <param name="orderId">主订单id，一次只能查询一个</param>
        /// <returns></returns>
        public FundLoanListVO FindLoanListQuery(int page, int pageSize, string createDateStart = null, string createDateEnd = null, string loanStatus = null, long? orderId = null)
        {
            var str = StrClient.api_findLoanListQuery(page, pageSize, createDateStart, createDateEnd, loanStatus, orderId);
            return this.DeserializeObject<FundLoanListVO>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">订单ID。</param>
        /// <returns></returns>
        public OrderBaseInfo FindOrderBaseInfo(long orderId)
        {
            var str = StrClient.api_findOrderBaseInfo(orderId);
            return this.DeserializeObject<OrderBaseInfo>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">订单Id<example>30110902195804</example></param>
        /// <param name="fieldList">暂不支持。需要返回的订单对象字段。多个字段用“,”分隔。如果想返回整个子对象，该字段不设值。;目前支持以下字段：id,gmtCreate,orderStatus,sellerOperatorAliid,sellerOperatorLoginId,paymentType;,initOderAmount,orderAmount,escrowFee</param>
        /// <param name="extInfoBitFlag">暂不支持。扩展信息目前支持纠纷信息，放款信息，物流信息，买方信息和退款信息，分别对应二进制位1,2,3,4,5。例如，只查询纠纷信息和物流信息，extInfoBitFlag=10100；查询全部extInfoBitFlag=11111</param>
        /// <returns></returns>
        public TpOpenOrderDetailDTO FindOrderById(long orderId, string fieldList = null, int? extInfoBitFlag = null)
        {
            var str = StrClient.api_findOrderById(orderId, fieldList, extInfoBitFlag);
            return this.DeserializeObject<TpOpenOrderDetailDTO>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="page">当前页码<example>1</example></param>
        /// <param name="pageSize">每页个数，最大50<example>50</example></param>
        /// <param name="createDateStart">订单创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00;倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/01/2015 00:00:00</example></param>
        /// <param name="createDateEnd">订单创建时间结束值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00;倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/07/2015 00:00:00</example></param>
        /// <param name="orderStatus">订单状态：;PLACE_ORDER_SUCCESS:等待买家付款;;IN_CANCEL:买家申请取消;;WAIT_SELLER_SEND_GOODS:等待您发货;;SELLER_PART_SEND_GOODS:部分发货;;WAIT_BUYER_ACCEPT_GOODS:等待买家收货;;FUND_PROCESSING:买卖家达成一致，资金处理中；;IN_ISSUE:含纠纷中的订单;;IN_FROZEN:冻结中的订单;;WAIT_SELLER_EXAMINE_MONEY:等待您确认金额;;PAYMENT _PROCESSING:延迟扣款;;RISK_CONTROL:订单处于风控24小时中，从买家在线支付完成后开始，持续24小时。;以上状态查询可分别做单独查询，不传订单状态查询订单信息不包含（FINISH，已结束订单状态）;FINISH:已结束的订单，需单独查询。<example>PLACE_ORDER_SUCCESS</example></param>
        /// <returns></returns>
        public OrderListVO FindOrderListQuery(int page, int pageSize, string createDateStart = null, string createDateEnd = null, string orderStatus = null)
        {
            var str = StrClient.api_findOrderListQuery(page, pageSize, createDateStart, createDateEnd, orderStatus);
            return this.DeserializeObject<OrderListVO>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="page">当前页码<value>1</value><example>1</example></param>
        /// <param name="pageSize">每页个数，最大50<value>20</value><example>20</example></param>
        /// <param name="createDateStart">订单创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00 倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/01/2015 00:00:00</example></param>
        /// <param name="createDateEnd">订单创建时间结束值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00 倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/08/2015 00:00:00</example></param>
        /// <param name="orderStatus">订单状态： PLACE_ORDER_SUCCESS:等待买家付款; IN_CANCEL:买家申请取消; WAIT_SELLER_SEND_GOODS:等待您发货; SELLER_PART_SEND_GOODS:部分发货; WAIT_BUYER_ACCEPT_GOODS:等待买家收货; FUND_PROCESSING:买家确认收货后，等待退放款处理的状态; FINISH:已结束的订单; IN_ISSUE:含纠纷的订单; IN_FROZEN:冻结中的订单; WAIT_SELLER_EXAMINE_MONEY:等待您确认金额; RISK_CONTROL:订单处于风控24小时中，从买家在线支付完成后开始，持续24小时。<example>PLACE_ORDER_SUCCESS</example></param>
        /// <returns></returns>
        public SimpleOrderListVO FindOrderListSimpleQuery(int page, int pageSize, string createDateStart = null, string createDateEnd = null, string orderStatus = null)
        {
            var str = StrClient.api_findOrderListSimpleQuery(page, pageSize, createDateStart, createDateEnd, orderStatus);
            return this.DeserializeObject<SimpleOrderListVO>(str);
        }
        /// <summary>
        /// 收货地址
        /// </summary>
        /// <param name="orderId">订单ID</param>
        /// <returns></returns>
        public TpOpenAddressDTO FindOrderReceiptInfo(long orderId)
        {
            var str = StrClient.api_findOrderReceiptInfo(orderId);
            return this.DeserializeObject<TpOpenAddressDTO>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">订单ID<example>30025745255804</example></param>
        /// <returns></returns>
        public OrderTradeInfo FindOrderTradeInfo(long orderId)
        {
            var str = StrClient.api_findOrderTradeInfo(orderId);
            return this.DeserializeObject<OrderTradeInfo>(str);
        }
        /// <summary>
        /// 商品列表查询接口。主账号可查询所有商品，子账号只可查询自身所属商品。
        /// </summary>
        /// <param name="productStatusType">商品业务状态，目前提供4种，输入参数分别是：上架:onSelling ；下架:offline ；审核中:auditing ；审核不通过:editingRequired。<example>onSelling</example></param>
        /// <param name="subject">商品标题模糊搜索字段。只支持半角英数字，长度不超过128。<example>knew odd</example></param>
        /// <param name="groupId">商品分组搜索字段。输入商品分组id(groupId).<example>124</example></param>
        /// <param name="wsDisplay">商品下架原因：expire_offline(过期下架)，user_offline(用户手工下架)、violate_offline(违规下架)、punish_offline(处罚下架)、degrade_offline(降级下架)、industry_offline(行业准入未续约下架)<example>expire_offline</example></param>
        /// <param name="offLineTime">商品的剩余有效期。如果想查3天之内即将下架的商品，则offLineTime值为3。<example>7</example></param>
        /// <param name="productId">商品id搜索字段。<example>123</example></param>
        /// <param name="exceptedProductIds">待排除的产品ID列表。<example>[123,456]</example></param>
        /// <param name="pageSize">每页查询商品数量。输入值小于100，默认20。<example>30</example></param>
        /// <param name="currentPage">需要商品的当前页数。默认第一页。<example>2</example></param>
        /// <returns></returns>
        public ApiFindProductInfoListQueryResponse FindProductInfoListQuery(string productStatusType, string subject = null, int? groupId = null, string wsDisplay = null, int? offLineTime = null, long? productId = null, long[] exceptedProductIds = null, int? pageSize = null, int? currentPage = null)
        {
            var str = StrClient.api_findProductInfoListQuery(productStatusType, subject, groupId, wsDisplay, offLineTime, productId, exceptedProductIds, pageSize, currentPage);
            return this.DeserializeObject<ApiFindProductInfoListQueryResponse>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public ApiGetAllProvinceResponse GetAllProvince()
        {
            var str = StrClient.api_getAllProvince();
            return this.DeserializeObject<ApiGetAllProvinceResponse>(str);
        }
        /// <summary>
        /// 获取属性需要优化的商品列表
        /// </summary>
        /// <param name="categoryId">类目ID<example>12392</example></param>
        /// <param name="productIds">商品ID列表<example>1239273,1239274</example></param>
        /// <param name="ownerMember">商品所有人搜索字段。必须是输入所需查询的商品所有人loginId，切当前用户是所有人或所有人上级用户。</param>
        /// <param name="type"></param>
        /// <param name="endDay">到期时间搜索字段。商品到期时间。<example>7</example></param>
        /// <param name="currentPage">需要商品的当前页数。默认第一页。<example>1</example></param>
        /// <param name="pageSize">每页查询商品数量。最大值50，默认20。<example>20</example></param>
        /// <returns></returns>
        public ApiGetAtributeMissingProductListResponse GetAtributeMissingProductList(long? categoryId = null, string productIds = null, string ownerMember = null, string type = null, int? endDay = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_getAtributeMissingProductList(categoryId, productIds, ownerMember, type, endDay, currentPage, pageSize);
            return this.DeserializeObject<ApiGetAtributeMissingProductListResponse>(str);
        }
        /// <summary>
        /// 获取下级类目信息,同获取单个类目信息内容相同（cateId=0获得一级类目列表）
        /// </summary>
        /// <param name="cateId">cateId=0时，获得第一级类目列表<example>1501</example></param>
        /// <returns></returns>
        public ApiGetChildrenPostCategoryByIdResponse GetChildrenPostCategoryById(int? cateId = null)
        {
            var str = StrClient.api_getChildrenPostCategoryById(cateId);
            return this.DeserializeObject<ApiGetChildrenPostCategoryByIdResponse>(str);
        }
        /// <summary>
        /// 通过模板ID获取单个运费模板内容
        /// </summary>
        /// <param name="templateId">模板id<example>100170741</example></param>
        /// <returns></returns>
        public ApiGetFreightSettingByTemplateQueryResponse GetFreightSettingByTemplateQuery(int templateId)
        {
            var str = StrClient.api_getFreightSettingByTemplateQuery(templateId);
            return this.DeserializeObject<ApiGetFreightSettingByTemplateQueryResponse>(str);
        }
        /// <summary>
        /// 读取下一级别的地址信息
        /// </summary>
        /// <param name="areaId">区域Id<example>1001</example></param>
        /// <returns></returns>
        public ApiGetNextLevelAddressDataResponse GetNextLevelAddressData(long areaId)
        {
            var str = StrClient.api_getNextLevelAddressData(areaId);
            return this.DeserializeObject<ApiGetNextLevelAddressDataResponse>(str);
        }
        /// <summary>
        /// 线上物流发货专用接口
        /// </summary>
        /// <param name="orderId">交易订单ID</param>
        /// <param name="internationalLogisticsId">国际运单号</param>
        /// <param name="chinaLogisticsId">国内快递运单号</param>
        /// <param name="logisticsStatus">物流订单状态</param>
        /// <param name="gmtCreateStartStr">开始时间</param>
        /// <param name="gmtCreateEndStr">结束时间</param>
        /// <param name="currentPage">当前页面</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="queryExpressOrder">是否查询国际快递订单</param>
        /// <returns></returns>
        public ApiGetOnlineLogisticsInfoResponse GetOnlineLogisticsInfo(long orderId, string internationalLogisticsId = null, string chinaLogisticsId = null, string logisticsStatus = null, string gmtCreateStartStr = null, string gmtCreateEndStr = null, int? currentPage = null, int? pageSize = null, bool? queryExpressOrder = null)
        {
            var str = StrClient.api_getOnlineLogisticsInfo(orderId, internationalLogisticsId, chinaLogisticsId, logisticsStatus, gmtCreateStartStr, gmtCreateEndStr, currentPage, pageSize, queryExpressOrder);
            return this.DeserializeObject<ApiGetOnlineLogisticsInfoResponse>(str);
        }
        /// <summary>
        /// 根据交易订单获取线上发货物流服务列表，线上发货物流服务仅能用于线上发货，请了解！
        /// 以下包裹信息是不支持线上发货的，获取方案可能为空：
        /// 1、长\宽\高  加起来 不能大于90;
        /// 2、长宽高最大的一条边不能大于60cm;
        /// 3、包裹重量不能超过2KG;
        /// 4、已操作线下物流发货的订单。
        /// </summary>
        /// <param name="orderId">交易订单ID<example>30003660495804</example></param>
        /// <param name="goodsWeight">包裹重量<example>1.50</example></param>
        /// <param name="goodsLength">包裹长<example>11</example></param>
        /// <param name="goodsWidth">包裹宽<example>20</example></param>
        /// <param name="goodsHeight">包裹高<example>25</example></param>
        /// <returns></returns>
        public ApiGetOnlineLogisticsServiceListByOrderIdResponse GetOnlineLogisticsServiceListByOrderId(long orderId, double? goodsWeight = null, int? goodsLength = null, int? goodsWidth = null, int? goodsHeight = null)
        {
            var str = StrClient.api_getOnlineLogisticsServiceListByOrderId(orderId, goodsWeight, goodsLength, goodsWidth, goodsHeight);
            return this.DeserializeObject<ApiGetOnlineLogisticsServiceListByOrderIdResponse>(str);
        }
        /// <summary>
        /// 获取图片银行信息，例如图片银行容量，已使用量等信息。
        /// </summary>
        /// <returns></returns>
        public ApiGetPhotoBankInfoResponse GetPhotoBankInfo()
        {
            var str = StrClient.api_getPhotoBankInfo();
            return this.DeserializeObject<ApiGetPhotoBankInfoResponse>(str);
        }
        /// <summary>
        /// 获取单个类目信息
        /// </summary>
        /// <param name="cateId"></param>
        /// <returns></returns>
        public ApiGetPostCategoryByIdResponse GetPostCategoryById(int? cateId = null)
        {
            var str = StrClient.api_getPostCategoryById(cateId);
            return this.DeserializeObject<ApiGetPostCategoryByIdResponse>(str);
        }
        /// <summary>
        /// 获取线上发货标签(线上物流发货专用接口)
        /// </summary>
        /// <param name="internationalLogisticsId">国际运单号<example>RE700150389CN</example></param>
        /// <returns></returns>
        public ApiGetPrintInfoResponse GetPrintInfo(string internationalLogisticsId)
        {
            var str = StrClient.api_getPrintInfo(internationalLogisticsId);
            return this.DeserializeObject<ApiGetPrintInfoResponse>(str);
        }
        /// <summary>
        /// 批量获取线上发货标签(线上物流发货专用接口)
        /// </summary>
        /// <param name="printDetail">是否打印详情<example>true</example></param>
        /// <param name="warehouseOrderQueryDTOs">批量查询线上发货信息进去打印,列表类型，以json格式来表达。{internationalLogisticsId为国际运单号(必填)}<example>[{"internationalLogisticsId":"RE700150389CN"},{"internationalLogisticsId":"RA010000112FI"},{"internationalLogisticsId":"RE70055589CN"},{"internationalLogisticsId":"RE70333389CN"}]</example></param>
        /// <returns></returns>
        public ApiGetPrintInfosResponse GetPrintInfos(string warehouseOrderQueryDTOs, bool? printDetail = null)
        {
            var str = StrClient.api_getPrintInfos(warehouseOrderQueryDTOs, printDetail);
            return this.DeserializeObject<ApiGetPrintInfosResponse>(str);
        }
        /// <summary>
        /// 获取当前会员的产品分组
        /// </summary>
        /// <returns></returns>
        public ApiGetProductGroupListResponse GetProductGroupList()
        {
            var str = StrClient.api_getProductGroupList();
            return this.DeserializeObject<ApiGetProductGroupListResponse>(str);
        }
        /// <summary>
        /// 可查询获取该卖家目前实际可用橱窗数量。调用该接口时需主要针对主账户ID提供查询服务，子账号ID无法获取相关橱窗数量查询。(试用）
        /// </summary>
        /// <returns></returns>
        public ApiGetRemainingWindowsResponse GetRemainingWindows()
        {
            var str = StrClient.api_getRemainingWindows();
            return this.DeserializeObject<ApiGetRemainingWindowsResponse>(str);
        }
        /// <summary>
        /// 查询当前用户在指定类目下可用的尺码模版信息。
        /// </summary>
        /// <param name="categoryId">商品类目Id<example>4413151515</example></param>
        /// <returns></returns>
        public ApiGetSizeChartInfoByCategoryIdResponse GetSizeChartInfoByCategoryId(long categoryId)
        {
            var str = StrClient.api_getSizeChartInfoByCategoryId(categoryId);
            return this.DeserializeObject<ApiGetSizeChartInfoByCategoryIdResponse>(str);
        }
        /// <summary>
        /// 获取某个卖家橱窗商品目前使用情况详情。
        /// </summary>
        /// <returns></returns>
        public ApiGetWindowProductsResponse GetWindowProducts()
        {
            var str = StrClient.api_getWindowProducts();
            return this.DeserializeObject<ApiGetWindowProductsResponse>(str);
        }
        /// <summary>
        /// 纠纷中卖家新增订单留言（试用）留言内容同订单留言。
        /// </summary>
        /// <param name="orderId">订单ID</param>
        /// <param name="content">留言内容</param>
        /// <returns></returns>
        public ApiLeaveOrderMessageResponse LeaveOrderMessage(long orderId, string content)
        {
            var str = StrClient.api_leaveOrderMessage(orderId, content);
            return this.DeserializeObject<ApiLeaveOrderMessageResponse>(str);
        }
        /// <summary>
        /// 列出用户的运费模板
        /// </summary>
        /// <returns></returns>
        public ApiListFreightTemplateResponse ListFreightTemplate()
        {
            var str = StrClient.api_listFreightTemplate();
            return this.DeserializeObject<ApiListFreightTemplateResponse>(str);
        }
        /// <summary>
        /// 获取图片银行指定分组的子分组信息
        /// </summary>
        /// <param name="groupId">图片组ID。不填groupId则返回所有图片组信息<example>8401</example></param>
        /// <returns></returns>
        public ApiListGroupResponse ListGroup(string groupId = null)
        {
            var str = StrClient.api_listGroup(groupId);
            return this.DeserializeObject<ApiListGroupResponse>(str);
        }
        /// <summary>
        /// 图片银行列表分页查询
        /// </summary>
        /// <param name="locationType">图片存放位置.可选值:allGroup(所有分组), temp(被禁用的图片), subGroup(某一分组), unGroup(非分组). 如果locationType参数值为allGroup,temp,unGroup时，将忽略groupId参数。 如果locationType的参数值为subGroup,须指定groupId参数。</param>
        /// <param name="groupId">图片组id</param>
        /// <param name="currentPage">当前页码</param>
        /// <param name="pageSize">默认18个，最大值 50</param>
        /// <returns></returns>
        public ApiListImagePaginationResponse ListImagePagination(string locationType = null, string groupId = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_listImagePagination(locationType, groupId, currentPage, pageSize);
            return this.DeserializeObject<ApiListImagePaginationResponse>(str);
        }
        /// <summary>
        /// 此接口返回的物流服务于线上发货物流服务不同。此接口返回的物流服务用语卖家设置运费模板和声明发货，不能用于线上发货。请注意！
        /// </summary>
        /// <returns></returns>
        public ApiListLogisticsServiceResponse ListLogisticsService()
        {
            var str = StrClient.api_listLogisticsService();
            return this.DeserializeObject<ApiListLogisticsServiceResponse>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="productIds">ae 产品id列表，用逗号分隔，最大不能超过100个id</param>
        /// <returns></returns>
        public ApiListTbProductByIdsResponse ListTbProductByIds(string productIds)
        {
            var str = StrClient.api_listTbProductByIds(productIds);
            return this.DeserializeObject<ApiListTbProductByIdsResponse>(str);
        }
        /// <summary>
        /// 商品下架接口。需要下架的商品的通过productIds参数指定，多个商品之间用英文分号隔开。
        /// </summary>
        /// <param name="productIds">需要下架的产品id。多个产品ID用英文分号隔开。<example>109827;109828</example></param>
        /// <returns></returns>
        public ApiOfflineAeProductResponse OfflineAeProduct(string productIds)
        {
            var str = StrClient.api_offlineAeProduct(productIds);
            return this.DeserializeObject<ApiOfflineAeProductResponse>(str);
        }
        /// <summary>
        /// 上架一个或者多个商品，待上架的产品ID通过参数productIds指定，产品ID之间使用英文分号(;)隔开, 最多一次只能上架50个商品。
        /// 
        /// 行业准入商品上架限制
        /// 如果用户退出了一个行业准入的类目(比如：假发)，那么将无法上架这个类目下的商品。
        /// 
        /// 返回值
        /// 1. 接口调用成功后，将返回类似的json串: {"modifyCount": 10, success: true}。
        /// 2. 接口调用失败后，将返回类似的json串: {"error_code": "11001023", "error_message": "Product too much", "exception": "exception message"}
        /// </summary>
        /// <param name="productIds">需要上架的产品id列表。可输入多个，之前用半角分号分割。<example>109827;109828</example></param>
        /// <returns></returns>
        public ApiOnlineAeProductResponse OnlineAeProduct(string productIds)
        {
            var str = StrClient.api_onlineAeProduct(productIds);
            return this.DeserializeObject<ApiOnlineAeProductResponse>(str);
        }
        /// <summary>
        /// post产品并且返回post成功后的产品的id
        /// </summary>
        /// <param name="detail">Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>detail stuff here</example></param>
        /// <param name="aeopAeProductSKUs">列表类型，以json格式来表达。参看aeopAeProductSKUs数据结构。特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[;        ;{;            ;"ipmSkuStock": 10,;            ;"skuPrice": "11.00",;            ;"aeopSKUProperty": [;                ;{;                    ;"propertyValueId": 193,;                    ;"skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg",;                    ;"propertyValueDefinitionName": "balck",;                    ;"skuPropertyId": 200000182;                },;                ;{;                    ;"propertyValueId": 201336100,;                    ;"skuPropertyId": 200007763;                };            ],;            ;"skuCode": "11234";        };    ]</example></param>
        /// <param name="deliveryTime">备货期。取值范围:1-60;单位:天。<example>7</example></param>
        /// <param name="promiseTemplateId">服务模板设置。（需和服务模板查询接口api.queryPromiseTemplateById进行关联使用）<example>100</example></param>
        /// <param name="categoryId">商品所属类目ID。必须是叶子类目，通过类目接口获取。<example>200002101</example></param>
        /// <param name="subject">商品标题  长度在1-128之间英文。<example>knew odd of test</example></param>
        /// <param name="productPrice">商品一口价。取值范围:0-100000,保留两位小数;单位:美元。如:200.07，表示:200美元7分。需要在正确的价格区间内。上传多属性产品的时候，有好几个SKU和价格，productprice无需填写。<example>11.00</example></param>
        /// <param name="freightTemplateId">运费模版ID。通过运费接口listFreightTemplate获取。<example>703476858</example></param>
        /// <param name="imageURLs">产品的主图URL列表。如果这个产品有多张主图，那么这些URL之间使用英文分号(";")隔开。;一个产品最多只能有6张主图。图片格式JPEG，文件大小5M以内；图片像素建议大于800*800；横向和纵向比例建议1:1到1:1.3之间；图片中产品主体占比建议大于70%；背景白色或纯色，风格统一；如果有LOGO，建议放置在左上角，不宜过大。;;不建议自行添加促销标签或文字。切勿盗用他人图片，以免受网规处罚。更多说明请至http://seller.aliexpress.com/so/tupianguifan.php进行了解。<example>http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg</example></param>
        /// <param name="productUnit">商品单位 (存储单位编号) ;100000000:袋 (bag/bags);100000001:桶 (barrel/barrels);100000002:蒲式耳 (bushel/bushels);100078580:箱 (carton);100078581:厘米 (centimeter);100000003:立方米 (cubic meter);100000004:打 (dozen);100078584:英尺 (feet);100000005:加仑 (gallon);100000006:克 (gram);100078587:英寸 (inch);100000007:千克 (kilogram);100078589:千升 (kiloliter);100000008:千米 (kilometer);100078559:升 (liter/liters);100000009:英吨 (long ton);100000010:米 (meter);100000011:公吨 (metric ton);100078560:毫克 (milligram);100078596:毫升 (milliliter);100078597:毫米 (millimeter);100000012:盎司 (ounce);100000014:包 (pack/packs);100000013:双 (pair);100000015:件/个 (piece/pieces);100000016:磅 (pound);100078603:夸脱 (quart);100000017:套 (set/sets);100000018:美吨 (short ton);100078606:平方英尺 (square feet);100078607:平方英寸 (square inch);100000019:平方米 (square meter);100078609:平方码 (square yard);100000020:吨 (ton);100078558:码 (yard/yards)<example>100000000</example></param>
        /// <param name="packageType">打包销售: true 非打包销售:false<example>false</example></param>
        /// <param name="lotNum">每包件数。  打包销售情况，lotNum>1,非打包销售情况,lotNum=1<example>1</example></param>
        /// <param name="packageLength">商品包装长度。取值范围:1-700,单位:厘米。产品包装尺寸的最大值+2×（第二大值+第三大值）不能超过2700厘米。<example>20</example></param>
        /// <param name="packageWidth">商品包装宽度。取值范围:1-700,单位:厘米。<example>30</example></param>
        /// <param name="packageHeight">商品包装高度。取值范围:1-700,单位:厘米。<example>40</example></param>
        /// <param name="grossWeight">商品毛重,取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>10.020</example></param>
        /// <param name="isPackSell">是否自定义计重.true为自定义计重,false反之.<example>false</example></param>
        /// <param name="baseUnit">isPackSell为true时,此项必填。购买几件以内不增加运费。取值范围1-1000<example>1</example></param>
        /// <param name="addUnit">isPackSell为true时,此项必填。  每增加件数.取值范围1-1000。<example>2</example></param>
        /// <param name="addWeight">isPackSell为true时,此项必填。  对应增加的重量.取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>3.03</example></param>
        /// <param name="wsValidNum">商品有效天数。取值范围:1-30,单位:天。<example>30</example></param>
        /// <param name="aeopAeProductPropertys">产品属性，以json格式进行封装后提交。参看aeopAeProductPropertys数据结构。此字段是否必填，需从类目接口getChildAttributesResultByPostCateIdAndPath获取（即获取到的required来判断属性是否必填），该项只输入普通类目属性数据，不可输入sku类目属性。 对于类目属性包含子类目属性的情况，此处不确认父属性和子属性，即选择任何属性，都以该对象提交。 对于一个属性多个选中值的情况，以多个该对象存放。 其中"attrNameId","attrValueId"为整型(Integer), "attrName", "attrValue"为字符串类型(String)。 1. 当设置一些系统属性时，如果类目自定义了一些候选值，只需要提供"attrNameId"和"attrValueId"即可。例如：{"attrNameId":494, "attrValueId":284}。 2. 当设置一些需要手工输入属性内容时，只需要提供"attrNameId"和"attrValue"即可。例如：{"attrNameId": 1000, "attrValue": "test"} 3. 当设置自定义属性时，需要提供"attrName"和"attrValue"即可。例如: {"attrName": "Color", "attrValue": "red"} 4. 当设置一个Other属性时，需要提供"attrNameId", "attrValueId", "attrValue"三个参数。例如：{"attrNameId": 1000, "attrValueId": 4, "attrValue": "Other Value"}。<example>[;        ;{;            ;"attrNameId": 2,;            ;"attrValue": "STD";        },;        ;{;            ;"attrValueId": 200004894,;            ;"attrNameId": 175;        },;        ;{;            ;"attrValueId": 200660860,;            ;"attrNameId": 186;        };    ]</example></param>
        /// <param name="bulkOrder">批发最小数量 。取值范围2-100000。批发最小数量和批发折扣需同时有值或无值。<example>5</example></param>
        /// <param name="bulkDiscount">批发折扣。扩大100倍，存整数。取值范围:1-99。注意：这是折扣，不是打折率。 如,打68折,则存32。批发最小数量和批发折扣需同时有值或无值。<example>90</example></param>
        /// <param name="sizechartId">尺码表模版ID。必须选择当前类目下的尺码模版。<example>100</example></param>
        /// <param name="reduceStrategy">库存扣减策略，总共有2种：下单减库存(place_order_withhold)和支付减库存(payment_success_deduct)。<example>place_order_withhold或payment_success_deduct</example></param>
        /// <param name="groupId">这个产品需要关联的产品分组ID. 只能关联一个产品分组，如果想关联多个产品分组，请使用api.setGroups接口。<example>124</example></param>
        /// <param name="currencyCode">货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。<example>USD;RUB</example></param>
        /// <param name="mobileDetail">mobile Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>mobile Detail html block</example></param>
        /// <param name="couponStartDate">卡券商品开始有效期<example>20160119113420000+0800</example></param>
        /// <param name="couponEndDate">卡券商品结束有效期<example>20160124113420000+0800</example></param>
        /// <param name="aeopNationalQuoteConfiguration">商品分国家报价的配置</param>
        /// <param name="aeopAEMultimedia">商品多媒体信息，该属性主要包含商品的视频列表<example>"aeopAEMultimedia":{"aeopAEVideos":[{"mediaId":30994083,"posterUrl":"http://img02.taobaocdn.com/bao/uploaded/TB16e9MJVXXXXacXVXXXXXXXXXX.jpg","mediaStatus":"approved","mediaType":"video","aliMemberId":225671041}]}</example></param>
        /// <returns></returns>
        public ApiPostAeProductResponse PostAeProduct(string detail, string aeopAeProductSKUs, int categoryId, string subject, string imageURLs, string aeopAeProductPropertys, int? deliveryTime = null, long? promiseTemplateId = null, string productPrice = null, int? freightTemplateId = null, int? productUnit = null, bool? packageType = null, int? lotNum = null, int? packageLength = null, int? packageWidth = null, int? packageHeight = null, string grossWeight = null, bool? isPackSell = null, int? baseUnit = null, int? addUnit = null, string addWeight = null, int? wsValidNum = null, int? bulkOrder = null, int? bulkDiscount = null, long? sizechartId = null, string reduceStrategy = null, long? groupId = null, string currencyCode = null, string mobileDetail = null, System.DateTimeOffset? couponStartDate = null, System.DateTimeOffset? couponEndDate = null, string aeopNationalQuoteConfiguration = null, string aeopAEMultimedia = null)
        {
            var str = StrClient.api_postAeProduct(detail, aeopAeProductSKUs, categoryId, subject, imageURLs, aeopAeProductPropertys, deliveryTime, promiseTemplateId, productPrice, freightTemplateId, productUnit, packageType, lotNum, packageLength, packageWidth, packageHeight, grossWeight, isPackSell, baseUnit, addUnit, addWeight, wsValidNum, bulkOrder, bulkDiscount, sizechartId, reduceStrategy, groupId, currencyCode, mobileDetail, couponStartDate, couponEndDate, aeopNationalQuoteConfiguration, aeopAEMultimedia);
            return this.DeserializeObject<ApiPostAeProductResponse>(str);
        }
        /// <summary>
        /// 这个结构体主要用于保存会员等级查询结果，若查询成功会返回true和买家等级；若查询失败则返回false，和错误码及对应的错误信息
        /// </summary>
        /// <param name="loginId">买家账号ID<example>jordenmail</example></param>
        /// <returns></returns>
        public AccountResultDTO QueryAccountLevel(string loginId)
        {
            var str = StrClient.api_queryAccountLevel(loginId);
            return this.DeserializeObject<AccountResultDTO>(str);
        }
        /// <summary>
        /// 查询速卖通平台公告信息
        /// </summary>
        /// <param name="anouncement">公告id，一次只能查询一个。</param>
        /// <param name="publicDatetimeStart">公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00</param>
        /// <param name="publicDatetimeEnd">公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00。</param>
        /// <param name="page">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <returns></returns>
        public ApiQueryAeAnouncementResponse QueryAeAnouncement(string anouncement = null, string publicDatetimeStart = null, string publicDatetimeEnd = null, int? page = null, int? pageSize = null)
        {
            var str = StrClient.api_queryAeAnouncement(anouncement, publicDatetimeStart, publicDatetimeEnd, page, pageSize);
            return this.DeserializeObject<ApiQueryAeAnouncementResponse>(str);
        }
        /// <summary>
        /// 根据纠纷ID查询纠纷详情信息-已停用
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60740200006352</example></param>
        /// <returns></returns>
        public ApiQueryIssueDetailResponse QueryIssueDetail(long issueId)
        {
            var str = StrClient.api_queryIssueDetail(issueId);
            return this.DeserializeObject<ApiQueryIssueDetailResponse>(str);
        }
        /// <summary>
        /// 查询纠纷列表信息。（试用）
        /// </summary>
        /// <param name="orderNo">订单ID<example>1234567890</example></param>
        /// <param name="buyerName">买家名称</param>
        /// <param name="issueStatus">纠纷状态：WAIT_SELLER_CONFIRM_REFUND 买家提起纠纷,SELLER_REFUSE_REFUND 卖家拒绝纠,ACCEPTISSUE 卖家接受纠纷,WAIT_BUYER_SEND_GOODS 等待买家发货,WAIT_SELLER_RECEIVE_GOODS 买家发货，等待卖家收货,ARBITRATING 仲裁中,SELLER_RESPONSE_ISSUE_TIMEOUT 卖家响应纠纷超时<example>WAIT_SELLER_CONFIRM_REFUND</example></param>
        /// <param name="currentPage">当前页数<example>1</example></param>
        /// <returns></returns>
        public ApiQueryIssueListResponse QueryIssueList(int currentPage, long? orderNo = null, string buyerName = null, string issueStatus = null)
        {
            var str = StrClient.api_queryIssueList(currentPage, orderNo, buyerName, issueStatus);
            return this.DeserializeObject<ApiQueryIssueListResponse>(str);
        }
        /// <summary>
        /// 站内信/订单留言查询详情列表
        /// </summary>
        /// <param name="currentPage">当前页<value>1</value><example>1</example></param>
        /// <param name="pageSize">每页条数,pageSize取值范围(0~100) 最多返回前5000条数据<value>20</value><example>20</example></param>
        /// <param name="channelId">通道ID，即关系ID<example>22323233</example></param>
        /// <param name="msgSources">类型(message_center/order_msg)<value>message_center</value><example>message_center</example></param>
        /// <returns></returns>
        public ApiQueryMsgDetailListResponse QueryMsgDetailList(int currentPage, int pageSize, string channelId, string msgSources)
        {
            var str = StrClient.api_queryMsgDetailList(currentPage, pageSize, channelId, msgSources);
            return this.DeserializeObject<ApiQueryMsgDetailListResponse>(str);
        }
        /// <summary>
        /// 根据买卖家loginId查询站内信
        /// </summary>
        /// <param name="currentPage">当前页数<example>1</example></param>
        /// <param name="pageSize">每页条数<example>10(pageSize取值范围(0~100) 最多返回前5000条数据)</example></param>
        /// <param name="buyerId">买家loginId<example>us23344</example></param>
        /// <param name="sellerId">卖家loginId(与买家建立关系的账号，即信息所属账号)<example>cn4444</example></param>
        /// <returns></returns>
        public ApiQueryMsgDetailListByBuyerIdResponse QueryMsgDetailListByBuyerId(int currentPage, int pageSize, string buyerId, string sellerId)
        {
            var str = StrClient.api_queryMsgDetailListByBuyerId(currentPage, pageSize, buyerId, sellerId);
            return this.DeserializeObject<ApiQueryMsgDetailListByBuyerIdResponse>(str);
        }
        /// <summary>
        /// 获取当前用户下与当前用户建立消息关系的列表
        /// </summary>
        /// <param name="currentPage">当前页<value>1</value><example>1</example></param>
        /// <param name="pageSize">每页条数,pageSize取值范围(0~100) 最多返回前5000条数据<value>20</value><example>20</example></param>
        /// <param name="msgSources">查询类型<value>message_center</value><example>message_center/order_msg</example></param>
        /// <param name="filter">筛选条件(取值:dealStat/readStat/rank0/rank1/rank2/rank3/rank4/rank5)dealStat时将按未处理筛选，值为readStat时将按未读筛选，值为rank1时将按红色标签进行筛选<example>dealStat</example></param>
        /// <returns></returns>
        public ApiQueryMsgRelationListResponse QueryMsgRelationList(int currentPage, int pageSize, string msgSources, string filter = null)
        {
            var str = StrClient.api_queryMsgRelationList(currentPage, pageSize, msgSources, filter);
            return this.DeserializeObject<ApiQueryMsgRelationListResponse>(str);
        }
        /// <summary>
        /// 查询开放平台公告信息
        /// </summary>
        /// <param name="anouncement">公告id，一次只能查询一个。</param>
        /// <param name="publicDatetimeStart">公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00。</param>
        /// <param name="publicDatetimeEnd">公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00。</param>
        /// <param name="page">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <returns></returns>
        public ApiQueryOpenAnouncementResponse QueryOpenAnouncement(string anouncement = null, string publicDatetimeStart = null, string publicDatetimeEnd = null, int? page = null, int? pageSize = null)
        {
            var str = StrClient.api_queryOpenAnouncement(anouncement, publicDatetimeStart, publicDatetimeEnd, page, pageSize);
            return this.DeserializeObject<ApiQueryOpenAnouncementResponse>(str);
        }
        /// <summary>
        /// 根据path查询图片信息
        /// </summary>
        /// <param name="paths">图片文件名<example>["HTB1rxqmHpXXXXXBXFXXq6xXFXXXm.jpg","HBA1rxqmHpXXXXXBXFXXq6xXFXXXm.jpg"]</example></param>
        /// <returns></returns>
        public ApiQueryPhotoBankImageByPathsResponse QueryPhotoBankImageByPaths(string paths)
        {
            var str = StrClient.api_queryPhotoBankImageByPaths(paths);
            return this.DeserializeObject<ApiQueryPhotoBankImageByPathsResponse>(str);
        }
        /// <summary>
        /// 查询商品每日加入购物车数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码<value>1</value></param>
        /// <param name="pageSize">每页结果数量<value>20</value></param>
        /// <returns></returns>
        public ApiQueryProductAddCartInfoEverydayByIdResponse QueryProductAddCartInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_queryProductAddCartInfoEverydayById(productId, startDate, endDate, currentPage, pageSize);
            return this.DeserializeObject<ApiQueryProductAddCartInfoEverydayByIdResponse>(str);
        }
        /// <summary>
        /// 查询商品交易表现
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <returns></returns>
        public ApiQueryProductBusinessInfoByIdResponse QueryProductBusinessInfoById(string productId)
        {
            var str = StrClient.api_queryProductBusinessInfoById(productId);
            return this.DeserializeObject<ApiQueryProductBusinessInfoByIdResponse>(str);
        }
        /// <summary>
        /// 查询商品每天被曝光数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-10</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-10</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public ApiQueryProductExposedInfoEverydayByIdResponse QueryProductExposedInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_queryProductExposedInfoEverydayById(productId, startDate, endDate, currentPage, pageSize);
            return this.DeserializeObject<ApiQueryProductExposedInfoEverydayByIdResponse>(str);
        }
        /// <summary>
        /// 查询商品每天被收藏的数量(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public ApiQueryProductFavoritedInfoEverydayByIdResponse QueryProductFavoritedInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_queryProductFavoritedInfoEverydayById(productId, startDate, endDate, currentPage, pageSize);
            return this.DeserializeObject<ApiQueryProductFavoritedInfoEverydayByIdResponse>(str);
        }
        /// <summary>
        /// 查询指定商品id所在产品分组
        /// </summary>
        /// <param name="productId">产品id<example>1629872654</example></param>
        /// <returns></returns>
        public ApiQueryProductGroupIdByProductIdResponse QueryProductGroupIdByProductId(long productId)
        {
            var str = StrClient.api_queryProductGroupIdByProductId(productId);
            return this.DeserializeObject<ApiQueryProductGroupIdByProductIdResponse>(str);
        }
        /// <summary>
        /// 查询商品每天的销量数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public ApiQueryProductSalesInfoEverydayByIdResponse QueryProductSalesInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_queryProductSalesInfoEverydayById(productId, startDate, endDate, currentPage, pageSize);
            return this.DeserializeObject<ApiQueryProductSalesInfoEverydayByIdResponse>(str);
        }
        /// <summary>
        /// 查询商品每日浏览量(该数据仅限30天之内的时间区间数据查询）(试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public ApiQueryProductViewedInfoEverydayByIdResponse QueryProductViewedInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var str = StrClient.api_queryProductViewedInfoEverydayById(productId, startDate, endDate, currentPage, pageSize);
            return this.DeserializeObject<ApiQueryProductViewedInfoEverydayByIdResponse>(str);
        }
        /// <summary>
        /// 服务模板查询API
        /// </summary>
        /// <param name="templateId">输入服务模板编号。注：输入为-1时，获取所有服务模板列表。<example>-1</example></param>
        /// <returns></returns>
        public ApiQueryPromiseTemplateByIdResponse QueryPromiseTemplateById(long? templateId = null)
        {
            var str = StrClient.api_queryPromiseTemplateById(templateId);
            return this.DeserializeObject<ApiQueryPromiseTemplateByIdResponse>(str);
        }
        /// <summary>
        /// 查询速卖通服务市场公告信息
        /// </summary>
        /// <param name="anouncement">公告id，一次只能查询一个。</param>
        /// <param name="publicDatetimeStart">公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00。</param>
        /// <param name="publicDatetimeEnd">公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00。</param>
        /// <param name="page">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <returns></returns>
        public ApiQueryServiceAnouncementResponse QueryServiceAnouncement(string anouncement = null, string publicDatetimeStart = null, string publicDatetimeEnd = null, int? page = null, int? pageSize = null)
        {
            var str = StrClient.api_queryServiceAnouncement(anouncement, publicDatetimeStart, publicDatetimeEnd, page, pageSize);
            return this.DeserializeObject<ApiQueryServiceAnouncementResponse>(str);
        }
        /// <summary>
        /// 查询物流追踪信息
        /// </summary>
        /// <param name="serviceName">物流服务KEY<example>UPS</example></param>
        /// <param name="logisticsNo">物流追踪号<example>20100810142400000-0700</example></param>
        /// <param name="toArea">交易订单收货国家(简称)<example>FJ,Fiji;FI,Finland;FR,France;FX,FranceMetropolitan;GF,FrenchGuiana;PF,FrenchPolynesia;TF,FrenchSouthernTerritories;GA,Gabon;GM,Gambia;GE,Georgia;DE,Germany;GH,Ghana;GI,Gibraltar;GR,Greece;GL,Greenland;GD,Grenada;GP,Guadeloupe;GU,Guam;GT,Guatemala;GN,Guinea;GW,Guinea-Bissau;GY,Guyana;HT,Haiti;HM,HeardandMcDonaldIslands;HN,Honduras;HK,HongKong;HU,Hungary;IS,Iceland;IN,India;ID,Indonesia;IR,Iran(IslamicRepublicof);IQ,Iraq;IE,Ireland;IL,Israel;IT,Italy;JM,Jamaica;JP,Japan;JO,Jordan;KZ,Kazakhstan;KE,Kenya;KI,Kiribati;KW,Kuwait;KG,Kyrgyzstan;LA,LaoPeople'sDemocraticRepublic;LV,Latvia;LB,Lebanon;LS,Lesotho;LR,Liberia;LY,LibyanArabJamahiriya;AF,Afghanistan;AL,Albania;DZ,Algeria;AS,AmericanSamoa;AD,Andorra;AO,Angola;AI,Anguilla;AQ,Antarctica;AG,AntiguaandBarbuda;AR,Argentina;AM,Armenia;AW,Aruba;AU,Australia;AT,Austria;AZ,Azerbaijan;BS,Bahamas;BH,Bahrain;BD,Bangladesh;BB,Barbados;BY,Belarus;BE,Belgium;BZ,Belize;BJ,Benin;BM,Bermuda;BT,Bhutan;BO,Bolivia;BA,BosniaandHerzegovina;BW,Botswana;BV,BouvetIsland;BR,Brazil;IO,BritishIndianOceanTerritory;BN,BruneiDarussalam;BG,Bulgaria;BF,BurkinaFaso;BI,Burundi;KH,Cambodia;CM,Cameroon;CA,Canada;CV,CapeVerde;KY,CaymanIslands;CF,CentralAfricanRepublic;TD,Chad;CL,Chile;CN,China(Mainland);CX,ChristmasIsland;CC,Cocos(Keeling)Islands;CO,Colombia;KM,Comoros;CG,Congo,TheRepublicofCongo;ZR,Congo,TheDemocraticRepublicOfThe;CK,CookIslands;CR,CostaRica;CI,CoteD'Ivoire;HR,Croatia(localname:Hrvatska);CU,Cuba;CY,Cyprus;CZ,CzechRepublic;DK,Denmark;DJ,Djibouti;DM,Dominica;DO,DominicanRepublic;TP,EastTimor;EC,Ecuador;EG,Egypt;SV,ElSalvador;GQ,EquatorialGuinea;ER,Eritrea;EE,Estonia;ET,Ethiopia;FK,FalklandIslands(Malvinas);FO,FaroeIslands;LI,Liechtenstein;LT,Lithuania;LU,Luxembourg;MO,Macau;MK,Macedonia;MG,Madagascar;MW,Malawi;MY,Malaysia;MV,Maldives;ML,Mali;MT,Malta;MH,MarshallIslands;MQ,Martinique;MR,Mauritania;MU,Mauritius;YT,Mayotte;MX,Mexico;FM,Micronesia;MD,Moldova;MC,Monaco;MN,Mongolia;MS,Montserrat;MA,Morocco;MZ,Mozambique;MM,Myanmar;NA,Namibia;NR,Nauru;NP,Nepal;NL,Netherlands;AN,NetherlandsAntilles;NC,NewCaledonia;NZ,NewZealand;NI,Nicaragua;NE,Niger;NG,Nigeria;NU,Niue;NF,NorfolkIsland;KP,NorthKorea;MP,NorthernMarianaIslands;NO,Norway;OM,Oman;Other,OtherCountry;PK,Pakistan;PW,Palau;PS,Palestine;PA,Panama;PG,PapuaNewGuinea;PY,Paraguay;PE,Peru;PH,Philippines;PN,Pitcairn;PL,Poland;PT,Portugal;PR,PuertoRico;QA,Qatar;RE,Reunion;RO,Romania;RU,RussianFederation;RW,Rwanda;KN,SaintKittsandNevis;LC,SaintLucia;VC,SaintVincentandtheGrenadines;WS,Samoa;SM,SanMarino;ST,SaoTomeandPrincipe;SA,SaudiArabia;SN,Senegal;SC,Seychelles;SL,SierraLeone;SG,Singapore;SK,Slovakia(SlovakRepublic);SI,Slovenia;SB,SolomonIslands;SO,Somalia;ZA,SouthAfrica;KR,SouthKorea;ES,Spain;LK,SriLanka;SH,St.Helena;PM,St.PierreandMiquelon;SD,Sudan;SR,Suriname;SJ,SvalbardandJanMayenIslands;SZ,Swaziland;SE,Sweden;CH,Switzerland;SY,SyrianArabRepublic;TW,T;aiwan;TJ,Tajikistan;TZ,Tanzania;TH,Thailand;TG,Togo;TK,Tokelau;TO,Tonga;TT,TrinidadandTobago;TN,Tunisia;TR,Turkey;TM,Turkmenistan;TC,TurksandCaicosIslands;TV,Tuvalu;UG,Uganda;UA,Ukraine;AE,UnitedArabEmirates;IM,IsleofMan;UK,UnitedKingdom;US,UnitedStates;UM,UnitedStatesMinorOutlyingIslands;UY,Uruguay;UZ,Uzbekistan;VU,Vanuatu;VA,VaticanCityState(HolySee);VE,Venezuela;VN,Vietnam;VG,VirginIslands(British);VI,VirginIslands(U.S.);WF,WallisAndFutunaIslands;EH,WesternSahara;YE,Yemen;YU,Yugoslavia;ZM,Zambia;ZW,Zimbabwe;SRB,Serbia;MNE,Montenegro;KS,Kosovo;EAZ,Zanzibar;BLM,SaintBarthelemy;MAF,SaintMartin;GGY,Guernsey;JEY,Jersey;SGS,SouthGeorgiaandtheSouthSandwichIslands;TLS,Timor-Leste;ALA,AlandIslands;GBA,Alderney;ASC,AscensionIsland;</example></param>
        /// <param name="origin">需要查询的订单来源 AE订单为“ESCROW”<example>ESCROW</example></param>
        /// <param name="outRef">用户需要查询的订单id</param>
        /// <returns></returns>
        public ApiQueryTrackingResultResponse QueryTrackingResult(string serviceName, string logisticsNo, string toArea, string origin, string outRef)
        {
            var str = StrClient.api_queryTrackingResult(serviceName, logisticsNo, toArea, origin, outRef);
            return this.DeserializeObject<ApiQueryTrackingResultResponse>(str);
        }
        /// <summary>
        /// 根据主订单号和保修服务商查订单
        /// </summary>
        /// <param name="orderId">订单号</param>
        /// <param name="supplierId">供应商id</param>
        /// <returns></returns>
        public ApiQueryWarrantiesByOrderIdResponse QueryWarrantiesByOrderId(long orderId, string supplierId)
        {
            var str = StrClient.api_queryWarrantiesByOrderId(orderId, supplierId);
            return this.DeserializeObject<ApiQueryWarrantiesByOrderIdResponse>(str);
        }
        /// <summary>
        /// 获取生效保修信息
        /// </summary>
        /// <param name="supplierId">供应商id</param>
        /// <param name="startTime">开始时间<example>2016-01-06 00:00:00</example></param>
        /// <param name="endTime">结束时间<example>2016-01-06 00:00:00</example></param>
        /// <param name="pageSize">页面大小(不得超过200)<example>50</example></param>
        /// <param name="pageNo">显示的页码<example>1</example></param>
        /// <param name="lastBuyerApplyServiceQuyerStartTime">查询买家最后一次申请保修开始时间<example>2016-01-06 00:00:00</example></param>
        /// <param name="lastBuyerApplyServiceQuyerEndTime">查询买家最后一次申请保修结束时间<example>2016-01-06 00:00:00</example></param>
        /// <returns></returns>
        public ApiQueryWarrantiesInforceResponse QueryWarrantiesInforce(string supplierId, int pageSize, int pageNo, string startTime = null, string endTime = null, string lastBuyerApplyServiceQuyerStartTime = null, string lastBuyerApplyServiceQuyerEndTime = null)
        {
            var str = StrClient.api_queryWarrantiesInforce(supplierId, pageSize, pageNo, startTime, endTime, lastBuyerApplyServiceQuyerStartTime, lastBuyerApplyServiceQuyerEndTime);
            return this.DeserializeObject<ApiQueryWarrantiesInforceResponse>(str);
        }
        /// <summary>
        /// 创建线上发货物流订单时，若卖家选择自寄到仓库，需要填写使用的国内物流公司，此接口返回平台支持的国内物流公司信息。
        /// </summary>
        /// <returns></returns>
        public ApiQureyWlbDomesticLogisticsCompanyResponse QureyWlbDomesticLogisticsCompany()
        {
            var str = StrClient.api_qureyWlbDomesticLogisticsCompany();
            return this.DeserializeObject<ApiQureyWlbDomesticLogisticsCompanyResponse>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">主订单id，一次只能一个。<example>30110902195804</example></param>
        /// <param name="files">附件保存的Url。这个值的来源是 上传请款图片接口返回的参数 。<example>http://filespath</example></param>
        /// <param name="memo">填写请款备注详情。<example>备注</example></param>
        /// <returns></returns>
        public RequestLoanResult RequestPaymentRelease(long orderId, string files, string memo = null)
        {
            var str = StrClient.api_requestPaymentRelease(orderId, files, memo);
            return this.DeserializeObject<RequestLoanResult>(str);
        }
        /// <summary>
        /// 卖家放弃退货申请（退货）
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <returns></returns>
        public ApiSellerAbandonReceiveGoodsResponse SellerAbandonReceiveGoods(long issueId)
        {
            var str = StrClient.api_sellerAbandonReceiveGoods(issueId);
            return this.DeserializeObject<ApiSellerAbandonReceiveGoodsResponse>(str);
        }
        /// <summary>
        /// 卖家同意纠纷 -已停用
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <param name="isReturnGoods">是否退货，需要先查询纠纷详情接口，得到买家资金方案中的isReceivedGoods<example>true</example></param>
        /// <param name="refundAmount">退款金额（单位：分），需要先查询纠纷详情接口，得到买家资金方案中的issueMoney中的cent<example>3000</example></param>
        /// <param name="refundCurrency">币种，需要先查询纠纷详情接口，得到买家资金方案中的issueMoney中的币种<example>USD、RUB</example></param>
        /// <returns></returns>
        public ApiSellerAgreeIssueResponse SellerAgreeIssue(long issueId, bool isReturnGoods, long refundAmount, string refundCurrency)
        {
            var str = StrClient.api_sellerAgreeIssue(issueId, isReturnGoods, refundAmount, refundCurrency);
            return this.DeserializeObject<ApiSellerAgreeIssueResponse>(str);
        }
        /// <summary>
        /// 卖家确认收货 (试用)
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <returns></returns>
        public ApiSellerConrimReceiveGoodsResponse SellerConrimReceiveGoods(long issueId)
        {
            var str = StrClient.api_sellerConrimReceiveGoods(issueId);
            return this.DeserializeObject<ApiSellerConrimReceiveGoodsResponse>(str);
        }
        /// <summary>
        /// 修改发货通知(一个订单只能修改2次，只能修改发货通知后5日内的订单，请注意！)
        /// </summary>
        /// <param name="oldServiceName">用户需要修改的的老的发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。）<example>EMS_SH_ZX_US；EMS；SEP；FEDEX；UPSE；FEDEX_IE；RUSTON；HKPAP；CPAM；SF；HKPAM；CHP；ZTORU；ARAMEX；CPAP；TNT；ECONOMIC139；DHL；UPS；SGP；</example></param>
        /// <param name="oldLogisticsNo">用户需要修改的老的物流追踪号<example>CP123456789CN</example></param>
        /// <param name="newServiceName">用户需要修改的的新的发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。）<example>EMS_SH_ZX_US；EMS；SEP；FEDEX；UPSE；FEDEX_IE；RUSTON；HKPAP；CPAM；SF；HKPAM；CHP；ZTORU；ARAMEX；CPAP；TNT；ECONOMIC139；DHL；UPS；SGP；</example></param>
        /// <param name="newLogisticsNo">用户需要修改的老的物流追踪号<example>CP123456123CN</example></param>
        /// <param name="description">备注(只能输入英文)</param>
        /// <param name="sendType">状态包括：全部发货(all)、部分发货(part)<example>all</example></param>
        /// <param name="outRef">用户需要发货的订单id<example>60769040695804</example></param>
        /// <param name="trackingWebsite">当serviceName=Other的情况时，需要填写对应的追踪网址<example>www.intl183.com</example></param>
        /// <returns></returns>
        public ApiSellerModifiedShipmentResponse SellerModifiedShipment(string oldServiceName, string oldLogisticsNo, string newServiceName, string newLogisticsNo, string sendType, string outRef, string description = null, string trackingWebsite = null)
        {
            var str = StrClient.api_sellerModifiedShipment(oldServiceName, oldLogisticsNo, newServiceName, newLogisticsNo, sendType, outRef, description, trackingWebsite);
            return this.DeserializeObject<ApiSellerModifiedShipmentResponse>(str);
        }
        /// <summary>
        /// 卖家拒绝纠纷 -已停用
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <param name="refundType">退款类型（full_amount_refund(全额退款)/part_amount_refund(部分退款)/no_amount_refund(不退款)<example>full_amount_refund</example></param>
        /// <param name="isReturnGoods">是否退货（Y/N）<example>Y</example></param>
        /// <param name="refundAmount">退款金额（单位：分，保修两位小数，币种：USD）<example>5800</example></param>
        /// <param name="content">拒绝买家纠纷方案的原因描述</param>
        /// <param name="attachments">图片附件，上传多张图片请以半角逗号“,”进行分隔上传</param>
        /// <returns></returns>
        public ApiSellerRefuseIssueResponse SellerRefuseIssue(long issueId, string refundType, string isReturnGoods, string refundAmount, string content, string attachments = null)
        {
            var str = StrClient.api_sellerRefuseIssue(issueId, refundType, isReturnGoods, refundAmount, content, attachments);
            return this.DeserializeObject<ApiSellerRefuseIssueResponse>(str);
        }
        /// <summary>
        /// 填写发货通知
        /// </summary>
        /// <param name="serviceName">用户选择的实际发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。平台支持物流服务详细一览表详见论坛链接;（http://sale.aliexpress.com/seller/shipping_methods_list.htm）<example>AUSPOST, ROYAL_MAIL, CORREOS, DEUTSCHE_POST, LAPOSTE, POSTEITALIANE, RUSSIAN_POST, USPS, UPS_US, UPS, JNE, ACOMMERCE, UPSE, DHL_UK, DHL_ES, DHL_IT, DHL_DE, ENVIALIA, DHL_FR, DHL, FEDEX, FEDEX_IE, TNT, SF, EMS, ROYAL_MAIL_PY, EMS_ZX_ZX_US, E_EMS, EMS_SH_ZX_US, SINOTRANS_AM, ITELLA_PY, ITELLA, CPAM, SINOTRANS_PY, YANWEN_JYT, CPAP, TOLL, HKPAM, HKPAP, SGP, CHP, SEP, ARAMEX, ECONOMIC139, SPSR_RU, YANWEN_AM, CPAM_HRB, CTR_LAND_PICKUP, SPSR_CN, POST_NL, POST_MY, OTHER_ES, OTHER_IT, OTHER_FR, OTHER_US, ; OTHER_UK, OTHER_RU, OTHER_DE, OTHER_AU, Other</example></param>
        /// <param name="logisticsNo">物流追踪号</param>
        /// <param name="description">备注(只能输入英文，且长度限制在512个字符。）</param>
        /// <param name="sendType">状态包括：全部发货(all)、部分发货(part)</param>
        /// <param name="outRef">用户需要发货的订单id</param>
        /// <param name="trackingWebsite">当serviceName=Other的情况时，需要填写对应的追踪网址</param>
        /// <returns></returns>
        public ApiSellerShipmentResponse SellerShipment(string serviceName, string logisticsNo, string sendType, string outRef, string description = null, string trackingWebsite = null)
        {
            var str = StrClient.api_sellerShipment(serviceName, logisticsNo, sendType, outRef, description, trackingWebsite);
            return this.DeserializeObject<ApiSellerShipmentResponse>(str);
        }
        /// <summary>
        /// 卖家提交纠纷仲裁申请（试用）
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <param name="reason">纠纷原因(有两个值，一个是noMatchDesc（货不对版），另外一个是notReceived（未收到货）<example>noMatchDesc</example></param>
        /// <param name="content">卖家提交仲裁描述</param>
        /// <returns></returns>
        public ApiSellerSubmitArbiResponse SellerSubmitArbi(long issueId, string reason, string content)
        {
            var str = StrClient.api_sellerSubmitArbi(issueId, reason, content);
            return this.DeserializeObject<ApiSellerSubmitArbiResponse>(str);
        }
        /// <summary>
        /// 设置单个产品的产品分组信息，最多设置三个分组。
        /// </summary>
        /// <param name="productId">产品ID<example>32218803874</example></param>
        /// <param name="groupIds">商品分组ID。如果需要将一个商品设置成多个分组，需要将分组id用逗号分隔，如：'123,456,789' 至多3个。<example>254562048</example></param>
        /// <returns></returns>
        public ApiSetGroupsResponse SetGroups(long productId, string groupIds)
        {
            var str = StrClient.api_setGroups(productId, groupIds);
            return this.DeserializeObject<ApiSetGroupsResponse>(str);
        }
        /// <summary>
        /// 商品橱窗设置
        /// </summary>
        /// <param name="productIdList">待设置橱窗的商品id，可输入多个，之前用半角分号分割。<example>1351344486;1351344487</example></param>
        /// <returns></returns>
        public ApiSetShopwindowProductResponse SetShopwindowProduct(string productIdList)
        {
            var str = StrClient.api_setShopwindowProduct(productIdList);
            return this.DeserializeObject<ApiSetShopwindowProductResponse>(str);
        }
        /// <summary>
        /// 修改商品所引用的尺码模板
        /// </summary>
        /// <param name="productId">商品Id<example>4363434343</example></param>
        /// <param name="sizechartId">尺码表模版Id, 必须与当前商品所在类目想对应。<example>544113</example></param>
        /// <returns></returns>
        public ApiSetSizeChartResponse SetSizeChart(long productId, long sizechartId)
        {
            var str = StrClient.api_setSizeChart(productId, sizechartId);
            return this.DeserializeObject<ApiSetSizeChartResponse>(str);
        }
        /// <summary>
        /// 查询指定类目适合的尺码模板
        /// </summary>
        /// <param name="postCatId"></param>
        /// <returns></returns>
        public ApiSizeModelsRequiredForPostCatResponse SizeModelsRequiredForPostCat(int postCatId)
        {
            var str = StrClient.api_sizeModelsRequiredForPostCat(postCatId);
            return this.DeserializeObject<ApiSizeModelsRequiredForPostCatResponse>(str);
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="input"></param>
        /// <param name="filename">图片原名，上传证明文件，支持jpg和png格式，大小不超过2MB。</param>
        /// <param name="orderId">订单ID</param>
        /// <returns></returns>
        public RequestLoanResult UpdateDeliveriedConfirmationFile(byte[] input = null, string filename = null, long? orderId = null)
        {
            var str = StrClient.api_updateDeliveriedConfirmationFile(input, filename, orderId);
            return this.DeserializeObject<RequestLoanResult>(str);
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID(即关系ID)</param>
        /// <param name="dealStat">处理状态(0未处理,1已处理)</param>
        /// <returns></returns>
        public EcResult UpdateMsgProcessed(string channelId, string dealStat)
        {
            var str = StrClient.api_updateMsgProcessed(channelId, dealStat);
            return this.DeserializeObject<EcResult>(str);
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID(即关系ID)<example>1123445</example></param>
        /// <param name="rank">标签(rank0,rank1,rank2,rank3,rank4,rank5)rank0~rank5为六种不同颜色标记依次为白，红，橙，绿，蓝，紫<example>rank1</example></param>
        /// <returns></returns>
        public EcResult UpdateMsgRank(string channelId, string rank)
        {
            var str = StrClient.api_updateMsgRank(channelId, rank);
            return this.DeserializeObject<EcResult>(str);
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID，即关系ID<example>2344555</example></param>
        /// <param name="msgSources">查询类型<value>message_center</value><example>message_center/order_msg</example></param>
        /// <returns></returns>
        public EcResult UpdateMsgRead(string channelId, string msgSources)
        {
            var str = StrClient.api_updateMsgRead(channelId, msgSources);
            return this.DeserializeObject<EcResult>(str);
        }
        /// <summary>
        /// 上传图片到图片银行（由于无法实现图片的上传、下载，故该测试工具不可用。）示例代码请参见
        /// http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#2468428
        /// </summary>
        /// <param name="fileName">上传文件名称，长度不要超过256个字符。<value>$req.http.params.fileName</value></param>
        /// <param name="groupId">图片保存的图片组，groupId为空，则图片保存在Other组中。</param>
        /// <returns></returns>
        public ApiUploadImageResponse UploadImage(string fileName, string groupId = null)
        {
            var str = StrClient.api_uploadImage(fileName, groupId);
            return this.DeserializeObject<ApiUploadImageResponse>(str);
        }
        /// <summary>
        /// 将商品图片上传到图片银行。这个接口与api.uploadImage的区别在于显式提供imageBytes参数用于设置图片的二进制数据。参数格式：imageBytes="12ff8722adfeefa..."。推荐使用。
        /// </summary>
        /// <param name="fileName">上传文件名称，长度不要超过256个字符。</param>
        /// <param name="imageBytes">图片文件的字节流;图片大小限制：3MB</param>
        /// <param name="groupId">图片保存的图片组，groupId为空，则图片保存在Other组中。</param>
        /// <returns></returns>
        public ApiUploadImage4SDKResponse UploadImage4SDK(string fileName, byte[] imageBytes, string groupId = null)
        {
            var str = StrClient.api_uploadImage4SDK(fileName, imageBytes, groupId);
            return this.DeserializeObject<ApiUploadImage4SDKResponse>(str);
        }
        /// <summary>
        /// 纠纷图片上传 （试用）
        /// </summary>
        /// <param name="extension">图片扩展名<example>32141243325234313.jpg</example></param>
        /// <returns></returns>
        public ApiUploadIssueImageResponse UploadIssueImage(string extension)
        {
            var str = StrClient.api_uploadIssueImage(extension);
            return this.DeserializeObject<ApiUploadIssueImageResponse>(str);
        }
        /// <summary>
        /// 上传图片到临时目录。适用于上传商品主图、商品详描图或SKU图片，用于商品主图介绍展示的临时图片至多支持上传6张图片。
        /// 示例代码请参见：http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#tpc
        /// 注意：
        /// http://gw.api.alibaba.com/fileapi/param2/1/aliexpress.open/api.uploadTempImage/{0}?access_token={1}&srcFileName={2}
        /// 把图片流POST到这地址即可。
        /// 商品主图的限制：1) 大小不超过5MB 2)尺寸不超过1000x1500  3) 图片格式: JPG/JPEG
        /// 商品SKU图的限制: 1) 大小不超过200KB 2) 尺寸不超过1000x1500 3) 图片格式: JPG/JPEG
        /// 商品详描图的限制: 1) 大小不超过5MB 2)尺寸不超过1000x5000 3)图片格式: JPG/JPEG
        /// </summary>
        /// <param name="srcFileName">图片原名<value>$req.http.params.srcFileName</value><example>1.jpg</example></param>
        /// <returns></returns>
        public ApiUploadTempImageResponse UploadTempImage(string srcFileName)
        {
            var str = StrClient.api_uploadTempImage(srcFileName);
            return this.DeserializeObject<ApiUploadTempImageResponse>(str);
        }
        /// <summary>
        /// 新的上传图片到临时目录接口。这个接口与api.uploadTempImage接口的区别在于：显示提供了fileData参数用于设置图片的字节参数。参数格式：fileData=af0012034...。推荐大家使用。
        /// </summary>
        /// <param name="srcFileName">图片原名<value>$req.http.params.srcFileName</value><example>1.jpg</example></param>
        /// <param name="fileData">字符串形式的图片文件二进制数据流<example>aff3fadfafd3fdd00123</example></param>
        /// <returns></returns>
        public ApiUploadTempImage4SDKResponse UploadTempImage4SDK(string srcFileName, byte[] fileData)
        {
            var str = StrClient.api_uploadTempImage4SDK(srcFileName, fileData);
            return this.DeserializeObject<ApiUploadTempImage4SDKResponse>(str);
        }
        /// <summary>
        /// 获取指定活动详细信息
        /// </summary>
        /// <param name="activityId">活动ID</param>
        /// <returns></returns>
        public FindSellerCouponActivityResponse FindSellerCouponActivity(long activityId)
        {
            var str = StrClient.findSellerCouponActivity(activityId);
            return this.DeserializeObject<FindSellerCouponActivityResponse>(str);
        }
        /// <summary>
        /// 查询已添加的coupon活动
        /// </summary>
        /// <param name="status">活动状态，可取值：["not_started", "releasing", "release_end", "closed"]<example>"release_end"</example></param>
        /// <param name="activityName">活动名称，支持模糊搜索<example>"name1"</example></param>
        /// <param name="minActivityStartDate">活动开始时间区间--最小值，允许格式"mm/dd/yyyy HH:mm:ss"<example>"01/01/2014 00:00:00"</example></param>
        /// <param name="maxActivityStartDate">活动开始时间区间--最大值，允许格式："mm/dd/yyyy HH:mm:ss"<example>"01/10/2014 00:00:00"</example></param>
        /// <param name="pageSize">每页展示记录数<value>20</value><example>10</example></param>
        /// <param name="currentPage">当前页的页码<value>1</value><example>1</example></param>
        /// <returns></returns>
        public GetActListResponse GetActList(string status = null, string activityName = null, string minActivityStartDate = null, string maxActivityStartDate = null, int? pageSize = null, int? currentPage = null)
        {
            var str = StrClient.getActList(status, activityName, minActivityStartDate, maxActivityStartDate, pageSize, currentPage);
            return this.DeserializeObject<GetActListResponse>(str);
        }
        /// <summary>
        /// 根据发布类目id、父属性路径（可选）获取子属性信息
        /// </summary>
        /// <param name="cateId">叶子类目ID。通过产品获取类目ID，如果只传cid，则返回一级属性。<example>5090301</example></param>
        /// <param name="parentAttrValueList">类目子属性路径,由该子属性上层的类目属性id和类目属性值id组成,格式参考示例。如需返回此类目对应的子属性，则需同cateid一起进行提交。<example>[[2,200013977]]</example></param>
        /// <returns></returns>
        public GetChildAttributesResultByPostCateIdAndPathResponse GetChildAttributesResultByPostCateIdAndPath(int cateId, string parentAttrValueList = null)
        {
            var str = StrClient.getChildAttributesResultByPostCateIdAndPath(cateId, parentAttrValueList);
            return this.DeserializeObject<GetChildAttributesResultByPostCateIdAndPathResponse>(str);
        }
        /// <summary>
        /// 需要联系ae开放平台人员开通权限，普通isv暂时无法使用。游标式获取失败的消息列表，获取的消息会自动消费成功的确认。所以下次以相同条件调用获取的是剩下的数据，直至返回数据为空,针对发送失败的消息，仅保留7天前的数据
        /// </summary>
        /// <param name="createStartTime">消息创建时间查找开始范围，如果时间小于7天前，默认设置为最小值=当前时间-7天<example>20130417000000000+0800</example></param>
        /// <param name="createEndTime">消息创建时间查找结束范围，如果时间大于当前时间，默认设置最大值=当前时间<example>20130417000000000+0800</example></param>
        /// <param name="quantity">每次取的数据量，范围20-200，默认20<value>20</value><example>20</example></param>
        /// <param name="type">查询某一个消息类型<example>SYSTEM_AE_PLATFORM</example></param>
        /// <param name="userInfo">查询的某个用户的消息，国际站用户loginId</param>
        /// <returns></returns>
        public PushCursorMessageListResponse PushCursorMessageList(System.DateTimeOffset createStartTime, System.DateTimeOffset createEndTime, int? quantity = null, string type = null, string userInfo = null)
        {
            var str = StrClient.push_cursor_messageList(createStartTime, createEndTime, quantity, type, userInfo);
            return this.DeserializeObject<PushCursorMessageListResponse>(str);
        }
        /// <summary>
        /// 需要联系ae开放平台申请权限，普通isv暂时无法使用。手动调用确认api，确认消息已经被消费成功。仅当使用查询式获取失败消息的api时，才需要使用
        /// </summary>
        /// <param name="msgIdList">待确认的消息id列表<example>[123,456]</example></param>
        /// <returns></returns>
        public PushMessageConfirmResponse PushMessageConfirm(long[] msgIdList)
        {
            var str = StrClient.push_message_confirm(msgIdList);
            return this.DeserializeObject<PushMessageConfirmResponse>(str);
        }
        /// <summary>
        /// 需要向ae开放平台申请权限，普通isv暂时无法使用。查询式获取发送的消息列表，获取的消息不会自动确认，需要调用方手动调用确认api来确认消费状态。需注意，确认后，会影响分页返回的数据,针对发送失败的消息，仅保留7天前的数据
        /// </summary>
        /// <param name="createStartTime">消息创建时间查找开始范围，如果时间小于7天前，默认设置为最小值=当前时间-7天<example>20130417000000000+0800</example></param>
        /// <param name="createEndTime">消息创建时间查找结束范围，如果时间大于当前时间，默认设置最大值=当前时间<example>20130417000000000+0800</example></param>
        /// <param name="page">当前数据页，默认为1<value>1</value><example>1</example></param>
        /// <param name="pageSize">每次分页取的数据量，范围20-200，默认20<value>20</value><example>20</example></param>
        /// <param name="type">查询某一个消息类型<example>SYSTEM_AE_PLATFORM</example></param>
        /// <param name="userInfo">查询的某个用户的消息，国际站用户loginId</param>
        /// <returns></returns>
        public PushQueryMessageListResponse PushQueryMessageList(System.DateTimeOffset createStartTime, System.DateTimeOffset createEndTime, int? page = null, int? pageSize = null, string type = null, string userInfo = null)
        {
            var str = StrClient.push_query_messageList(createStartTime, createEndTime, page, pageSize, type, userInfo);
            return this.DeserializeObject<PushQueryMessageListResponse>(str);
        }
        /// <summary>
        /// 判断发布类目尺码模板是否必须
        /// </summary>
        /// <param name="postCatId"></param>
        /// <returns></returns>
        public SizeModelIsRequiredForPostCatResponse SizeModelIsRequiredForPostCat(int postCatId)
        {
            var str = StrClient.sizeModelIsRequiredForPostCat(postCatId);
            return this.DeserializeObject<SizeModelIsRequiredForPostCatResponse>(str);
        }
        #endregion AliAPI方法
    }
}


namespace SDK.Platform.AliExpressApi
{
    partial class AliExpressStrClient
    {
        #region AliAPI名称
        /// <summary>
        /// 根据请求地址的类型：发货地址信息，揽收地址信息，退货地址信息，返回相应的地址列表。
        /// </summary>
        private const string _alibaba_ae_api_getLogisticsSellerAddresses = "alibaba.ae.api.getLogisticsSellerAddresses";
        /// <summary>
        /// 满足api对新纠纷的查询需求
        /// </summary>
        private const string _alibaba_ae_issue_findIssueDetailByIssueId = "alibaba.ae.issue.findIssueDetailByIssueId";
        /// <summary>
        /// 物流面单的字段信息
        /// </summary>
        private const string _alibaba_ae_logistics_getFieldInfoForPrint = "alibaba.ae.logistics.getFieldInfoForPrint";
        /// <summary>
        /// AppsFlyer是AE合作的广告商，它会给AE传输AE否投放广告的效果数据
        /// </summary>
        private const string _alibaba_ae_message_pushPerfData = "alibaba.ae.message.pushPerfData";
        /// <summary>
        /// 卖家post商品时可选择商品有效期。
        /// 每次延长的有效期=post商品时卖家选择的商品有效期
        /// </summary>
        private const string _alibaba_ae_product_renewExpire = "alibaba.ae.product.renewExpire";
        /// <summary>
        /// 查询店铺当月服务等级相关信息（包括该卖家上月考核订单量，当月考核周期，当月服务等级计算起始时间，当月服务等级计算截止时间，当月服务等级，上月每日服务分均值，下月等级预估计算起始时间，下月等级预估计算截止时间，下月等级预估）
        /// </summary>
        private const string _alibaba_ae_seller_getCurrentLevelInfo = "alibaba.ae.seller.getCurrentLevelInfo";
        /// <summary>
        /// 获取全店铺考核期内未在48小时内发货订单分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getOrderListForLateShipment = "alibaba.ae.seller.getOrderListForLateShipment";
        /// <summary>
        /// 获取全店铺考核期内成交不卖订单分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getOrderListForNoShipment = "alibaba.ae.seller.getOrderListForNoShipment";
        /// <summary>
        /// 获取全店铺考核期内未收到货物纠纷提起订单分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getOrderListForNR = "alibaba.ae.seller.getOrderListForNR";
        /// <summary>
        /// 获取全店铺考核期内货不对版纠纷提起订单分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getOrderListForSNAD = "alibaba.ae.seller.getOrderListForSNAD";
        /// <summary>
        /// 获取全店铺考核期内DSR卖家服务中低分商品分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getProductListForLowCustomerServiceDSR = "alibaba.ae.seller.getProductListForLowCustomerServiceDSR";
        /// <summary>
        /// 获取全店铺考核期内DSR商品描述中低分商品分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getProductListForLowDescriptionDSR = "alibaba.ae.seller.getProductListForLowDescriptionDSR";
        /// <summary>
        /// 获取全店铺考核期内DSR物流中低分商品分页列表
        /// </summary>
        private const string _alibaba_ae_seller_getProductListForLowLogisticsDSR = "alibaba.ae.seller.getProductListForLowLogisticsDSR";
        /// <summary>
        /// 获取卖家每日服务分计算起始时间，每日服务分计算截止时间，每日服务分，该卖家所在主营二级行业名称，该卖家所在主营二级行业平均分，各考核项（考核项名称、权重、该卖家该考核项指标、该卖家该考核项得分、该卖家所在主营二级行业指标均值，该卖家所在主营二级行业得分均值）
        /// </summary>
        private const string _alibaba_ae_seller_getServiceScoreInfo = "alibaba.ae.seller.getServiceScoreInfo";
        /// <summary>
        /// 获取考核期内指定类目的服务分信息
        /// </summary>
        private const string _alibaba_ae_seller_getServiceScoreInfoByCategory = "alibaba.ae.seller.getServiceScoreInfoByCategory";
        /// <summary>
        /// 获取考核期内指定商品的服务得分信息
        /// </summary>
        private const string _alibaba_ae_seller_getServiceScoreInfoByProduct = "alibaba.ae.seller.getServiceScoreInfoByProduct";
        /// <summary>
        /// 返回值包装类
        /// </summary>
        private const string _alibaba_ae_seller_queryMerchant = "alibaba.ae.seller.queryMerchant";
        /// <summary>
        /// 
        /// </summary>
        private const string _alibaba_ae_seller_trade_sellerSendGoodsFinish = "alibaba.ae.seller.trade.sellerSendGoodsFinish";
        /// <summary>
        /// 查询商家认证信息
        /// </summary>
        private const string _alibaba_ae_userauth_queryMerchantCertificationInfo = "alibaba.ae.userauth.queryMerchantCertificationInfo";
        /// <summary>
        /// 保修相关API接口，故从纠纷类调整至保修类API。
        /// </summary>
        private const string _alibaba_ae_warrantie_getList = "alibaba.ae.warrantie.getList";
        /// <summary>
        /// 多语言原发接口。卖家可以通过这个接口发布一个多语言商品。一次只能发布一种多语言商品，例如：俄文。
        /// </summary>
        private const string _alibaba_product_postMultilanguageAeProduct = "alibaba.product.postMultilanguageAeProduct";
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        private const string _api_addMsg = "api.addMsg";
        /// <summary>
        /// 运费计算
        /// </summary>
        private const string _api_calculateFreight = "api.calculateFreight";
        /// <summary>
        /// 通过淘宝产品的url进行单品认领（URL需做代码转译。)
        /// </summary>
        private const string _api_claimTaobaoProducts4API = "api.claimTaobaoProducts4API";
        /// <summary>
        /// 创建一个新的产品分组.一个用户的一级分组最多有10个，二级分组最多有10个。
        /// </summary>
        private const string _api_createProductGroup = "api.createProductGroup";
        /// <summary>
        /// 创建线上发货物流订单
        /// 关于中国邮政平常小包 使用说明请参见http://seller.aliexpress.com/so/onlinelogistics_postbj.php
        /// 中国邮政平常小包 获取国际跟踪单号请通过http://gw.api.alibaba.com/dev/doc/api.htm?ns=aliexpress.open
        /// </summary>
        private const string _api_createWarehouseOrder = "api.createWarehouseOrder";
        /// <summary>
        /// 删除用户图片银行中未被引用的图片信息
        /// </summary>
        private const string _api_delUnUsePhoto = "api.delUnUsePhoto";
        /// <summary>
        /// 商品编辑接口（修改任何一个商品信息时，必须将其他所有信息进行填写全面后再提交，否则会出现报错情况出现。）
        /// </summary>
        private const string _api_editAeProduct = "api.editAeProduct";
        /// <summary>
        /// 原发编辑商品多语言标题或详描描述（英文版本除外）。试用
        /// </summary>
        private const string _api_editMultilanguageProduct = "api.editMultilanguageProduct";
        /// <summary>
        /// 编辑单个商品的一个或者多个SKU可售库存。将要修改的SKU的库存值保存在skuStocks参数中(Map类型数据)，其中key为SKU ID(字符串), value为对应的库存值(Long型)。
        /// </summary>
        private const string _api_editMutilpleSkuStocks = "api.editMutilpleSkuStocks";
        /// <summary>
        /// 编辑商品的类目属性，用给定的类目属性覆盖原有的类目属性。(试用)
        /// </summary>
        private const string _api_editProductCategoryAttributes = "api.editProductCategoryAttributes";
        /// <summary>
        /// 编辑产品类目、属性、sku
        /// </summary>
        private const string _api_editProductCidAttIdSku = "api.editProductCidAttIdSku";
        /// <summary>
        /// 编辑商品的单个字段(目前使用api.editSimpleProductFiled这个接口 暂不支持商品分组、商品属性、SKU、服务模板的修改。请注意！)
        /// </summary>
        private const string _api_editSimpleProductFiled = "api.editSimpleProductFiled";
        /// <summary>
        /// 编辑商品的单个SKU价格信息。
        /// </summary>
        private const string _api_editSingleSkuPrice = "api.editSingleSkuPrice";
        /// <summary>
        /// 编辑商品单个SKU的库存信息.
        /// </summary>
        private const string _api_editSingleSkuStock = "api.editSingleSkuStock";
        /// <summary>
        /// 查询待卖家评价的订单信息
        /// </summary>
        private const string _api_evaluation_querySellerEvaluationOrderList = "api.evaluation.querySellerEvaluationOrderList";
        /// <summary>
        /// 卖家对未评价的订单进行评价
        /// </summary>
        private const string _api_evaluation_saveSellerFeedback = "api.evaluation.saveSellerFeedback";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_extendsBuyerAcceptGoodsTime = "api.extendsBuyerAcceptGoodsTime";
        /// <summary>
        /// 根据商品id查询单个商品的详细信息。
        /// </summary>
        private const string _api_findAeProductById = "api.findAeProductById";
        /// <summary>
        /// 查询信息模板列表
        /// </summary>
        private const string _api_findAeProductDetailModuleListByQurey = "api.findAeProductDetailModuleListByQurey";
        /// <summary>
        /// 根据模块id查询模块，模块在detail详情中显示格式：<kse:widget data-widget-type="widget" id="1004" title="Specification " type="relation"></kse:widget>
        /// 标签属性id="1004"对应返回值中的id,标签属性type="relation"对应返回值中的type, 标签属性title="Specification "对应返回值中的name.
        /// </summary>
        private const string _api_findAeProductModuleById = "api.findAeProductModuleById";
        /// <summary>
        /// 调用发布商品接口api.postaeproduct前，针对商品标题等信息做违禁词相关信息查询接口。
        /// 当前支持的违禁词查询范围包括：1.商品的标题，2.商品的关键字, 3. 商品的类目属性, 4.商品的详细描述。用户提供以上四个参数以及商品的类目ID来查询标题、关键字、类目属性、详细描述中是否包含了当前类目的违禁词。
        /// 发布产品时平台提供的违禁词查询只供参考和引导的作用，同时由于是系统检测并不能判断实际词语应用的场景，所以还需请您不断仔细检查相关词语的应用情况，可点此进入知识产权的相关学习：http://seller.aliexpress.com/education/rules/ipr31.html?tracelog=ipr01zscqzq
        /// </summary>
        private const string _api_findAeProductProhibitedWords = "api.findAeProductProhibitedWords";
        /// <summary>
        /// 查询商品状态，商品供三种状态。审核通过:approved;审核中:auditing;审核不通过:refuse
        /// </summary>
        private const string _api_findAeProductStatusById = "api.findAeProductStatusById";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_findLoanListQuery = "api.findLoanListQuery";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_findOrderBaseInfo = "api.findOrderBaseInfo";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_findOrderById = "api.findOrderById";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_findOrderListQuery = "api.findOrderListQuery";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_findOrderListSimpleQuery = "api.findOrderListSimpleQuery";
        /// <summary>
        /// 收货地址
        /// </summary>
        private const string _api_findOrderReceiptInfo = "api.findOrderReceiptInfo";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_findOrderTradeInfo = "api.findOrderTradeInfo";
        /// <summary>
        /// 商品列表查询接口。主账号可查询所有商品，子账号只可查询自身所属商品。
        /// </summary>
        private const string _api_findProductInfoListQuery = "api.findProductInfoListQuery";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_getAllProvince = "api.getAllProvince";
        /// <summary>
        /// 获取属性需要优化的商品列表
        /// </summary>
        private const string _api_getAtributeMissingProductList = "api.getAtributeMissingProductList";
        /// <summary>
        /// 获取下级类目信息,同获取单个类目信息内容相同（cateId=0获得一级类目列表）
        /// </summary>
        private const string _api_getChildrenPostCategoryById = "api.getChildrenPostCategoryById";
        /// <summary>
        /// 通过模板ID获取单个运费模板内容
        /// </summary>
        private const string _api_getFreightSettingByTemplateQuery = "api.getFreightSettingByTemplateQuery";
        /// <summary>
        /// 读取下一级别的地址信息
        /// </summary>
        private const string _api_getNextLevelAddressData = "api.getNextLevelAddressData";
        /// <summary>
        /// 线上物流发货专用接口
        /// </summary>
        private const string _api_getOnlineLogisticsInfo = "api.getOnlineLogisticsInfo";
        /// <summary>
        /// 根据交易订单获取线上发货物流服务列表，线上发货物流服务仅能用于线上发货，请了解！
        /// 以下包裹信息是不支持线上发货的，获取方案可能为空：
        /// 1、长\宽\高  加起来 不能大于90;
        /// 2、长宽高最大的一条边不能大于60cm;
        /// 3、包裹重量不能超过2KG;
        /// 4、已操作线下物流发货的订单。
        /// </summary>
        private const string _api_getOnlineLogisticsServiceListByOrderId = "api.getOnlineLogisticsServiceListByOrderId";
        /// <summary>
        /// 获取图片银行信息，例如图片银行容量，已使用量等信息。
        /// </summary>
        private const string _api_getPhotoBankInfo = "api.getPhotoBankInfo";
        /// <summary>
        /// 获取单个类目信息
        /// </summary>
        private const string _api_getPostCategoryById = "api.getPostCategoryById";
        /// <summary>
        /// 获取线上发货标签(线上物流发货专用接口)
        /// </summary>
        private const string _api_getPrintInfo = "api.getPrintInfo";
        /// <summary>
        /// 批量获取线上发货标签(线上物流发货专用接口)
        /// </summary>
        private const string _api_getPrintInfos = "api.getPrintInfos";
        /// <summary>
        /// 获取当前会员的产品分组
        /// </summary>
        private const string _api_getProductGroupList = "api.getProductGroupList";
        /// <summary>
        /// 可查询获取该卖家目前实际可用橱窗数量。调用该接口时需主要针对主账户ID提供查询服务，子账号ID无法获取相关橱窗数量查询。(试用）
        /// </summary>
        private const string _api_getRemainingWindows = "api.getRemainingWindows";
        /// <summary>
        /// 查询当前用户在指定类目下可用的尺码模版信息。
        /// </summary>
        private const string _api_getSizeChartInfoByCategoryId = "api.getSizeChartInfoByCategoryId";
        /// <summary>
        /// 获取某个卖家橱窗商品目前使用情况详情。
        /// </summary>
        private const string _api_getWindowProducts = "api.getWindowProducts";
        /// <summary>
        /// 纠纷中卖家新增订单留言（试用）留言内容同订单留言。
        /// </summary>
        private const string _api_leaveOrderMessage = "api.leaveOrderMessage";
        /// <summary>
        /// 列出用户的运费模板
        /// </summary>
        private const string _api_listFreightTemplate = "api.listFreightTemplate";
        /// <summary>
        /// 获取图片银行指定分组的子分组信息
        /// </summary>
        private const string _api_listGroup = "api.listGroup";
        /// <summary>
        /// 图片银行列表分页查询
        /// </summary>
        private const string _api_listImagePagination = "api.listImagePagination";
        /// <summary>
        /// 此接口返回的物流服务于线上发货物流服务不同。此接口返回的物流服务用语卖家设置运费模板和声明发货，不能用于线上发货。请注意！
        /// </summary>
        private const string _api_listLogisticsService = "api.listLogisticsService";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_listTbProductByIds = "api.listTbProductByIds";
        /// <summary>
        /// 商品下架接口。需要下架的商品的通过productIds参数指定，多个商品之间用英文分号隔开。
        /// </summary>
        private const string _api_offlineAeProduct = "api.offlineAeProduct";
        /// <summary>
        /// 上架一个或者多个商品，待上架的产品ID通过参数productIds指定，产品ID之间使用英文分号(;)隔开, 最多一次只能上架50个商品。
        /// 
        /// 行业准入商品上架限制
        /// 如果用户退出了一个行业准入的类目(比如：假发)，那么将无法上架这个类目下的商品。
        /// 
        /// 返回值
        /// 1. 接口调用成功后，将返回类似的json串: {"modifyCount": 10, success: true}。
        /// 2. 接口调用失败后，将返回类似的json串: {"error_code": "11001023", "error_message": "Product too much", "exception": "exception message"}
        /// </summary>
        private const string _api_onlineAeProduct = "api.onlineAeProduct";
        /// <summary>
        /// post产品并且返回post成功后的产品的id
        /// </summary>
        private const string _api_postAeProduct = "api.postAeProduct";
        /// <summary>
        /// 这个结构体主要用于保存会员等级查询结果，若查询成功会返回true和买家等级；若查询失败则返回false，和错误码及对应的错误信息
        /// </summary>
        private const string _api_queryAccountLevel = "api.queryAccountLevel";
        /// <summary>
        /// 查询速卖通平台公告信息
        /// </summary>
        private const string _api_queryAeAnouncement = "api.queryAeAnouncement";
        /// <summary>
        /// 根据纠纷ID查询纠纷详情信息-已停用
        /// </summary>
        private const string _api_queryIssueDetail = "api.queryIssueDetail";
        /// <summary>
        /// 查询纠纷列表信息。（试用）
        /// </summary>
        private const string _api_queryIssueList = "api.queryIssueList";
        /// <summary>
        /// 站内信/订单留言查询详情列表
        /// </summary>
        private const string _api_queryMsgDetailList = "api.queryMsgDetailList";
        /// <summary>
        /// 根据买卖家loginId查询站内信
        /// </summary>
        private const string _api_queryMsgDetailListByBuyerId = "api.queryMsgDetailListByBuyerId";
        /// <summary>
        /// 获取当前用户下与当前用户建立消息关系的列表
        /// </summary>
        private const string _api_queryMsgRelationList = "api.queryMsgRelationList";
        /// <summary>
        /// 查询开放平台公告信息
        /// </summary>
        private const string _api_queryOpenAnouncement = "api.queryOpenAnouncement";
        /// <summary>
        /// 根据path查询图片信息
        /// </summary>
        private const string _api_queryPhotoBankImageByPaths = "api.queryPhotoBankImageByPaths";
        /// <summary>
        /// 查询商品每日加入购物车数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        private const string _api_queryProductAddCartInfoEverydayById = "api.queryProductAddCartInfoEverydayById";
        /// <summary>
        /// 查询商品交易表现
        /// </summary>
        private const string _api_queryProductBusinessInfoById = "api.queryProductBusinessInfoById";
        /// <summary>
        /// 查询商品每天被曝光数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        private const string _api_queryProductExposedInfoEverydayById = "api.queryProductExposedInfoEverydayById";
        /// <summary>
        /// 查询商品每天被收藏的数量(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        private const string _api_queryProductFavoritedInfoEverydayById = "api.queryProductFavoritedInfoEverydayById";
        /// <summary>
        /// 查询指定商品id所在产品分组
        /// </summary>
        private const string _api_queryProductGroupIdByProductId = "api.queryProductGroupIdByProductId";
        /// <summary>
        /// 查询商品每天的销量数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        private const string _api_queryProductSalesInfoEverydayById = "api.queryProductSalesInfoEverydayById";
        /// <summary>
        /// 查询商品每日浏览量(该数据仅限30天之内的时间区间数据查询）(试用）
        /// </summary>
        private const string _api_queryProductViewedInfoEverydayById = "api.queryProductViewedInfoEverydayById";
        /// <summary>
        /// 服务模板查询API
        /// </summary>
        private const string _api_queryPromiseTemplateById = "api.queryPromiseTemplateById";
        /// <summary>
        /// 查询速卖通服务市场公告信息
        /// </summary>
        private const string _api_queryServiceAnouncement = "api.queryServiceAnouncement";
        /// <summary>
        /// 查询物流追踪信息
        /// </summary>
        private const string _api_queryTrackingResult = "api.queryTrackingResult";
        /// <summary>
        /// 根据主订单号和保修服务商查订单
        /// </summary>
        private const string _api_queryWarrantiesByOrderId = "api.queryWarrantiesByOrderId";
        /// <summary>
        /// 获取生效保修信息
        /// </summary>
        private const string _api_queryWarrantiesInforce = "api.queryWarrantiesInforce";
        /// <summary>
        /// 创建线上发货物流订单时，若卖家选择自寄到仓库，需要填写使用的国内物流公司，此接口返回平台支持的国内物流公司信息。
        /// </summary>
        private const string _api_qureyWlbDomesticLogisticsCompany = "api.qureyWlbDomesticLogisticsCompany";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_requestPaymentRelease = "api.requestPaymentRelease";
        /// <summary>
        /// 卖家放弃退货申请（退货）
        /// </summary>
        private const string _api_sellerAbandonReceiveGoods = "api.sellerAbandonReceiveGoods";
        /// <summary>
        /// 卖家同意纠纷 -已停用
        /// </summary>
        private const string _api_sellerAgreeIssue = "api.sellerAgreeIssue";
        /// <summary>
        /// 卖家确认收货 (试用)
        /// </summary>
        private const string _api_sellerConrimReceiveGoods = "api.sellerConrimReceiveGoods";
        /// <summary>
        /// 修改发货通知(一个订单只能修改2次，只能修改发货通知后5日内的订单，请注意！)
        /// </summary>
        private const string _api_sellerModifiedShipment = "api.sellerModifiedShipment";
        /// <summary>
        /// 卖家拒绝纠纷 -已停用
        /// </summary>
        private const string _api_sellerRefuseIssue = "api.sellerRefuseIssue";
        /// <summary>
        /// 填写发货通知
        /// </summary>
        private const string _api_sellerShipment = "api.sellerShipment";
        /// <summary>
        /// 卖家提交纠纷仲裁申请（试用）
        /// </summary>
        private const string _api_sellerSubmitArbi = "api.sellerSubmitArbi";
        /// <summary>
        /// 设置单个产品的产品分组信息，最多设置三个分组。
        /// </summary>
        private const string _api_setGroups = "api.setGroups";
        /// <summary>
        /// 商品橱窗设置
        /// </summary>
        private const string _api_setShopwindowProduct = "api.setShopwindowProduct";
        /// <summary>
        /// 修改商品所引用的尺码模板
        /// </summary>
        private const string _api_setSizeChart = "api.setSizeChart";
        /// <summary>
        /// 查询指定类目适合的尺码模板
        /// </summary>
        private const string _api_sizeModelsRequiredForPostCat = "api.sizeModelsRequiredForPostCat";
        /// <summary>
        /// 
        /// </summary>
        private const string _api_updateDeliveriedConfirmationFile = "api.updateDeliveriedConfirmationFile";
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        private const string _api_updateMsgProcessed = "api.updateMsgProcessed";
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        private const string _api_updateMsgRank = "api.updateMsgRank";
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        private const string _api_updateMsgRead = "api.updateMsgRead";
        /// <summary>
        /// 上传图片到图片银行（由于无法实现图片的上传、下载，故该测试工具不可用。）示例代码请参见
        /// http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#2468428
        /// </summary>
        private const string _api_uploadImage = "api.uploadImage";
        /// <summary>
        /// 将商品图片上传到图片银行。这个接口与api.uploadImage的区别在于显式提供imageBytes参数用于设置图片的二进制数据。参数格式：imageBytes="12ff8722adfeefa..."。推荐使用。
        /// </summary>
        private const string _api_uploadImage4SDK = "api.uploadImage4SDK";
        /// <summary>
        /// 纠纷图片上传 （试用）
        /// </summary>
        private const string _api_uploadIssueImage = "api.uploadIssueImage";
        /// <summary>
        /// 上传图片到临时目录。适用于上传商品主图、商品详描图或SKU图片，用于商品主图介绍展示的临时图片至多支持上传6张图片。
        /// 示例代码请参见：http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#tpc
        /// 注意：
        /// http://gw.api.alibaba.com/fileapi/param2/1/aliexpress.open/api.uploadTempImage/{0}?access_token={1}&srcFileName={2}
        /// 把图片流POST到这地址即可。
        /// 商品主图的限制：1) 大小不超过5MB 2)尺寸不超过1000x1500  3) 图片格式: JPG/JPEG
        /// 商品SKU图的限制: 1) 大小不超过200KB 2) 尺寸不超过1000x1500 3) 图片格式: JPG/JPEG
        /// 商品详描图的限制: 1) 大小不超过5MB 2)尺寸不超过1000x5000 3)图片格式: JPG/JPEG
        /// </summary>
        private const string _api_uploadTempImage = "api.uploadTempImage";
        /// <summary>
        /// 新的上传图片到临时目录接口。这个接口与api.uploadTempImage接口的区别在于：显示提供了fileData参数用于设置图片的字节参数。参数格式：fileData=af0012034...。推荐大家使用。
        /// </summary>
        private const string _api_uploadTempImage4SDK = "api.uploadTempImage4SDK";
        /// <summary>
        /// 获取指定活动详细信息
        /// </summary>
        private const string _findSellerCouponActivity = "findSellerCouponActivity";
        /// <summary>
        /// 查询已添加的coupon活动
        /// </summary>
        private const string _getActList = "getActList";
        /// <summary>
        /// 根据发布类目id、父属性路径（可选）获取子属性信息
        /// </summary>
        private const string _getChildAttributesResultByPostCateIdAndPath = "getChildAttributesResultByPostCateIdAndPath";
        /// <summary>
        /// 需要联系ae开放平台人员开通权限，普通isv暂时无法使用。游标式获取失败的消息列表，获取的消息会自动消费成功的确认。所以下次以相同条件调用获取的是剩下的数据，直至返回数据为空,针对发送失败的消息，仅保留7天前的数据
        /// </summary>
        private const string _push_cursor_messageList = "push.cursor.messageList";
        /// <summary>
        /// 需要联系ae开放平台申请权限，普通isv暂时无法使用。手动调用确认api，确认消息已经被消费成功。仅当使用查询式获取失败消息的api时，才需要使用
        /// </summary>
        private const string _push_message_confirm = "push.message.confirm";
        /// <summary>
        /// 需要向ae开放平台申请权限，普通isv暂时无法使用。查询式获取发送的消息列表，获取的消息不会自动确认，需要调用方手动调用确认api来确认消费状态。需注意，确认后，会影响分页返回的数据,针对发送失败的消息，仅保留7天前的数据
        /// </summary>
        private const string _push_query_messageList = "push.query.messageList";
        /// <summary>
        /// 判断发布类目尺码模板是否必须
        /// </summary>
        private const string _sizeModelIsRequiredForPostCat = "sizeModelIsRequiredForPostCat";
        #endregion AliAPI名称
        #region AliAPI方法
        /// <summary>
        /// 根据请求地址的类型：发货地址信息，揽收地址信息，退货地址信息，返回相应的地址列表。
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public string alibaba_ae_api_getLogisticsSellerAddresses(string request)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("request", request);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_api_getLogisticsSellerAddresses, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 满足api对新纠纷的查询需求
        /// </summary>
        /// <param name="issueId">纠纷ID<example>400094178884822</example></param>
        /// <returns></returns>
        public string alibaba_ae_issue_findIssueDetailByIssueId(long issueId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_issue_findIssueDetailByIssueId, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 物流面单的字段信息
        /// </summary>
        /// <param name="request">运单号面单PDF打印查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_logistics_getFieldInfoForPrint(string request)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("request", request);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_logistics_getFieldInfoForPrint, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// AppsFlyer是AE合作的广告商，它会给AE传输AE否投放广告的效果数据
        /// </summary>
        /// <returns></returns>
        public string alibaba_ae_message_pushPerfData()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_message_pushPerfData, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家post商品时可选择商品有效期。
        /// 每次延长的有效期=post商品时卖家选择的商品有效期
        /// </summary>
        /// <param name="productId">需要延长有效期的商品id<example>1234</example></param>
        /// <returns></returns>
        public string alibaba_ae_product_renewExpire(long productId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_product_renewExpire, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询店铺当月服务等级相关信息（包括该卖家上月考核订单量，当月考核周期，当月服务等级计算起始时间，当月服务等级计算截止时间，当月服务等级，上月每日服务分均值，下月等级预估计算起始时间，下月等级预估计算截止时间，下月等级预估）
        /// </summary>
        /// <param name="loginId">卖家loginId，需要与授权用户相同<value>$req.userAuthz.userId</value><example>cn11311231</example></param>
        /// <returns></returns>
        public string alibaba_ae_seller_getCurrentLevelInfo(string loginId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("loginId", loginId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getCurrentLevelInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内未在48小时内发货订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getOrderListForLateShipment(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getOrderListForLateShipment, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内成交不卖订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getOrderListForNoShipment(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getOrderListForNoShipment, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内未收到货物纠纷提起订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getOrderListForNR(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getOrderListForNR, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内货不对版纠纷提起订单分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getOrderListForSNAD(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getOrderListForSNAD, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内DSR卖家服务中低分商品分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getProductListForLowCustomerServiceDSR(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getProductListForLowCustomerServiceDSR, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内DSR商品描述中低分商品分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getProductListForLowDescriptionDSR(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getProductListForLowDescriptionDSR, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取全店铺考核期内DSR物流中低分商品分页列表
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getProductListForLowLogisticsDSR(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getProductListForLowLogisticsDSR, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取卖家每日服务分计算起始时间，每日服务分计算截止时间，每日服务分，该卖家所在主营二级行业名称，该卖家所在主营二级行业平均分，各考核项（考核项名称、权重、该卖家该考核项指标、该卖家该考核项得分、该卖家所在主营二级行业指标均值，该卖家所在主营二级行业得分均值）
        /// </summary>
        /// <param name="loginId">卖家loginId，需要与授权用户相同<value>$req.userAuthz.userId</value><example>cn11311231</example></param>
        /// <param name="localeStr">语言环境<example>zh_CN，zh_TW，en_US</example></param>
        /// <returns></returns>
        public string alibaba_ae_seller_getServiceScoreInfo(string loginId = null, string localeStr = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("loginId", loginId);
            dic.Add("localeStr", localeStr);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getServiceScoreInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取考核期内指定类目的服务分信息
        /// </summary>
        /// <param name="query">查询参数</param>
        /// <returns></returns>
        public string alibaba_ae_seller_getServiceScoreInfoByCategory(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getServiceScoreInfoByCategory, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取考核期内指定商品的服务得分信息
        /// </summary>
        /// <param name="query"><example>查询参数</example></param>
        /// <returns></returns>
        public string alibaba_ae_seller_getServiceScoreInfoByProduct(string query)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("query", query);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_getServiceScoreInfoByProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 返回值包装类
        /// </summary>
        /// <param name="sellerId">卖家主账号ID</param>
        /// <param name="properties">字段列表</param>
        /// <returns></returns>
        public string alibaba_ae_seller_queryMerchant(long sellerId, string properties = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("sellerId", sellerId);
            dic.Add("properties", properties);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_queryMerchant, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId"></param>
        /// <param name="sellerOperationAliid"></param>
        /// <returns></returns>
        public string alibaba_ae_seller_trade_sellerSendGoodsFinish(long orderId, long sellerOperationAliid)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("sellerOperationAliid", sellerOperationAliid);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_seller_trade_sellerSendGoodsFinish, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商家认证信息
        /// </summary>
        /// <param name="adminMemberSeq"></param>
        /// <returns></returns>
        public string alibaba_ae_userauth_queryMerchantCertificationInfo(long adminMemberSeq)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("adminMemberSeq", adminMemberSeq);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_userauth_queryMerchantCertificationInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 保修相关API接口，故从纠纷类调整至保修类API。
        /// </summary>
        /// <param name="supplierId">供应商id</param>
        /// <param name="startBuyTime">服务购买开始时间</param>
        /// <param name="endBuyTime">服务购买结束时间</param>
        /// <param name="startCreateTime">服务判定生效开始时间</param>
        /// <param name="endCreateTime">服务判定生效结束时间</param>
        /// <param name="pageSize">每页获取条数<value>50</value><example>200</example></param>
        /// <param name="pageNo">页码<value>1</value><example>1</example></param>
        /// <returns></returns>
        public string alibaba_ae_warrantie_getList(string supplierId, string startBuyTime = null, string endBuyTime = null, string startCreateTime = null, string endCreateTime = null, int? pageSize = null, int? pageNo = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("supplierId", supplierId);
            dic.Add("startBuyTime", startBuyTime);
            dic.Add("endBuyTime", endBuyTime);
            dic.Add("startCreateTime", startCreateTime);
            dic.Add("endCreateTime", endCreateTime);
            dic.Add("pageSize", pageSize);
            dic.Add("pageNo", pageNo);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_ae_warrantie_getList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 多语言原发接口。卖家可以通过这个接口发布一个多语言商品。一次只能发布一种多语言商品，例如：俄文。
        /// </summary>
        /// <param name="detail">Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example><ul> <li> <h2 style="padding: 5px;"> product details </h2> </li></ul><div> <div>  <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i1/TB1h8QnHpXXXXbgXFXXXXXXXXXX_!!0-item_pic.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p> </div>  <div>   <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i1/1829426776/TB2VKM4cXXXXXaFXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <div>   <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i3/1829426776/TB21v3GcXXXXXaeXpXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <div>   <p> <img src="http: //img01.cp.aliimg.com/bao/uploaded/i3/1829426776/TB2tkMGcXXXXXaFXpXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <p> <img src="http: //img01.cp.aliimg.com/kissy/1.0.0/build/imglazyload/spaceball.gif" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <div>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i2/1829426776/TB2PXfDcpXXXXXvXpXXXXXXXXXX-1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i4/1829426776/TB27Y.QcXXXXXXtXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i2/1829426776/TB2L5cMcXXXXXbFXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http: //img01.cp.aliimg.com/imgextra/i2/1829426776/TB2P_7LcXXXXXciXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div></div><div style="margin: 10px;padding-top: 10px;width: 580px;">  <ul>   <li> <h2 style="padding: 5px;"> size information </h2> </li>  </ul>  <p style="line-height: 16px;"> note : the following information is for reference only . please contact the seller to get the detailed information . </p>  <p> <img src="http: //img.alibaba.com/images/cms/upload/seller/product/01size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <p> <img src="http: //img.alibaba.com/images/cms/upload/seller/product/02size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <p> <img src="http: //img.alibaba.com/images/cms/upload/seller/product/03size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p></div><p>   </p><p>   </p></example></param>
        /// <param name="aeopAeProductSKUs">列表类型，以json格式来表达。参看aeopAeProductSKUs数据结构。特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[;        ;{;            ;"ipmSkuStock": 10,;            ;"skuPrice": "11.00",;            ;"aeopSKUProperty": [;                ;{;                    ;"propertyValueId": 193,;                    ;"skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg",;                    ;"propertyValueDefinitionName": "balck",;                    ;"skuPropertyId": 200000182;                },;                ;{;                    ;"propertyValueId": 201336100,;                    ;"skuPropertyId": 200007763;                };            ],;            ;"skuCode": "11234";        };    ]</example></param>
        /// <param name="deliveryTime">备货期。取值范围:1-60;单位:天。<example>7</example></param>
        /// <param name="promiseTemplateId">服务模板设置。（需和服务模板查询接口api.queryPromiseTemplateById进行关联使用）<example>100</example></param>
        /// <param name="categoryId">商品所属类目ID。必须是叶子类目，通过类目接口获取。<example>200002101</example></param>
        /// <param name="subject">商品标题  长度在1-128之间英文。<example>knew odd of test</example></param>
        /// <param name="productPrice">商品一口价。取值范围:0-100000,保留两位小数;单位:美元。如:200.07，表示:200美元7分。需要在正确的价格区间内。上传多属性产品的时候，有好几个SKU和价格，productprice无需填写。<example>11.00</example></param>
        /// <param name="freightTemplateId">运费模版ID。通过运费接口listFreightTemplate获取。<example>703476858</example></param>
        /// <param name="imageURLs">产品的主图URL列表。如果这个产品有多张主图，那么这些URL之间使用英文分号(";")隔开。;一个产品最多只能有6张主图。图片格式JPEG，文件大小5M以内；图片像素建议大于800*800；横向和纵向比例建议1:1到1:1.3之间；图片中产品主体占比建议大于70%；背景白色或纯色，风格统一；如果有LOGO，建议放置在左上角，不宜过大。;;不建议自行添加促销标签或文字。切勿盗用他人图片，以免受网规处罚。更多说明请至http://seller.aliexpress.com/so/tupianguifan.php进行了解。<example>http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg</example></param>
        /// <param name="productUnit">商品单位 (存储单位编号) ;100000000:袋 (bag/bags);100000001:桶 (barrel/barrels);100000002:蒲式耳 (bushel/bushels);100078580:箱 (carton);100078581:厘米 (centimeter);100000003:立方米 (cubic meter);100000004:打 (dozen);100078584:英尺 (feet);100000005:加仑 (gallon);100000006:克 (gram);100078587:英寸 (inch);100000007:千克 (kilogram);100078589:千升 (kiloliter);100000008:千米 (kilometer);100078559:升 (liter/liters);100000009:英吨 (long ton);100000010:米 (meter);100000011:公吨 (metric ton);100078560:毫克 (milligram);100078596:毫升 (milliliter);100078597:毫米 (millimeter);100000012:盎司 (ounce);100000014:包 (pack/packs);100000013:双 (pair);100000015:件/个 (piece/pieces);100000016:磅 (pound);100078603:夸脱 (quart);100000017:套 (set/sets);100000018:美吨 (short ton);100078606:平方英尺 (square feet);100078607:平方英寸 (square inch);100000019:平方米 (square meter);100078609:平方码 (square yard);100000020:吨 (ton);100078558:码 (yard/yards)<example>100000000</example></param>
        /// <param name="packageType">打包销售: true 非打包销售:false<example>false</example></param>
        /// <param name="lotNum">每包件数。  打包销售情况，lotNum>1,非打包销售情况,lotNum=1<example>1</example></param>
        /// <param name="packageLength">商品包装长度。取值范围:1-700,单位:厘米。产品包装尺寸的最大值+2×（第二大值+第三大值）不能超过2700厘米。<example>20</example></param>
        /// <param name="packageWidth">商品包装宽度。取值范围:1-700,单位:厘米。<example>30</example></param>
        /// <param name="packageHeight">商品包装高度。取值范围:1-700,单位:厘米。<example>40</example></param>
        /// <param name="grossWeight">商品毛重,取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>10.020</example></param>
        /// <param name="isPackSell">是否自定义计重.true为自定义计重,false反之.<example>false</example></param>
        /// <param name="baseUnit">isPackSell为true时,此项必填。购买几件以内不增加运费。取值范围1-1000<example>1</example></param>
        /// <param name="addUnit">isPackSell为true时,此项必填。  每增加件数.取值范围1-1000。<example>2</example></param>
        /// <param name="addWeight">isPackSell为true时,此项必填。  对应增加的重量.取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>3.03</example></param>
        /// <param name="wsValidNum">商品有效天数。取值范围:1-30,单位:天。<example>30</example></param>
        /// <param name="aeopAeProductPropertys">产品属性，以json格式进行封装后提交。参看aeopAeProductPropertys数据结构。此字段是否必填，需从类目接口getChildAttributesResultByPostCateIdAndPath获取（即获取到的required来判断属性是否必填），该项只输入普通类目属性数据，不可输入sku类目属性。 对于类目属性包含子类目属性的情况，此处不确认父属性和子属性，即选择任何属性，都以该对象提交。 对于一个属性多个选中值的情况，以多个该对象存放。 其中"attrNameId","attrValueId"为整型(Integer), "attrName", "attrValue"为字符串类型(String)。 1. 当设置一些系统属性时，如果类目自定义了一些候选值，只需要提供"attrNameId"和"attrValueId"即可。例如：{"attrNameId":494, "attrValueId":284}。 2. 当设置一些需要手工输入属性内容时，只需要提供"attrNameId"和"attrValue"即可。例如：{"attrNameId": 1000, "attrValue": "test"} 3. 当设置自定义属性时，需要提供"attrName"和"attrValue"即可。例如: {"attrName": "Color", "attrValue": "red"} 4. 当设置一个Other属性时，需要提供"attrNameId", "attrValueId", "attrValue"三个参数。例如：{"attrNameId": 1000, "attrValueId": 4, "attrValue": "Other Value"}。<example>[;        ;{;            ;"attrNameId": 2,;            ;"attrValue": "STD";        },;        ;{;            ;"attrValueId": 200004894,;            ;"attrNameId": 175;        },;        ;{;            ;"attrValueId": 200660860,;            ;"attrNameId": 186;        };    ]</example></param>
        /// <param name="bulkOrder">批发最小数量 。取值范围2-100000。批发最小数量和批发折扣需同时有值或无值。<example>5</example></param>
        /// <param name="bulkDiscount">批发折扣。扩大100倍，存整数。取值范围:1-99。注意：这是折扣，不是打折率。 如,打68折,则存32。批发最小数量和批发折扣需同时有值或无值。<example>90</example></param>
        /// <param name="sizechartId">尺码表模版ID。必须选择当前类目下的尺码模版。<example>100</example></param>
        /// <param name="reduceStrategy">库存扣减策略，总共有2种：下单减库存(place_order_withhold)和支付减库存(payment_success_deduct)。<example>place_order_withhold或payment_success_deduct</example></param>
        /// <param name="groupId">这个产品需要关联的产品分组ID. 只能关联一个产品分组，如果想关联多个产品分组，请使用api.setGroups接口。<example>124</example></param>
        /// <param name="currencyCode">货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。<example>USD;RUB</example></param>
        /// <param name="couponStartDate">卡券商品开始有效期<example>20160119113420000+0800</example></param>
        /// <param name="couponEndDate">卡券商品结束有效期<example>20160124113420000+0800</example></param>
        /// <param name="multilanguageSubject">多语言标题，长度不能超过218个字符。<example>Название нескольких языков</example></param>
        /// <param name="multilanguageDetail">多语言详描，长度不能超过90000个字符。<example>Многоязычный подробное описание</example></param>
        /// <param name="localeName">多语言语种。当前支持的语种有：ru_RU(俄语)、pt_BR(葡萄牙语)、fr_FR(法语)、es_ES(西班牙语)、in_ID(印度尼西亚语)、it_IT(意大利语)、de_DE(德语)、nl_NL(荷兰语)、tr_TR(土耳其语)、iw_IL(以色列语)、ja_JP(日语)、ar_MA(阿拉伯语)、th_TH(泰语)、vi_VN(越南语)、ko_KR(韩语)、pl_PL(波兰语)<example>ru_RU</example></param>
        /// <param name="useAutoTrans">是否使用自动翻译，如果带上这个参数，则localeName必须为ru_RU，并且会自动把多语言标题和描述通过机器翻译自动翻译成英文，覆盖传人的英文描述和标题里面<example>true</example></param>
        /// <param name="aeopNationalQuoteConfiguration">商品分国家报价的配置</param>
        /// <returns></returns>
        public string alibaba_product_postMultilanguageAeProduct(string detail, string aeopAeProductSKUs, int categoryId, string subject, string imageURLs, string aeopAeProductPropertys, string multilanguageSubject, string multilanguageDetail, string localeName, int? deliveryTime = null, long? promiseTemplateId = null, string productPrice = null, int? freightTemplateId = null, int? productUnit = null, bool? packageType = null, int? lotNum = null, int? packageLength = null, int? packageWidth = null, int? packageHeight = null, string grossWeight = null, bool? isPackSell = null, int? baseUnit = null, int? addUnit = null, string addWeight = null, int? wsValidNum = null, int? bulkOrder = null, int? bulkDiscount = null, long? sizechartId = null, string reduceStrategy = null, long? groupId = null, string currencyCode = null, System.DateTimeOffset? couponStartDate = null, System.DateTimeOffset? couponEndDate = null, bool? useAutoTrans = null, string aeopNationalQuoteConfiguration = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("detail", detail);
            dic.Add("aeopAeProductSKUs", aeopAeProductSKUs);
            dic.Add("deliveryTime", deliveryTime);
            dic.Add("promiseTemplateId", promiseTemplateId);
            dic.Add("categoryId", categoryId);
            dic.Add("subject", subject);
            dic.Add("productPrice", productPrice);
            dic.Add("freightTemplateId", freightTemplateId);
            dic.Add("imageURLs", imageURLs);
            dic.Add("productUnit", productUnit);
            dic.Add("packageType", packageType);
            dic.Add("lotNum", lotNum);
            dic.Add("packageLength", packageLength);
            dic.Add("packageWidth", packageWidth);
            dic.Add("packageHeight", packageHeight);
            dic.Add("grossWeight", grossWeight);
            dic.Add("isPackSell", isPackSell);
            dic.Add("baseUnit", baseUnit);
            dic.Add("addUnit", addUnit);
            dic.Add("addWeight", addWeight);
            dic.Add("wsValidNum", wsValidNum);
            dic.Add("aeopAeProductPropertys", aeopAeProductPropertys);
            dic.Add("bulkOrder", bulkOrder);
            dic.Add("bulkDiscount", bulkDiscount);
            dic.Add("sizechartId", sizechartId);
            dic.Add("reduceStrategy", reduceStrategy);
            dic.Add("groupId", groupId);
            dic.Add("currencyCode", currencyCode);
            dic.Add("couponStartDate", couponStartDate);
            dic.Add("couponEndDate", couponEndDate);
            dic.Add("multilanguageSubject", multilanguageSubject);
            dic.Add("multilanguageDetail", multilanguageDetail);
            dic.Add("localeName", localeName);
            dic.Add("useAutoTrans", useAutoTrans);
            dic.Add("aeopNationalQuoteConfiguration", aeopNationalQuoteConfiguration);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _alibaba_product_postMultilanguageAeProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID，即关系ID<example>334455556</example></param>
        /// <param name="buyerId">买家账号<example>uk33445</example></param>
        /// <param name="content">内容<example>hello</example></param>
        /// <param name="msgSources">类型(message_center/order_msg)<value>message_center</value><example>message_center</example></param>
        /// <param name="imgPath">图片地址<example>http://g02.a.alicdn.com/kf/HTB1U07VIVXXXXaiaXXXq6xXFXXXu.jpg</example></param>
        /// <returns></returns>
        public string api_addMsg(string buyerId, string content, string msgSources, string channelId = null, string imgPath = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("channelId", channelId);
            dic.Add("buyerId", buyerId);
            dic.Add("content", content);
            dic.Add("msgSources", msgSources);
            dic.Add("imgPath", imgPath);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_addMsg, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 运费计算
        /// </summary>
        /// <param name="length">长</param>
        /// <param name="width">宽</param>
        /// <param name="height">高</param>
        /// <param name="weight">毛重</param>
        /// <param name="count">数量</param>
        /// <param name="country">country</param>
        /// <param name="customPackWeight">是否为自定义打包计重,Y/N<example>Y</example></param>
        /// <param name="packBaseUnit">打包计重几件以内按单个产品计重,当isCustomPackWeight=Y时必选</param>
        /// <param name="packAddUnit">打包计重超过部分每增加件数,当isCustomPackWeight=Y时必选</param>
        /// <param name="packAddWeight">打包计重超过部分续重,当isCustomPackWeight=Y时必选</param>
        /// <param name="freightTemplateId">运费模板ID 必选</param>
        /// <param name="productPrice">产品价格</param>
        /// <returns></returns>
        public string api_calculateFreight(int? length = null, int? width = null, int? height = null, double? weight = null, int? count = null, string country = null, bool? customPackWeight = null, int? packBaseUnit = null, int? packAddUnit = null, double? packAddWeight = null, int? freightTemplateId = null, decimal? productPrice = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("length", length);
            dic.Add("width", width);
            dic.Add("height", height);
            dic.Add("weight", weight);
            dic.Add("count", count);
            dic.Add("country", country);
            dic.Add("customPackWeight", customPackWeight);
            dic.Add("packBaseUnit", packBaseUnit);
            dic.Add("packAddUnit", packAddUnit);
            dic.Add("packAddWeight", packAddWeight);
            dic.Add("freightTemplateId", freightTemplateId);
            dic.Add("productPrice", productPrice);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_calculateFreight, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 通过淘宝产品的url进行单品认领（URL需做代码转译。)
        /// </summary>
        /// <param name="url">淘宝或者天猫产品的detail url<example>http://detail.tmall.com/item.htm?spm=a2106.m861.1000384.1.vxsG6t&id=13187863348&source=dou&scm=1029.newlist-0.tagbeta.50000582&ppath=&sku=&ug=</example></param>
        /// <returns></returns>
        public string api_claimTaobaoProducts4API(string url)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("url", url);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_claimTaobaoProducts4API, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 创建一个新的产品分组.一个用户的一级分组最多有10个，二级分组最多有10个。
        /// </summary>
        /// <param name="name">分组的名称, 请控制在1～50个英文字符之内。<example>foo</example></param>
        /// <param name="parentId">父分组的ID。如果为0则表示创建根分组，否则创建指定分组下的二级分组。<example>0或者100</example></param>
        /// <returns></returns>
        public string api_createProductGroup(string name, long parentId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("name", name);
            dic.Add("parentId", parentId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_createProductGroup, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 创建线上发货物流订单
        /// 关于中国邮政平常小包 使用说明请参见http://seller.aliexpress.com/so/onlinelogistics_postbj.php
        /// 中国邮政平常小包 获取国际跟踪单号请通过http://gw.api.alibaba.com/dev/doc/api.htm?ns=aliexpress.open
        /// </summary>
        /// <param name="tradeOrderId">交易订单号<example>60000970354018</example></param>
        /// <param name="tradeOrderFrom">交易订单来源,AE订单为ESCROW ；<example>ESCROW</example></param>
        /// <param name="warehouseCarrierService">”根据订单号获取线上发货物流方案“API获取用户选择的实际发货物流服务（物流服务key,即仓库服务名称)例如：HRB_WLB_ZTOGZ是 中俄航空 Ruston广州仓库； ;HRB_WLB_RUSTONHEB为哈尔滨备货仓暂不支持，该渠道请做忽略。<example>CPAM_WLB_FPXSZ;CPAM_WLB_CPHSH;CPAM_WLB_ZTOBJ;HRB_WLB_ZTOGZ;HRB_WLB_ZTOSH</example></param>
        /// <param name="domesticLogisticsCompanyId">国内快递ID<example>505(物流公司是other时,ID为-1)</example></param>
        /// <param name="domesticLogisticsCompany">国内快递公司名称<example>物流公司Id为-1时,必填</example></param>
        /// <param name="domesticTrackingNo">国内快递运单号,长度1-32<example>123231231</example></param>
        /// <param name="remark">备注</param>
        /// <param name="declareProductDTOs">申报产品信息,列表类型，以json格式来表达。{productId为产品ID(必填,如为礼品,则设置为0);categoryCnDesc为申报中文名称(必填,长度1-20);categoryEnDesc为申报英文名称(必填,长度1-60);productNum产品件数(必填1-999);productDeclareAmount为产品申报金额(必填,0.01-10000.00);productWeight为产品申报重量(必填0.001-2.000);isContainsBattery为是否包含锂电池(必填0/1);scItemId为仓储发货属性代码（团购订单，仓储发货必填，物流服务为RUSTON 哈尔滨备货仓 HRB_WLB_RUSTONHEB，属性代码对应AE商品的sku属性一级，暂时没有提供接口查询属性代码，可以在仓储管理--库存管理页面查看，例如： 团购产品的sku属性White对应属性代码 40414943126）;skuValue为属性名称（团购订单，仓储发货必填，例如：White）;hsCode为产品海关编码，获取相关数据请至：http://www.customs.gov.cn/Tabid/67737/Default.aspx};isAneroidMarkup为是否含非液体化妆品（必填，填0代表不含非液体化妆品；填1代表含非液体化妆品；默认为0）;isOnlyBattery为是否含纯电池产品（必填，填0代表不含纯电池产品；填1代表含纯电池产品；默认为0）;<example>[;    {;        "categoryCnDesc": "小米手机",;        "categoryEnDesc": "xiaomi Phone",;        "isContainsBattery": 1,;        "productDeclareAmount": 1,;        "productId": 20003,;        "productNum": 1,;        "productWeight": 10,;        "hsCode": 12345678,;        "isAneroidMarkup": 0,;        "isOnlyBattery": 1;    },;    {;        "categoryCnDesc": "MP3",;        "categoryEnDesc": "MP3",;        "isContainsBattery": 0,;        "productDeclareAmount": 2,;        "productId": 0,;        "productNum": 4,;        "productWeight": 20,;        "hsCode": 12345678,;        "isAneroidMarkup": 1,;        "isOnlyBattery": 0;    };]</example></param>
        /// <param name="addressDTOs">地址信息,包含发货人地址,收货人地址，揽收地址（可选），退货地址（可选）。发货人地址key值是sender; 收货人地址key值是receiver,都必填{country为国家简称,必填;province为省/州,（必填，长度限制1-48字节）;city为城市,（必填，长度限制1-48，可以直接填写城市信息）,county为区县，（收货人地址中不需要填写，发货人地址必填，长度限制1-20字节）；street为街道 ,（选填，长度限制1-90字节）streetAddress为详细地址 ,（必填，长度限制1-90字节）;name为姓名,（必填，长度限制1-90字节）;phone,mobile两者二选一,phone（长度限制1- 54字节）;mobile（长度限制1-30字节）;email邮箱非必填（长度限制1-64字节）;trademanageId旺旺（非必填，长度限制1-32字节）; addressId: 由getLogisticsSellerAddress API获取的卖家后台地址中的addressId带入，必填；如果是中俄航空Ruston需要揽收的订单，则再添加揽收地址信息，key值是pickup,字段同上，内容必须是中文（如无需揽收，则不必传pickup的值）。升级后只有传入Long型的addressId有效，其它字段的值无效。<example>{"receiver":{"city":"Russian City","country":"BR","email":"db1007825240@alibaba.com","fax":"23 3423 324","memberType":"receiver","mobile":"123123","name":"Mrs.Kson","phone":"23 05 1231232","postcode":"123456","province":"Russian State","streetAddress":"abasa basd basd ","trademanageId":"db1007825240"},"sender":{"city":"310100","country":"CN","county":"310115","email":"hjy_seller@aliqatest.com","memberType":"sender","name":"lisi","phone":"123123123","postcode":"310052","province":"310100","streetAddress":"dong da jie No.123","trademanageId":"hjy_seller"},"refund": {"addressId": "12345"}}</example></param>
        /// <param name="undeliverableDecision">不可达处理(退回:0/销毁:1);目前因部分ISV还未升级，系统文档中该参数当前设置为可选，默认值为-1。请ISV升级时，将参数设置为必选，默认值为1，否则将影响9月28日之后的发货功能。详情请参考：http://bbs.seller.aliexpress.com/bbs/read.php?tid=514111<value>-1</value><example>0</example></param>
        /// <param name="packageNum">包裹数量： 创建国家小包订单时非必填，创建国家快递订单时必填</param>
        /// <returns></returns>
        public string api_createWarehouseOrder(long tradeOrderId, string tradeOrderFrom, string warehouseCarrierService, long domesticLogisticsCompanyId, string domesticTrackingNo, string declareProductDTOs, string addressDTOs, string domesticLogisticsCompany = null, string remark = null, int? undeliverableDecision = null, int? packageNum = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("tradeOrderId", tradeOrderId);
            dic.Add("tradeOrderFrom", tradeOrderFrom);
            dic.Add("warehouseCarrierService", warehouseCarrierService);
            dic.Add("domesticLogisticsCompanyId", domesticLogisticsCompanyId);
            dic.Add("domesticLogisticsCompany", domesticLogisticsCompany);
            dic.Add("domesticTrackingNo", domesticTrackingNo);
            dic.Add("remark", remark);
            dic.Add("declareProductDTOs", declareProductDTOs);
            dic.Add("addressDTOs", addressDTOs);
            dic.Add("undeliverableDecision", undeliverableDecision);
            dic.Add("packageNum", packageNum);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_createWarehouseOrder, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 删除用户图片银行中未被引用的图片信息
        /// </summary>
        /// <param name="imageRepositoryId">图片ID(通过“图片银行列表分页查询”接口进行获取，出参中“ iid:图片”为图片ID。<example>100403959</example></param>
        /// <returns></returns>
        public string api_delUnUsePhoto(long imageRepositoryId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("imageRepositoryId", imageRepositoryId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_delUnUsePhoto, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 商品编辑接口（修改任何一个商品信息时，必须将其他所有信息进行填写全面后再提交，否则会出现报错情况出现。）
        /// </summary>
        /// <param name="productId">编辑产品ID<example>1239273</example></param>
        /// <param name="detail">Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>detail html block</example></param>
        /// <param name="aeopAeProductSKUs">列表类型，以json格式来表达。参看aeopAeProductSKUs数据结构。特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[ { "ipmSkuStock": 10, "skuPrice": "11.00", "aeopSKUProperty": [ { "propertyValueId": 193, "skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg", "propertyValueDefinitionName": "balck", "skuPropertyId": 200000182 }, { "propertyValueId": 201336100, "skuPropertyId": 200007763 } ], "skuCode": "11234" } ]</example></param>
        /// <param name="deliveryTime">备货期。取值范围:1-60;单位:天。<example>3</example></param>
        /// <param name="categoryId">商品所属类目ID。必须是叶子类目，通过类目接口获取。<example>200002101</example></param>
        /// <param name="subject">商品标题  长度在1-128之间英文。<example>knew odd</example></param>
        /// <param name="promiseTemplateId">服务模板ID。如果不填，则为新手模板ID。<example>100</example></param>
        /// <param name="productPrice">商品一口价。取值范围:0-100000,保留两位小数;单位:美元。如:200.07，表示:200美元7分。需要在正确的价格区间内。<example>10.11</example></param>
        /// <param name="freightTemplateId">运费模版ID。通过运费接口listFreightTemplate获取。<example>703476858</example></param>
        /// <param name="imageURLs">图片URL.静态单图主图个数为1,动态多图主图个数为2-6.可从图片接口uploadTempImage上传，也可以从图片银行引入.  多个图片url用‘;’分隔符连接。<example>http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg</example></param>
        /// <param name="productUnit">商品单位 (存储单位编号) ;100000000:袋 (bag/bags);100000001:桶 (barrel/barrels);100000002:蒲式耳 (bushel/bushels);100078580:箱 (carton);100078581:厘米 (centimeter);100000003:立方米 (cubic meter);100000004:打 (dozen);100078584:英尺 (feet);100000005:加仑 (gallon);100000006:克 (gram);100078587:英寸 (inch);100000007:千克 (kilogram);100078589:千升 (kiloliter);100000008:千米 (kilometer);100078559:升 (liter/liters);100000009:英吨 (long ton);100000010:米 (meter);100000011:公吨 (metric ton);100078560:毫克 (milligram);100078596:毫升 (milliliter);100078597:毫米 (millimeter);100000012:盎司 (ounce);100000014:包 (pack/packs);100000013:双 (pair);100000015:件/个 (piece/pieces);100000016:磅 (pound);100078603:夸脱 (quart);100000017:套 (set/sets);100000018:美吨 (short ton);100078606:平方英尺 (square feet);100078607:平方英寸 (square inch);100000019:平方米 (square meter);100078609:平方码 (square yard);100000020:吨 (ton);100078558:码 (yard/yards)<example>100000000</example></param>
        /// <param name="packageType">打包销售: true 非打包销售:false<example>false</example></param>
        /// <param name="lotNum">每包件数。  打包销售情况，lotNum>1,非打包销售情况,lotNum=1<example>1</example></param>
        /// <param name="packageLength">商品包装长度。取值范围:1-700,单位:厘米。产品包装尺寸的最大值+2×（第二大值+第三大值）不能超过2700厘米。<example>20</example></param>
        /// <param name="packageWidth">商品包装宽度。取值范围:1-700,单位:厘米。<example>30</example></param>
        /// <param name="packageHeight">商品包装高度。取值范围:1-700,单位:厘米。<example>40</example></param>
        /// <param name="grossWeight">商品毛重,取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>50</example></param>
        /// <param name="isPackSell">是否自定义计重.true为自定义计重,false反之.<example>false</example></param>
        /// <param name="baseUnit">isPackSell为true时,此项必填。购买几件以内不增加运费。取值范围1-1000<example>1</example></param>
        /// <param name="addUnit">isPackSell为true时,此项必填。  每增加件数.取值范围1-1000。<example>2</example></param>
        /// <param name="addWeight">isPackSell为true时,此项必填。  对应增加的重量.取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>30.11</example></param>
        /// <param name="wsValidNum">商品有效天数。取值范围:1-30,单位:天。<example>30</example></param>
        /// <param name="aeopAeProductPropertys">产品属性，以json格式进行封装后提交。参看aeopAeProductPropertys数据结构。此字段是否必填，需从类目接口getAttributesResultByCateId获取（即获取到的required来判断属性是否必填），该项只输入普通类目属性数据，不可输入sku类目属性。;对于类目属性包含子类目属性的情况，此处不确认父属性和子属性，即选择任何属性，都以该对象提交。;对于一个属性多个选中值的情况，以多个该对象存放。;其中"attrNameId","attrValueId"为整型(Integer), "attrName", "attrValue"为字符串类型(String)。;         i).  当设置一些系统属性时，如果类目自定义了一些候选值，只需要提供"attrNameId"和"attrValueId"即可。例如：{"attrNameId":494, "attrValueId":284}。;         ii). 当设置一些需要手工输入属性内容时，只需要提供"attrNameId"和"attrValue"即可。例如：{"attrNameId": 1000, "attrValue": "test"};         iii）当设置自定义属性时，需要提供"attrName"和"attrValue"即可。例如: {"attrName": "Color", "attrValue": "red"};         iv） 当设置一个Other属性时，需要提供"attrNameId", "attrValueId", "attrValue"三个参数。例如：{"attrNameId": 1000, "attrValueId": 4, "attrValue": "Other Value"}。<example>"aeopAeProductPropertys": [;      {;         "attrValueId": 494,;         "attrNameId": 284;      },;      {;         "attrValueId": 200004213,;         "attrNameId": 200000309;      },;      {;         "attrValueId": 1875,;         "attrNameId": 200000303;      },;      {;         "attrName": "Modeling clothing",;         "attrValue": "slim";      },;      {;         "attrName": "clothes design details",;         "attrValue": "wool collar";      };]</example></param>
        /// <param name="bulkOrder">批发最小数量 。取值范围2-100000。批发最小数量和批发折扣需同时有值或无值。<example>5</example></param>
        /// <param name="bulkDiscount">批发折扣。扩大100倍，存整数。取值范围:1-99。注意：这是折扣，不是打折率。 如,打68折,则存32。批发最小数量和批发折扣需同时有值或无值。<example>90</example></param>
        /// <param name="groupId">产品分组ID<example>123</example></param>
        /// <param name="reduceStrategy">库存扣减策略<example>place_order_withhold或payment_success_deduct</example></param>
        /// <param name="currencyCode">货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。<example>USD;RUB</example></param>
        /// <param name="couponStartDate"></param>
        /// <param name="couponEndDate"></param>
        /// <param name="mobileDetail">mobile Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>mobile Detail html block</example></param>
        /// <param name="aeopAEMultimedia">商品多媒体信息，该属性主要包含商品的视频列表<example>"aeopAEMultimedia":{"aeopAEVideos":[{"mediaId":30994083,"posterUrl":"http://img02.taobaocdn.com/bao/uploaded/TB16e9MJVXXXXacXVXXXXXXXXXX.jpg","mediaStatus":"approved","mediaType":"video","aliMemberId":225671041}]}</example></param>
        /// <param name="aeopNationalQuoteConfiguration">商品分国家报价的配置<example>如果需要删除分国家报价，只需将该对象的属性值设为空串：{"configurationType":"","configurationData":""}</example></param>
        /// <returns></returns>
        public string api_editAeProduct(string productId, string detail, string aeopAeProductSKUs, int categoryId, string subject, string imageURLs, string aeopAeProductPropertys, int? deliveryTime = null, long? promiseTemplateId = null, string productPrice = null, int? freightTemplateId = null, int? productUnit = null, bool? packageType = null, int? lotNum = null, int? packageLength = null, int? packageWidth = null, int? packageHeight = null, string grossWeight = null, bool? isPackSell = null, int? baseUnit = null, int? addUnit = null, string addWeight = null, int? wsValidNum = null, int? bulkOrder = null, int? bulkDiscount = null, long? groupId = null, string reduceStrategy = null, string currencyCode = null, System.DateTimeOffset? couponStartDate = null, System.DateTimeOffset? couponEndDate = null, string mobileDetail = null, string aeopAEMultimedia = null, string aeopNationalQuoteConfiguration = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("detail", detail);
            dic.Add("aeopAeProductSKUs", aeopAeProductSKUs);
            dic.Add("deliveryTime", deliveryTime);
            dic.Add("categoryId", categoryId);
            dic.Add("subject", subject);
            dic.Add("promiseTemplateId", promiseTemplateId);
            dic.Add("productPrice", productPrice);
            dic.Add("freightTemplateId", freightTemplateId);
            dic.Add("imageURLs", imageURLs);
            dic.Add("productUnit", productUnit);
            dic.Add("packageType", packageType);
            dic.Add("lotNum", lotNum);
            dic.Add("packageLength", packageLength);
            dic.Add("packageWidth", packageWidth);
            dic.Add("packageHeight", packageHeight);
            dic.Add("grossWeight", grossWeight);
            dic.Add("isPackSell", isPackSell);
            dic.Add("baseUnit", baseUnit);
            dic.Add("addUnit", addUnit);
            dic.Add("addWeight", addWeight);
            dic.Add("wsValidNum", wsValidNum);
            dic.Add("aeopAeProductPropertys", aeopAeProductPropertys);
            dic.Add("bulkOrder", bulkOrder);
            dic.Add("bulkDiscount", bulkDiscount);
            dic.Add("groupId", groupId);
            dic.Add("reduceStrategy", reduceStrategy);
            dic.Add("currencyCode", currencyCode);
            dic.Add("couponStartDate", couponStartDate);
            dic.Add("couponEndDate", couponEndDate);
            dic.Add("mobileDetail", mobileDetail);
            dic.Add("aeopAEMultimedia", aeopAEMultimedia);
            dic.Add("aeopNationalQuoteConfiguration", aeopNationalQuoteConfiguration);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editAeProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 原发编辑商品多语言标题或详描描述（英文版本除外）。试用
        /// </summary>
        /// <param name="productId">待编辑的商品ID。<example>32234411234</example></param>
        /// <param name="locale">语种，合法的参数有: ru_RU(俄语);pt_BR(葡语);fr_FR(法语);es_ES(西班牙语);in_ID(印尼语);it_IT(意大利语);de_DE(德语);nl_NL(荷兰语);tr_TR(土耳其语);iw_IL(以色列语);ja_JP(日语);ar_MA(阿拉伯语);th_TH(泰语);vi_VN(越南语);ko_KR(韩语);<example>ru_RU</example></param>
        /// <param name="subject">商品对应语种的标题, 长度控制在1～218个字符之间。<example>foo</example></param>
        /// <param name="detail">商品对应语种的详描<example>bar</example></param>
        /// <param name="mobileDetail">商品对应语种的无线端详描（json格式），如要清空无线详描请传""空串<example>{;    "mobileDetail": [;        {;            "content": "context1",;            "type": "text";        },;        {;            "col": 1,;            "images": [;                {;                    "height":500,;                    "imgUrl": "https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg",;                    "width":500,;                    "targetUrl":"https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg";                },;                {;                    "imgUrl": "https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg",;                    "targetUrl":"https://ae01.alicdn.com/kf/HTB1WQ.MKpXXXXXhXVXXq6xXFXXX6.jpg";                };            ],;            "type": "image";        },;        {;            "content": "context3",;            "type": "text";        };    ],;    "version": "1.0",;    "versionNum": 1;}</example></param>
        /// <returns></returns>
        public string api_editMultilanguageProduct(long productId, string locale, string subject = null, string detail = null, string mobileDetail = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("locale", locale);
            dic.Add("subject", subject);
            dic.Add("detail", detail);
            dic.Add("mobileDetail", mobileDetail);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editMultilanguageProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 编辑单个商品的一个或者多个SKU可售库存。将要修改的SKU的库存值保存在skuStocks参数中(Map类型数据)，其中key为SKU ID(字符串), value为对应的库存值(Long型)。
        /// </summary>
        /// <param name="productId">产品ID<example>32297192242</example></param>
        /// <param name="skuStocks">SKU的库存信息(一个或着多个)<example>{"14:200003699;5:100014064":240, "14:200003699;5:361386": 220}</example></param>
        /// <returns></returns>
        public string api_editMutilpleSkuStocks(long productId, object skuStocks)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("skuStocks", skuStocks);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editMutilpleSkuStocks, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 编辑商品的类目属性，用给定的类目属性覆盖原有的类目属性。(试用)
        /// </summary>
        /// <param name="productId">产品的ID<example>1706468951</example></param>
        /// <param name="productCategoryAttributes">该产品要修改的类目属性列表<example>[{"attrNameId":284, "attrValueId":491}, {"attrNameId":200000137,"attrValueId":7926}, {"attrName":"Color", "attrValue":"Red"}, {"attrName":"Additional", "attrValue":"Value"}]</example></param>
        /// <returns></returns>
        public string api_editProductCategoryAttributes(long productId, string productCategoryAttributes)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("productCategoryAttributes", productCategoryAttributes);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editProductCategoryAttributes, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 编辑产品类目、属性、sku
        /// </summary>
        /// <param name="productId">商品id，一次只能上传一个</param>
        /// <param name="categoryId">产品类目ID，如果不想调整类目，则不要填写。</param>
        /// <param name="productSkus">该产品新的类目SKU属性。如果没有指定categoryId, 则该SKU属性则为当前产品所属类目下的SKU属性，如果指定了categoryId, 则该SKU属性则为新类目下的SKU属性。;特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[ { "aeopSKUProperty" : [ { "propertyValueId" : 496,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 4181,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "asdfas",;        "skuPrice" : "999.00",;        "skuStock" : true,;        "ipmSkuStock":"100";      },;      { "aeopSKUProperty" : [ { "propertyValueId" : 771,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 100014066,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "fasdf",;        "skuPrice" : "999.00",;        "skuStock" : true;      },;      { "aeopSKUProperty" : [ { "propertyValueId" : 496,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 100014066,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "fasdfa",;        "skuPrice" : "999.00",;        "skuStock" : true;      },;      { "aeopSKUProperty" : [ { "propertyValueId" : 771,;              "skuPropertyId" : 14;            },;            { "propertyValueId" : 4181,;              "skuPropertyId" : 5;            };          ],;        "skuCode" : "sfas",;        "skuPrice" : "999.00",;        "skuStock" : true,;        "ipmSkuStock":"100";      };    ]</example></param>
        /// <param name="productProperties">该产品新的类目属性。如果没有指定categoryId, 则该类目属性则为当前产品所属类目下的类目属性，如果指定了categoryId, 则该类目属性则为新类目下的类目属性。<example>[ { "attrNameId" : 200000137,;        "attrValueId" : 200001645;      },;      { "attrNameId" : 200000332,;        "attrValueId" : 1927;      },;      { "attrNameId" : 284,;        "attrValueId" : 494;      };    ]</example></param>
        /// <returns></returns>
        public string api_editProductCidAttIdSku(long productId, long? categoryId = null, string productSkus = null, string productProperties = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("categoryId", categoryId);
            dic.Add("productSkus", productSkus);
            dic.Add("productProperties", productProperties);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editProductCidAttIdSku, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 编辑商品的单个字段(目前使用api.editSimpleProductFiled这个接口 暂不支持商品分组、商品属性、SKU、服务模板的修改。请注意！)
        /// </summary>
        /// <param name="productId">指定编辑产品的id<example>id=1234</example></param>
        /// <param name="fiedName">编辑的字段名称，为以下字段内容里的其中一项, 可以编辑的字段包括: subject: 商品的标题; Detail: 商品的详细描述信息； deliveryTime: 备货期； groupId: 产品组； freightTemplateId: 运费模版； packageLength: 商品包装长度； packageWidth: 商品包装宽度； packageHeight：商品包装高度； grossWeight: 商品毛重； wsValidNum商品的有效天数；mobileDetail：无线详描;（注意：该字段的提交修改，数据生效时间：商品（到期或手动）下架再上架生效。”）; reduceStrategy: 库存扣减策略(总共有2种：下单减库存(place_order_withhold)和支付减库存(payment_success_deduct)。)<example>deliveryTime</example></param>
        /// <param name="fiedvalue">根据fiedName变化：fiedName=detail时，本字段是一段html字符串；fiedName=mobileDetail时，本字段的值是一段json字符串；fiedName=groupId时，本字段是一个产品分组唯一标识（数字类型）。<example>{;  "mobileDetail": [;  {;        "type": "text",;        "content": " POSTAGE<>:  We provide free express shipping via UPS / DHL / FEDEX / EMS / TNT / ARAMEX / for most of country when your orders around US$200 (please contact us if you have qustions). Delivery time around 4-7 days (business days).NOTE<>: We have only one store called 'TWOTWINSTYLE' on aliexpress. The products selling in other stores with same designs or photos are not from us. 'TWOTWINSTYLE' have their own separate production lines, all merchandise sold are exclusive and high quality.";      }; ],;  "version": "1.0",;  "versionNum": 1;}</example></param>
        /// <returns></returns>
        public string api_editSimpleProductFiled(long productId, string fiedName, string fiedvalue)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("fiedName", fiedName);
            dic.Add("fiedvalue", fiedvalue);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editSimpleProductFiled, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 编辑商品的单个SKU价格信息。
        /// </summary>
        /// <param name="productId">需修改编辑的商品ID<example>123456789</example></param>
        /// <param name="skuId">需修改编辑的商品单个SKUID。SKU ID可以通过api.findAeProductById接口中的aeopAeproductSKUs获取单个产品信息中"id"进行获取。 没有SKU属性的商品SKUID回传“<none>”<example>14:771;5:100014066</example></param>
        /// <param name="skuPrice">修改编辑后的商品价格<example>999</example></param>
        /// <returns></returns>
        public string api_editSingleSkuPrice(long productId, string skuId, string skuPrice)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("skuId", skuId);
            dic.Add("skuPrice", skuPrice);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editSingleSkuPrice, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 编辑商品单个SKU的库存信息.
        /// </summary>
        /// <param name="productId">需修改编辑的商品ID<example>32297192242</example></param>
        /// <param name="skuId">需修改编辑的商品单个SKUID。SKU ID可以通过api.findAeProductById接口中的aeopAeproductSKUs获取单个产品信息中"id"进行获取。<example>14:200003699;5:100014065</example></param>
        /// <param name="ipmSkuStock">SKU的库存值<example>299</example></param>
        /// <returns></returns>
        public string api_editSingleSkuStock(long productId, string skuId, long ipmSkuStock)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("skuId", skuId);
            dic.Add("ipmSkuStock", ipmSkuStock);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_editSingleSkuStock, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询待卖家评价的订单信息
        /// </summary>
        /// <param name="currentPage">当前页；</param>
        /// <param name="pageSize">每页显示记录数；</param>
        /// <param name="orderIds">订单ID，多个使用半角逗号分隔；</param>
        /// <returns></returns>
        public string api_evaluation_querySellerEvaluationOrderList(int? currentPage = null, int? pageSize = null, string orderIds = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            dic.Add("orderIds", orderIds);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_evaluation_querySellerEvaluationOrderList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家对未评价的订单进行评价
        /// </summary>
        /// <param name="orderId">订单编号</param>
        /// <param name="score">用户对主订单的打分</param>
        /// <param name="feedbackContent">卖家对未评价的订单进行评价(Max 1,000 characters. Please do not use HTML codes or Chinese characters.同时包括中文标点也不支持）</param>
        /// <returns></returns>
        public string api_evaluation_saveSellerFeedback(long orderId, int? score = null, string feedbackContent = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("score", score);
            dic.Add("feedbackContent", feedbackContent);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_evaluation_saveSellerFeedback, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">需要延长的订单ID。<example>1234567890</example></param>
        /// <param name="day">请求延长的具体天数。<example>30</example></param>
        /// <returns></returns>
        public string api_extendsBuyerAcceptGoodsTime(long orderId, int? day = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("day", day);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_extendsBuyerAcceptGoodsTime, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据商品id查询单个商品的详细信息。
        /// </summary>
        /// <param name="productId">商品ID<example>1307422965</example></param>
        /// <returns></returns>
        public string api_findAeProductById(long productId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findAeProductById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询信息模板列表
        /// </summary>
        /// <param name="moduleStatus">要查询模块的状态，包含：tbd(审核不通过),auditing（审核中）,approved（审核通过）</param>
        /// <param name="type">要查询模块的类型，包含：custom（自定义模块）,relation（关联模块）</param>
        /// <param name="pageIndex">要查询当前页码，每页返回50条记录，从1开始</param>
        /// <returns></returns>
        public string api_findAeProductDetailModuleListByQurey(string moduleStatus, int pageIndex, string type = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("moduleStatus", moduleStatus);
            dic.Add("type", type);
            dic.Add("pageIndex", pageIndex);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findAeProductDetailModuleListByQurey, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据模块id查询模块，模块在detail详情中显示格式：<kse:widget data-widget-type="widget" id="1004" title="Specification " type="relation"></kse:widget>
        /// 标签属性id="1004"对应返回值中的id,标签属性type="relation"对应返回值中的type, 标签属性title="Specification "对应返回值中的name.
        /// </summary>
        /// <param name="moduleId">moduleId 对应商品详情中的kse标签中的id属性;如: id="1004"</param>
        /// <returns></returns>
        public string api_findAeProductModuleById(long moduleId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("moduleId", moduleId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findAeProductModuleById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 调用发布商品接口api.postaeproduct前，针对商品标题等信息做违禁词相关信息查询接口。
        /// 当前支持的违禁词查询范围包括：1.商品的标题，2.商品的关键字, 3. 商品的类目属性, 4.商品的详细描述。用户提供以上四个参数以及商品的类目ID来查询标题、关键字、类目属性、详细描述中是否包含了当前类目的违禁词。
        /// 发布产品时平台提供的违禁词查询只供参考和引导的作用，同时由于是系统检测并不能判断实际词语应用的场景，所以还需请您不断仔细检查相关词语的应用情况，可点此进入知识产权的相关学习：http://seller.aliexpress.com/education/rules/ipr31.html?tracelog=ipr01zscqzq
        /// </summary>
        /// <param name="categoryId">商品类目ID<example>322</example></param>
        /// <param name="title">商品的标题<example>nike</example></param>
        /// <param name="keywords">商品的关键字列表<example>["nike", "shoes", "adidas"]</example></param>
        /// <param name="productProperties">商品的类目属性，只能填写字符形式的类目属性<example>["red", "nike", "shoes"]</example></param>
        /// <param name="detail">商品的详细描述<example>This is a test for the product.</example></param>
        /// <returns></returns>
        public string api_findAeProductProhibitedWords(int categoryId, string title = null, string[] keywords = null, string[] productProperties = null, string detail = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("categoryId", categoryId);
            dic.Add("title", title);
            dic.Add("keywords", keywords);
            dic.Add("productProperties", productProperties);
            dic.Add("detail", detail);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findAeProductProhibitedWords, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品状态，商品供三种状态。审核通过:approved;审核中:auditing;审核不通过:refuse
        /// </summary>
        /// <param name="productId">商品ID<example>32462942083</example></param>
        /// <returns></returns>
        public string api_findAeProductStatusById(long productId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findAeProductStatusById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="page">当前页码.。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <param name="createDateStart">放款时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00</param>
        /// <param name="createDateEnd">放款时间截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00</param>
        /// <param name="loanStatus">订单放款状态：wait_loan 未放款，loan_ok已放款。<example>wait_loan</example></param>
        /// <param name="orderId">主订单id，一次只能查询一个</param>
        /// <returns></returns>
        public string api_findLoanListQuery(int page, int pageSize, string createDateStart = null, string createDateEnd = null, string loanStatus = null, long? orderId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            dic.Add("createDateStart", createDateStart);
            dic.Add("createDateEnd", createDateEnd);
            dic.Add("loanStatus", loanStatus);
            dic.Add("orderId", orderId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findLoanListQuery, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">订单ID。</param>
        /// <returns></returns>
        public string api_findOrderBaseInfo(long orderId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findOrderBaseInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">订单Id<example>30110902195804</example></param>
        /// <param name="fieldList">暂不支持。需要返回的订单对象字段。多个字段用“,”分隔。如果想返回整个子对象，该字段不设值。;目前支持以下字段：id,gmtCreate,orderStatus,sellerOperatorAliid,sellerOperatorLoginId,paymentType;,initOderAmount,orderAmount,escrowFee</param>
        /// <param name="extInfoBitFlag">暂不支持。扩展信息目前支持纠纷信息，放款信息，物流信息，买方信息和退款信息，分别对应二进制位1,2,3,4,5。例如，只查询纠纷信息和物流信息，extInfoBitFlag=10100；查询全部extInfoBitFlag=11111</param>
        /// <returns></returns>
        public string api_findOrderById(long orderId, string fieldList = null, int? extInfoBitFlag = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("fieldList", fieldList);
            dic.Add("extInfoBitFlag", extInfoBitFlag);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findOrderById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="page">当前页码<example>1</example></param>
        /// <param name="pageSize">每页个数，最大50<example>50</example></param>
        /// <param name="createDateStart">订单创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00;倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/01/2015 00:00:00</example></param>
        /// <param name="createDateEnd">订单创建时间结束值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00;倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/07/2015 00:00:00</example></param>
        /// <param name="orderStatus">订单状态：;PLACE_ORDER_SUCCESS:等待买家付款;;IN_CANCEL:买家申请取消;;WAIT_SELLER_SEND_GOODS:等待您发货;;SELLER_PART_SEND_GOODS:部分发货;;WAIT_BUYER_ACCEPT_GOODS:等待买家收货;;FUND_PROCESSING:买卖家达成一致，资金处理中；;IN_ISSUE:含纠纷中的订单;;IN_FROZEN:冻结中的订单;;WAIT_SELLER_EXAMINE_MONEY:等待您确认金额;;PAYMENT _PROCESSING:延迟扣款;;RISK_CONTROL:订单处于风控24小时中，从买家在线支付完成后开始，持续24小时。;以上状态查询可分别做单独查询，不传订单状态查询订单信息不包含（FINISH，已结束订单状态）;FINISH:已结束的订单，需单独查询。<example>PLACE_ORDER_SUCCESS</example></param>
        /// <returns></returns>
        public string api_findOrderListQuery(int page, int pageSize, string createDateStart = null, string createDateEnd = null, string orderStatus = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            dic.Add("createDateStart", createDateStart);
            dic.Add("createDateEnd", createDateEnd);
            dic.Add("orderStatus", orderStatus);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findOrderListQuery, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="page">当前页码<value>1</value><example>1</example></param>
        /// <param name="pageSize">每页个数，最大50<value>20</value><example>20</example></param>
        /// <param name="createDateStart">订单创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00 倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/01/2015 00:00:00</example></param>
        /// <param name="createDateEnd">订单创建时间结束值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00 倘若时间维度未精确到时分秒，故该时间条件筛选不许生效。<example>10/08/2015 00:00:00</example></param>
        /// <param name="orderStatus">订单状态： PLACE_ORDER_SUCCESS:等待买家付款; IN_CANCEL:买家申请取消; WAIT_SELLER_SEND_GOODS:等待您发货; SELLER_PART_SEND_GOODS:部分发货; WAIT_BUYER_ACCEPT_GOODS:等待买家收货; FUND_PROCESSING:买家确认收货后，等待退放款处理的状态; FINISH:已结束的订单; IN_ISSUE:含纠纷的订单; IN_FROZEN:冻结中的订单; WAIT_SELLER_EXAMINE_MONEY:等待您确认金额; RISK_CONTROL:订单处于风控24小时中，从买家在线支付完成后开始，持续24小时。<example>PLACE_ORDER_SUCCESS</example></param>
        /// <returns></returns>
        public string api_findOrderListSimpleQuery(int page, int pageSize, string createDateStart = null, string createDateEnd = null, string orderStatus = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            dic.Add("createDateStart", createDateStart);
            dic.Add("createDateEnd", createDateEnd);
            dic.Add("orderStatus", orderStatus);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findOrderListSimpleQuery, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 收货地址
        /// </summary>
        /// <param name="orderId">订单ID</param>
        /// <returns></returns>
        public string api_findOrderReceiptInfo(long orderId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findOrderReceiptInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">订单ID<example>30025745255804</example></param>
        /// <returns></returns>
        public string api_findOrderTradeInfo(long orderId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findOrderTradeInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 商品列表查询接口。主账号可查询所有商品，子账号只可查询自身所属商品。
        /// </summary>
        /// <param name="productStatusType">商品业务状态，目前提供4种，输入参数分别是：上架:onSelling ；下架:offline ；审核中:auditing ；审核不通过:editingRequired。<example>onSelling</example></param>
        /// <param name="subject">商品标题模糊搜索字段。只支持半角英数字，长度不超过128。<example>knew odd</example></param>
        /// <param name="groupId">商品分组搜索字段。输入商品分组id(groupId).<example>124</example></param>
        /// <param name="wsDisplay">商品下架原因：expire_offline(过期下架)，user_offline(用户手工下架)、violate_offline(违规下架)、punish_offline(处罚下架)、degrade_offline(降级下架)、industry_offline(行业准入未续约下架)<example>expire_offline</example></param>
        /// <param name="offLineTime">商品的剩余有效期。如果想查3天之内即将下架的商品，则offLineTime值为3。<example>7</example></param>
        /// <param name="productId">商品id搜索字段。<example>123</example></param>
        /// <param name="exceptedProductIds">待排除的产品ID列表。<example>[123,456]</example></param>
        /// <param name="pageSize">每页查询商品数量。输入值小于100，默认20。<example>30</example></param>
        /// <param name="currentPage">需要商品的当前页数。默认第一页。<example>2</example></param>
        /// <returns></returns>
        public string api_findProductInfoListQuery(string productStatusType, string subject = null, int? groupId = null, string wsDisplay = null, int? offLineTime = null, long? productId = null, long[] exceptedProductIds = null, int? pageSize = null, int? currentPage = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productStatusType", productStatusType);
            dic.Add("subject", subject);
            dic.Add("groupId", groupId);
            dic.Add("wsDisplay", wsDisplay);
            dic.Add("offLineTime", offLineTime);
            dic.Add("productId", productId);
            dic.Add("exceptedProductIds", exceptedProductIds);
            dic.Add("pageSize", pageSize);
            dic.Add("currentPage", currentPage);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_findProductInfoListQuery, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public string api_getAllProvince()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getAllProvince, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取属性需要优化的商品列表
        /// </summary>
        /// <param name="categoryId">类目ID<example>12392</example></param>
        /// <param name="productIds">商品ID列表<example>1239273,1239274</example></param>
        /// <param name="ownerMember">商品所有人搜索字段。必须是输入所需查询的商品所有人loginId，切当前用户是所有人或所有人上级用户。</param>
        /// <param name="type"></param>
        /// <param name="endDay">到期时间搜索字段。商品到期时间。<example>7</example></param>
        /// <param name="currentPage">需要商品的当前页数。默认第一页。<example>1</example></param>
        /// <param name="pageSize">每页查询商品数量。最大值50，默认20。<example>20</example></param>
        /// <returns></returns>
        public string api_getAtributeMissingProductList(long? categoryId = null, string productIds = null, string ownerMember = null, string type = null, int? endDay = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("categoryId", categoryId);
            dic.Add("productIds", productIds);
            dic.Add("ownerMember", ownerMember);
            dic.Add("type", type);
            dic.Add("endDay", endDay);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getAtributeMissingProductList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取下级类目信息,同获取单个类目信息内容相同（cateId=0获得一级类目列表）
        /// </summary>
        /// <param name="cateId">cateId=0时，获得第一级类目列表<example>1501</example></param>
        /// <returns></returns>
        public string api_getChildrenPostCategoryById(int? cateId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("cateId", cateId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getChildrenPostCategoryById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 通过模板ID获取单个运费模板内容
        /// </summary>
        /// <param name="templateId">模板id<example>100170741</example></param>
        /// <returns></returns>
        public string api_getFreightSettingByTemplateQuery(int templateId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("templateId", templateId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getFreightSettingByTemplateQuery, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 读取下一级别的地址信息
        /// </summary>
        /// <param name="areaId">区域Id<example>1001</example></param>
        /// <returns></returns>
        public string api_getNextLevelAddressData(long areaId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("areaId", areaId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getNextLevelAddressData, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 线上物流发货专用接口
        /// </summary>
        /// <param name="orderId">交易订单ID</param>
        /// <param name="internationalLogisticsId">国际运单号</param>
        /// <param name="chinaLogisticsId">国内快递运单号</param>
        /// <param name="logisticsStatus">物流订单状态</param>
        /// <param name="gmtCreateStartStr">开始时间</param>
        /// <param name="gmtCreateEndStr">结束时间</param>
        /// <param name="currentPage">当前页面</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="queryExpressOrder">是否查询国际快递订单</param>
        /// <returns></returns>
        public string api_getOnlineLogisticsInfo(long orderId, string internationalLogisticsId = null, string chinaLogisticsId = null, string logisticsStatus = null, string gmtCreateStartStr = null, string gmtCreateEndStr = null, int? currentPage = null, int? pageSize = null, bool? queryExpressOrder = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("internationalLogisticsId", internationalLogisticsId);
            dic.Add("chinaLogisticsId", chinaLogisticsId);
            dic.Add("logisticsStatus", logisticsStatus);
            dic.Add("gmtCreateStartStr", gmtCreateStartStr);
            dic.Add("gmtCreateEndStr", gmtCreateEndStr);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            dic.Add("queryExpressOrder", queryExpressOrder);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getOnlineLogisticsInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据交易订单获取线上发货物流服务列表，线上发货物流服务仅能用于线上发货，请了解！
        /// 以下包裹信息是不支持线上发货的，获取方案可能为空：
        /// 1、长\宽\高  加起来 不能大于90;
        /// 2、长宽高最大的一条边不能大于60cm;
        /// 3、包裹重量不能超过2KG;
        /// 4、已操作线下物流发货的订单。
        /// </summary>
        /// <param name="orderId">交易订单ID<example>30003660495804</example></param>
        /// <param name="goodsWeight">包裹重量<example>1.50</example></param>
        /// <param name="goodsLength">包裹长<example>11</example></param>
        /// <param name="goodsWidth">包裹宽<example>20</example></param>
        /// <param name="goodsHeight">包裹高<example>25</example></param>
        /// <returns></returns>
        public string api_getOnlineLogisticsServiceListByOrderId(long orderId, double? goodsWeight = null, int? goodsLength = null, int? goodsWidth = null, int? goodsHeight = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("goodsWeight", goodsWeight);
            dic.Add("goodsLength", goodsLength);
            dic.Add("goodsWidth", goodsWidth);
            dic.Add("goodsHeight", goodsHeight);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getOnlineLogisticsServiceListByOrderId, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取图片银行信息，例如图片银行容量，已使用量等信息。
        /// </summary>
        /// <returns></returns>
        public string api_getPhotoBankInfo()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getPhotoBankInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取单个类目信息
        /// </summary>
        /// <param name="cateId"></param>
        /// <returns></returns>
        public string api_getPostCategoryById(int? cateId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("cateId", cateId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getPostCategoryById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取线上发货标签(线上物流发货专用接口)
        /// </summary>
        /// <param name="internationalLogisticsId">国际运单号<example>RE700150389CN</example></param>
        /// <returns></returns>
        public string api_getPrintInfo(string internationalLogisticsId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("internationalLogisticsId", internationalLogisticsId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getPrintInfo, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 批量获取线上发货标签(线上物流发货专用接口)
        /// </summary>
        /// <param name="printDetail">是否打印详情<example>true</example></param>
        /// <param name="warehouseOrderQueryDTOs">批量查询线上发货信息进去打印,列表类型，以json格式来表达。{internationalLogisticsId为国际运单号(必填)}<example>[{"internationalLogisticsId":"RE700150389CN"},{"internationalLogisticsId":"RA010000112FI"},{"internationalLogisticsId":"RE70055589CN"},{"internationalLogisticsId":"RE70333389CN"}]</example></param>
        /// <returns></returns>
        public string api_getPrintInfos(string warehouseOrderQueryDTOs, bool? printDetail = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("printDetail", printDetail);
            dic.Add("warehouseOrderQueryDTOs", warehouseOrderQueryDTOs);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getPrintInfos, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取当前会员的产品分组
        /// </summary>
        /// <returns></returns>
        public string api_getProductGroupList()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getProductGroupList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 可查询获取该卖家目前实际可用橱窗数量。调用该接口时需主要针对主账户ID提供查询服务，子账号ID无法获取相关橱窗数量查询。(试用）
        /// </summary>
        /// <returns></returns>
        public string api_getRemainingWindows()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getRemainingWindows, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询当前用户在指定类目下可用的尺码模版信息。
        /// </summary>
        /// <param name="categoryId">商品类目Id<example>4413151515</example></param>
        /// <returns></returns>
        public string api_getSizeChartInfoByCategoryId(long categoryId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("categoryId", categoryId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getSizeChartInfoByCategoryId, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取某个卖家橱窗商品目前使用情况详情。
        /// </summary>
        /// <returns></returns>
        public string api_getWindowProducts()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_getWindowProducts, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 纠纷中卖家新增订单留言（试用）留言内容同订单留言。
        /// </summary>
        /// <param name="orderId">订单ID</param>
        /// <param name="content">留言内容</param>
        /// <returns></returns>
        public string api_leaveOrderMessage(long orderId, string content)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("content", content);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_leaveOrderMessage, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 列出用户的运费模板
        /// </summary>
        /// <returns></returns>
        public string api_listFreightTemplate()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_listFreightTemplate, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取图片银行指定分组的子分组信息
        /// </summary>
        /// <param name="groupId">图片组ID。不填groupId则返回所有图片组信息<example>8401</example></param>
        /// <returns></returns>
        public string api_listGroup(string groupId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("groupId", groupId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_listGroup, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 图片银行列表分页查询
        /// </summary>
        /// <param name="locationType">图片存放位置.可选值:allGroup(所有分组), temp(被禁用的图片), subGroup(某一分组), unGroup(非分组). 如果locationType参数值为allGroup,temp,unGroup时，将忽略groupId参数。 如果locationType的参数值为subGroup,须指定groupId参数。</param>
        /// <param name="groupId">图片组id</param>
        /// <param name="currentPage">当前页码</param>
        /// <param name="pageSize">默认18个，最大值 50</param>
        /// <returns></returns>
        public string api_listImagePagination(string locationType = null, string groupId = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("locationType", locationType);
            dic.Add("groupId", groupId);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_listImagePagination, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 此接口返回的物流服务于线上发货物流服务不同。此接口返回的物流服务用语卖家设置运费模板和声明发货，不能用于线上发货。请注意！
        /// </summary>
        /// <returns></returns>
        public string api_listLogisticsService()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_listLogisticsService, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="productIds">ae 产品id列表，用逗号分隔，最大不能超过100个id</param>
        /// <returns></returns>
        public string api_listTbProductByIds(string productIds)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productIds", productIds);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_listTbProductByIds, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 商品下架接口。需要下架的商品的通过productIds参数指定，多个商品之间用英文分号隔开。
        /// </summary>
        /// <param name="productIds">需要下架的产品id。多个产品ID用英文分号隔开。<example>109827;109828</example></param>
        /// <returns></returns>
        public string api_offlineAeProduct(string productIds)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productIds", productIds);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_offlineAeProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 上架一个或者多个商品，待上架的产品ID通过参数productIds指定，产品ID之间使用英文分号(;)隔开, 最多一次只能上架50个商品。
        /// 
        /// 行业准入商品上架限制
        /// 如果用户退出了一个行业准入的类目(比如：假发)，那么将无法上架这个类目下的商品。
        /// 
        /// 返回值
        /// 1. 接口调用成功后，将返回类似的json串: {"modifyCount": 10, success: true}。
        /// 2. 接口调用失败后，将返回类似的json串: {"error_code": "11001023", "error_message": "Product too much", "exception": "exception message"}
        /// </summary>
        /// <param name="productIds">需要上架的产品id列表。可输入多个，之前用半角分号分割。<example>109827;109828</example></param>
        /// <returns></returns>
        public string api_onlineAeProduct(string productIds)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productIds", productIds);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_onlineAeProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// post产品并且返回post成功后的产品的id
        /// </summary>
        /// <param name="detail">Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>detail stuff here</example></param>
        /// <param name="aeopAeProductSKUs">列表类型，以json格式来表达。参看aeopAeProductSKUs数据结构。特别提示：新增SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。<example>[;        ;{;            ;"ipmSkuStock": 10,;            ;"skuPrice": "11.00",;            ;"aeopSKUProperty": [;                ;{;                    ;"propertyValueId": 193,;                    ;"skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg",;                    ;"propertyValueDefinitionName": "balck",;                    ;"skuPropertyId": 200000182;                },;                ;{;                    ;"propertyValueId": 201336100,;                    ;"skuPropertyId": 200007763;                };            ],;            ;"skuCode": "11234";        };    ]</example></param>
        /// <param name="deliveryTime">备货期。取值范围:1-60;单位:天。<example>7</example></param>
        /// <param name="promiseTemplateId">服务模板设置。（需和服务模板查询接口api.queryPromiseTemplateById进行关联使用）<example>100</example></param>
        /// <param name="categoryId">商品所属类目ID。必须是叶子类目，通过类目接口获取。<example>200002101</example></param>
        /// <param name="subject">商品标题  长度在1-128之间英文。<example>knew odd of test</example></param>
        /// <param name="productPrice">商品一口价。取值范围:0-100000,保留两位小数;单位:美元。如:200.07，表示:200美元7分。需要在正确的价格区间内。上传多属性产品的时候，有好几个SKU和价格，productprice无需填写。<example>11.00</example></param>
        /// <param name="freightTemplateId">运费模版ID。通过运费接口listFreightTemplate获取。<example>703476858</example></param>
        /// <param name="imageURLs">产品的主图URL列表。如果这个产品有多张主图，那么这些URL之间使用英文分号(";")隔开。;一个产品最多只能有6张主图。图片格式JPEG，文件大小5M以内；图片像素建议大于800*800；横向和纵向比例建议1:1到1:1.3之间；图片中产品主体占比建议大于70%；背景白色或纯色，风格统一；如果有LOGO，建议放置在左上角，不宜过大。;;不建议自行添加促销标签或文字。切勿盗用他人图片，以免受网规处罚。更多说明请至http://seller.aliexpress.com/so/tupianguifan.php进行了解。<example>http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg</example></param>
        /// <param name="productUnit">商品单位 (存储单位编号) ;100000000:袋 (bag/bags);100000001:桶 (barrel/barrels);100000002:蒲式耳 (bushel/bushels);100078580:箱 (carton);100078581:厘米 (centimeter);100000003:立方米 (cubic meter);100000004:打 (dozen);100078584:英尺 (feet);100000005:加仑 (gallon);100000006:克 (gram);100078587:英寸 (inch);100000007:千克 (kilogram);100078589:千升 (kiloliter);100000008:千米 (kilometer);100078559:升 (liter/liters);100000009:英吨 (long ton);100000010:米 (meter);100000011:公吨 (metric ton);100078560:毫克 (milligram);100078596:毫升 (milliliter);100078597:毫米 (millimeter);100000012:盎司 (ounce);100000014:包 (pack/packs);100000013:双 (pair);100000015:件/个 (piece/pieces);100000016:磅 (pound);100078603:夸脱 (quart);100000017:套 (set/sets);100000018:美吨 (short ton);100078606:平方英尺 (square feet);100078607:平方英寸 (square inch);100000019:平方米 (square meter);100078609:平方码 (square yard);100000020:吨 (ton);100078558:码 (yard/yards)<example>100000000</example></param>
        /// <param name="packageType">打包销售: true 非打包销售:false<example>false</example></param>
        /// <param name="lotNum">每包件数。  打包销售情况，lotNum>1,非打包销售情况,lotNum=1<example>1</example></param>
        /// <param name="packageLength">商品包装长度。取值范围:1-700,单位:厘米。产品包装尺寸的最大值+2×（第二大值+第三大值）不能超过2700厘米。<example>20</example></param>
        /// <param name="packageWidth">商品包装宽度。取值范围:1-700,单位:厘米。<example>30</example></param>
        /// <param name="packageHeight">商品包装高度。取值范围:1-700,单位:厘米。<example>40</example></param>
        /// <param name="grossWeight">商品毛重,取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>10.020</example></param>
        /// <param name="isPackSell">是否自定义计重.true为自定义计重,false反之.<example>false</example></param>
        /// <param name="baseUnit">isPackSell为true时,此项必填。购买几件以内不增加运费。取值范围1-1000<example>1</example></param>
        /// <param name="addUnit">isPackSell为true时,此项必填。  每增加件数.取值范围1-1000。<example>2</example></param>
        /// <param name="addWeight">isPackSell为true时,此项必填。  对应增加的重量.取值范围:0.001-500.000,保留三位小数,采用进位制,单位:公斤。<example>3.03</example></param>
        /// <param name="wsValidNum">商品有效天数。取值范围:1-30,单位:天。<example>30</example></param>
        /// <param name="aeopAeProductPropertys">产品属性，以json格式进行封装后提交。参看aeopAeProductPropertys数据结构。此字段是否必填，需从类目接口getChildAttributesResultByPostCateIdAndPath获取（即获取到的required来判断属性是否必填），该项只输入普通类目属性数据，不可输入sku类目属性。 对于类目属性包含子类目属性的情况，此处不确认父属性和子属性，即选择任何属性，都以该对象提交。 对于一个属性多个选中值的情况，以多个该对象存放。 其中"attrNameId","attrValueId"为整型(Integer), "attrName", "attrValue"为字符串类型(String)。 1. 当设置一些系统属性时，如果类目自定义了一些候选值，只需要提供"attrNameId"和"attrValueId"即可。例如：{"attrNameId":494, "attrValueId":284}。 2. 当设置一些需要手工输入属性内容时，只需要提供"attrNameId"和"attrValue"即可。例如：{"attrNameId": 1000, "attrValue": "test"} 3. 当设置自定义属性时，需要提供"attrName"和"attrValue"即可。例如: {"attrName": "Color", "attrValue": "red"} 4. 当设置一个Other属性时，需要提供"attrNameId", "attrValueId", "attrValue"三个参数。例如：{"attrNameId": 1000, "attrValueId": 4, "attrValue": "Other Value"}。<example>[;        ;{;            ;"attrNameId": 2,;            ;"attrValue": "STD";        },;        ;{;            ;"attrValueId": 200004894,;            ;"attrNameId": 175;        },;        ;{;            ;"attrValueId": 200660860,;            ;"attrNameId": 186;        };    ]</example></param>
        /// <param name="bulkOrder">批发最小数量 。取值范围2-100000。批发最小数量和批发折扣需同时有值或无值。<example>5</example></param>
        /// <param name="bulkDiscount">批发折扣。扩大100倍，存整数。取值范围:1-99。注意：这是折扣，不是打折率。 如,打68折,则存32。批发最小数量和批发折扣需同时有值或无值。<example>90</example></param>
        /// <param name="sizechartId">尺码表模版ID。必须选择当前类目下的尺码模版。<example>100</example></param>
        /// <param name="reduceStrategy">库存扣减策略，总共有2种：下单减库存(place_order_withhold)和支付减库存(payment_success_deduct)。<example>place_order_withhold或payment_success_deduct</example></param>
        /// <param name="groupId">这个产品需要关联的产品分组ID. 只能关联一个产品分组，如果想关联多个产品分组，请使用api.setGroups接口。<example>124</example></param>
        /// <param name="currencyCode">货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。<example>USD;RUB</example></param>
        /// <param name="mobileDetail">mobile Detail详情。以下内容会被过滤，但不影响产品提交:(1)含有script\textarea\style\iframe\frame\input\pre\button均被过滤.(2)a标签href属性只允许是aliexpress.com域名连接,否则被过滤.(3)img标签src只允许alibaba.com或者aliimg.com域名链接.(4)任意具有style属性的html标签，其style受检查，只允许一般简单的样式.不允许的内容将被过滤.(5)如果发现html内容标签缺失，会自动补全标签.<example>mobile Detail html block</example></param>
        /// <param name="couponStartDate">卡券商品开始有效期<example>20160119113420000+0800</example></param>
        /// <param name="couponEndDate">卡券商品结束有效期<example>20160124113420000+0800</example></param>
        /// <param name="aeopNationalQuoteConfiguration">商品分国家报价的配置</param>
        /// <param name="aeopAEMultimedia">商品多媒体信息，该属性主要包含商品的视频列表<example>"aeopAEMultimedia":{"aeopAEVideos":[{"mediaId":30994083,"posterUrl":"http://img02.taobaocdn.com/bao/uploaded/TB16e9MJVXXXXacXVXXXXXXXXXX.jpg","mediaStatus":"approved","mediaType":"video","aliMemberId":225671041}]}</example></param>
        /// <returns></returns>
        public string api_postAeProduct(string detail, string aeopAeProductSKUs, int categoryId, string subject, string imageURLs, string aeopAeProductPropertys, int? deliveryTime = null, long? promiseTemplateId = null, string productPrice = null, int? freightTemplateId = null, int? productUnit = null, bool? packageType = null, int? lotNum = null, int? packageLength = null, int? packageWidth = null, int? packageHeight = null, string grossWeight = null, bool? isPackSell = null, int? baseUnit = null, int? addUnit = null, string addWeight = null, int? wsValidNum = null, int? bulkOrder = null, int? bulkDiscount = null, long? sizechartId = null, string reduceStrategy = null, long? groupId = null, string currencyCode = null, string mobileDetail = null, System.DateTimeOffset? couponStartDate = null, System.DateTimeOffset? couponEndDate = null, string aeopNationalQuoteConfiguration = null, string aeopAEMultimedia = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("detail", detail);
            dic.Add("aeopAeProductSKUs", aeopAeProductSKUs);
            dic.Add("deliveryTime", deliveryTime);
            dic.Add("promiseTemplateId", promiseTemplateId);
            dic.Add("categoryId", categoryId);
            dic.Add("subject", subject);
            dic.Add("productPrice", productPrice);
            dic.Add("freightTemplateId", freightTemplateId);
            dic.Add("imageURLs", imageURLs);
            dic.Add("productUnit", productUnit);
            dic.Add("packageType", packageType);
            dic.Add("lotNum", lotNum);
            dic.Add("packageLength", packageLength);
            dic.Add("packageWidth", packageWidth);
            dic.Add("packageHeight", packageHeight);
            dic.Add("grossWeight", grossWeight);
            dic.Add("isPackSell", isPackSell);
            dic.Add("baseUnit", baseUnit);
            dic.Add("addUnit", addUnit);
            dic.Add("addWeight", addWeight);
            dic.Add("wsValidNum", wsValidNum);
            dic.Add("aeopAeProductPropertys", aeopAeProductPropertys);
            dic.Add("bulkOrder", bulkOrder);
            dic.Add("bulkDiscount", bulkDiscount);
            dic.Add("sizechartId", sizechartId);
            dic.Add("reduceStrategy", reduceStrategy);
            dic.Add("groupId", groupId);
            dic.Add("currencyCode", currencyCode);
            dic.Add("mobileDetail", mobileDetail);
            dic.Add("couponStartDate", couponStartDate);
            dic.Add("couponEndDate", couponEndDate);
            dic.Add("aeopNationalQuoteConfiguration", aeopNationalQuoteConfiguration);
            dic.Add("aeopAEMultimedia", aeopAEMultimedia);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_postAeProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 这个结构体主要用于保存会员等级查询结果，若查询成功会返回true和买家等级；若查询失败则返回false，和错误码及对应的错误信息
        /// </summary>
        /// <param name="loginId">买家账号ID<example>jordenmail</example></param>
        /// <returns></returns>
        public string api_queryAccountLevel(string loginId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("loginId", loginId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryAccountLevel, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询速卖通平台公告信息
        /// </summary>
        /// <param name="anouncement">公告id，一次只能查询一个。</param>
        /// <param name="publicDatetimeStart">公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00</param>
        /// <param name="publicDatetimeEnd">公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00。</param>
        /// <param name="page">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <returns></returns>
        public string api_queryAeAnouncement(string anouncement = null, string publicDatetimeStart = null, string publicDatetimeEnd = null, int? page = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("anouncement", anouncement);
            dic.Add("publicDatetimeStart", publicDatetimeStart);
            dic.Add("publicDatetimeEnd", publicDatetimeEnd);
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryAeAnouncement, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据纠纷ID查询纠纷详情信息-已停用
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60740200006352</example></param>
        /// <returns></returns>
        public string api_queryIssueDetail(long issueId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryIssueDetail, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询纠纷列表信息。（试用）
        /// </summary>
        /// <param name="orderNo">订单ID<example>1234567890</example></param>
        /// <param name="buyerName">买家名称</param>
        /// <param name="issueStatus">纠纷状态：WAIT_SELLER_CONFIRM_REFUND 买家提起纠纷,SELLER_REFUSE_REFUND 卖家拒绝纠,ACCEPTISSUE 卖家接受纠纷,WAIT_BUYER_SEND_GOODS 等待买家发货,WAIT_SELLER_RECEIVE_GOODS 买家发货，等待卖家收货,ARBITRATING 仲裁中,SELLER_RESPONSE_ISSUE_TIMEOUT 卖家响应纠纷超时<example>WAIT_SELLER_CONFIRM_REFUND</example></param>
        /// <param name="currentPage">当前页数<example>1</example></param>
        /// <returns></returns>
        public string api_queryIssueList(int currentPage, long? orderNo = null, string buyerName = null, string issueStatus = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderNo", orderNo);
            dic.Add("buyerName", buyerName);
            dic.Add("issueStatus", issueStatus);
            dic.Add("currentPage", currentPage);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryIssueList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 站内信/订单留言查询详情列表
        /// </summary>
        /// <param name="currentPage">当前页<value>1</value><example>1</example></param>
        /// <param name="pageSize">每页条数,pageSize取值范围(0~100) 最多返回前5000条数据<value>20</value><example>20</example></param>
        /// <param name="channelId">通道ID，即关系ID<example>22323233</example></param>
        /// <param name="msgSources">类型(message_center/order_msg)<value>message_center</value><example>message_center</example></param>
        /// <returns></returns>
        public string api_queryMsgDetailList(int currentPage, int pageSize, string channelId, string msgSources)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            dic.Add("channelId", channelId);
            dic.Add("msgSources", msgSources);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryMsgDetailList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据买卖家loginId查询站内信
        /// </summary>
        /// <param name="currentPage">当前页数<example>1</example></param>
        /// <param name="pageSize">每页条数<example>10(pageSize取值范围(0~100) 最多返回前5000条数据)</example></param>
        /// <param name="buyerId">买家loginId<example>us23344</example></param>
        /// <param name="sellerId">卖家loginId(与买家建立关系的账号，即信息所属账号)<example>cn4444</example></param>
        /// <returns></returns>
        public string api_queryMsgDetailListByBuyerId(int currentPage, int pageSize, string buyerId, string sellerId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            dic.Add("buyerId", buyerId);
            dic.Add("sellerId", sellerId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryMsgDetailListByBuyerId, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取当前用户下与当前用户建立消息关系的列表
        /// </summary>
        /// <param name="currentPage">当前页<value>1</value><example>1</example></param>
        /// <param name="pageSize">每页条数,pageSize取值范围(0~100) 最多返回前5000条数据<value>20</value><example>20</example></param>
        /// <param name="msgSources">查询类型<value>message_center</value><example>message_center/order_msg</example></param>
        /// <param name="filter">筛选条件(取值:dealStat/readStat/rank0/rank1/rank2/rank3/rank4/rank5)dealStat时将按未处理筛选，值为readStat时将按未读筛选，值为rank1时将按红色标签进行筛选<example>dealStat</example></param>
        /// <returns></returns>
        public string api_queryMsgRelationList(int currentPage, int pageSize, string msgSources, string filter = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            dic.Add("msgSources", msgSources);
            dic.Add("filter", filter);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryMsgRelationList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询开放平台公告信息
        /// </summary>
        /// <param name="anouncement">公告id，一次只能查询一个。</param>
        /// <param name="publicDatetimeStart">公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00。</param>
        /// <param name="publicDatetimeEnd">公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00。</param>
        /// <param name="page">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <returns></returns>
        public string api_queryOpenAnouncement(string anouncement = null, string publicDatetimeStart = null, string publicDatetimeEnd = null, int? page = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("anouncement", anouncement);
            dic.Add("publicDatetimeStart", publicDatetimeStart);
            dic.Add("publicDatetimeEnd", publicDatetimeEnd);
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryOpenAnouncement, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据path查询图片信息
        /// </summary>
        /// <param name="paths">图片文件名<example>["HTB1rxqmHpXXXXXBXFXXq6xXFXXXm.jpg","HBA1rxqmHpXXXXXBXFXXq6xXFXXXm.jpg"]</example></param>
        /// <returns></returns>
        public string api_queryPhotoBankImageByPaths(string paths)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("paths", paths);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryPhotoBankImageByPaths, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品每日加入购物车数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码<value>1</value></param>
        /// <param name="pageSize">每页结果数量<value>20</value></param>
        /// <returns></returns>
        public string api_queryProductAddCartInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("startDate", startDate);
            dic.Add("endDate", endDate);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductAddCartInfoEverydayById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品交易表现
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <returns></returns>
        public string api_queryProductBusinessInfoById(string productId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductBusinessInfoById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品每天被曝光数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-10</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-10</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public string api_queryProductExposedInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("startDate", startDate);
            dic.Add("endDate", endDate);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductExposedInfoEverydayById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品每天被收藏的数量(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public string api_queryProductFavoritedInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("startDate", startDate);
            dic.Add("endDate", endDate);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductFavoritedInfoEverydayById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询指定商品id所在产品分组
        /// </summary>
        /// <param name="productId">产品id<example>1629872654</example></param>
        /// <returns></returns>
        public string api_queryProductGroupIdByProductId(long productId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductGroupIdByProductId, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品每天的销量数据(该数据仅限30天之内的时间区间数据查询）（试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public string api_queryProductSalesInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("startDate", startDate);
            dic.Add("endDate", endDate);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductSalesInfoEverydayById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询商品每日浏览量(该数据仅限30天之内的时间区间数据查询）(试用）
        /// </summary>
        /// <param name="productId">商品id。</param>
        /// <param name="startDate">查询时间段的开始时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="endDate">查询时间段的截止时间。例如：yyyy-mm-dd<example>2014-01-22</example></param>
        /// <param name="currentPage">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页结果数量，默认20个，最大值 50<value>20</value></param>
        /// <returns></returns>
        public string api_queryProductViewedInfoEverydayById(string productId, string startDate = null, string endDate = null, int? currentPage = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("startDate", startDate);
            dic.Add("endDate", endDate);
            dic.Add("currentPage", currentPage);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryProductViewedInfoEverydayById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 服务模板查询API
        /// </summary>
        /// <param name="templateId">输入服务模板编号。注：输入为-1时，获取所有服务模板列表。<example>-1</example></param>
        /// <returns></returns>
        public string api_queryPromiseTemplateById(long? templateId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("templateId", templateId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryPromiseTemplateById, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询速卖通服务市场公告信息
        /// </summary>
        /// <param name="anouncement">公告id，一次只能查询一个。</param>
        /// <param name="publicDatetimeStart">公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00。</param>
        /// <param name="publicDatetimeEnd">公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00。</param>
        /// <param name="page">当前页码。<value>1</value></param>
        /// <param name="pageSize">每页个数，最大50。<value>20</value></param>
        /// <returns></returns>
        public string api_queryServiceAnouncement(string anouncement = null, string publicDatetimeStart = null, string publicDatetimeEnd = null, int? page = null, int? pageSize = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("anouncement", anouncement);
            dic.Add("publicDatetimeStart", publicDatetimeStart);
            dic.Add("publicDatetimeEnd", publicDatetimeEnd);
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryServiceAnouncement, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询物流追踪信息
        /// </summary>
        /// <param name="serviceName">物流服务KEY<example>UPS</example></param>
        /// <param name="logisticsNo">物流追踪号<example>20100810142400000-0700</example></param>
        /// <param name="toArea">交易订单收货国家(简称)<example>FJ,Fiji;FI,Finland;FR,France;FX,FranceMetropolitan;GF,FrenchGuiana;PF,FrenchPolynesia;TF,FrenchSouthernTerritories;GA,Gabon;GM,Gambia;GE,Georgia;DE,Germany;GH,Ghana;GI,Gibraltar;GR,Greece;GL,Greenland;GD,Grenada;GP,Guadeloupe;GU,Guam;GT,Guatemala;GN,Guinea;GW,Guinea-Bissau;GY,Guyana;HT,Haiti;HM,HeardandMcDonaldIslands;HN,Honduras;HK,HongKong;HU,Hungary;IS,Iceland;IN,India;ID,Indonesia;IR,Iran(IslamicRepublicof);IQ,Iraq;IE,Ireland;IL,Israel;IT,Italy;JM,Jamaica;JP,Japan;JO,Jordan;KZ,Kazakhstan;KE,Kenya;KI,Kiribati;KW,Kuwait;KG,Kyrgyzstan;LA,LaoPeople'sDemocraticRepublic;LV,Latvia;LB,Lebanon;LS,Lesotho;LR,Liberia;LY,LibyanArabJamahiriya;AF,Afghanistan;AL,Albania;DZ,Algeria;AS,AmericanSamoa;AD,Andorra;AO,Angola;AI,Anguilla;AQ,Antarctica;AG,AntiguaandBarbuda;AR,Argentina;AM,Armenia;AW,Aruba;AU,Australia;AT,Austria;AZ,Azerbaijan;BS,Bahamas;BH,Bahrain;BD,Bangladesh;BB,Barbados;BY,Belarus;BE,Belgium;BZ,Belize;BJ,Benin;BM,Bermuda;BT,Bhutan;BO,Bolivia;BA,BosniaandHerzegovina;BW,Botswana;BV,BouvetIsland;BR,Brazil;IO,BritishIndianOceanTerritory;BN,BruneiDarussalam;BG,Bulgaria;BF,BurkinaFaso;BI,Burundi;KH,Cambodia;CM,Cameroon;CA,Canada;CV,CapeVerde;KY,CaymanIslands;CF,CentralAfricanRepublic;TD,Chad;CL,Chile;CN,China(Mainland);CX,ChristmasIsland;CC,Cocos(Keeling)Islands;CO,Colombia;KM,Comoros;CG,Congo,TheRepublicofCongo;ZR,Congo,TheDemocraticRepublicOfThe;CK,CookIslands;CR,CostaRica;CI,CoteD'Ivoire;HR,Croatia(localname:Hrvatska);CU,Cuba;CY,Cyprus;CZ,CzechRepublic;DK,Denmark;DJ,Djibouti;DM,Dominica;DO,DominicanRepublic;TP,EastTimor;EC,Ecuador;EG,Egypt;SV,ElSalvador;GQ,EquatorialGuinea;ER,Eritrea;EE,Estonia;ET,Ethiopia;FK,FalklandIslands(Malvinas);FO,FaroeIslands;LI,Liechtenstein;LT,Lithuania;LU,Luxembourg;MO,Macau;MK,Macedonia;MG,Madagascar;MW,Malawi;MY,Malaysia;MV,Maldives;ML,Mali;MT,Malta;MH,MarshallIslands;MQ,Martinique;MR,Mauritania;MU,Mauritius;YT,Mayotte;MX,Mexico;FM,Micronesia;MD,Moldova;MC,Monaco;MN,Mongolia;MS,Montserrat;MA,Morocco;MZ,Mozambique;MM,Myanmar;NA,Namibia;NR,Nauru;NP,Nepal;NL,Netherlands;AN,NetherlandsAntilles;NC,NewCaledonia;NZ,NewZealand;NI,Nicaragua;NE,Niger;NG,Nigeria;NU,Niue;NF,NorfolkIsland;KP,NorthKorea;MP,NorthernMarianaIslands;NO,Norway;OM,Oman;Other,OtherCountry;PK,Pakistan;PW,Palau;PS,Palestine;PA,Panama;PG,PapuaNewGuinea;PY,Paraguay;PE,Peru;PH,Philippines;PN,Pitcairn;PL,Poland;PT,Portugal;PR,PuertoRico;QA,Qatar;RE,Reunion;RO,Romania;RU,RussianFederation;RW,Rwanda;KN,SaintKittsandNevis;LC,SaintLucia;VC,SaintVincentandtheGrenadines;WS,Samoa;SM,SanMarino;ST,SaoTomeandPrincipe;SA,SaudiArabia;SN,Senegal;SC,Seychelles;SL,SierraLeone;SG,Singapore;SK,Slovakia(SlovakRepublic);SI,Slovenia;SB,SolomonIslands;SO,Somalia;ZA,SouthAfrica;KR,SouthKorea;ES,Spain;LK,SriLanka;SH,St.Helena;PM,St.PierreandMiquelon;SD,Sudan;SR,Suriname;SJ,SvalbardandJanMayenIslands;SZ,Swaziland;SE,Sweden;CH,Switzerland;SY,SyrianArabRepublic;TW,T;aiwan;TJ,Tajikistan;TZ,Tanzania;TH,Thailand;TG,Togo;TK,Tokelau;TO,Tonga;TT,TrinidadandTobago;TN,Tunisia;TR,Turkey;TM,Turkmenistan;TC,TurksandCaicosIslands;TV,Tuvalu;UG,Uganda;UA,Ukraine;AE,UnitedArabEmirates;IM,IsleofMan;UK,UnitedKingdom;US,UnitedStates;UM,UnitedStatesMinorOutlyingIslands;UY,Uruguay;UZ,Uzbekistan;VU,Vanuatu;VA,VaticanCityState(HolySee);VE,Venezuela;VN,Vietnam;VG,VirginIslands(British);VI,VirginIslands(U.S.);WF,WallisAndFutunaIslands;EH,WesternSahara;YE,Yemen;YU,Yugoslavia;ZM,Zambia;ZW,Zimbabwe;SRB,Serbia;MNE,Montenegro;KS,Kosovo;EAZ,Zanzibar;BLM,SaintBarthelemy;MAF,SaintMartin;GGY,Guernsey;JEY,Jersey;SGS,SouthGeorgiaandtheSouthSandwichIslands;TLS,Timor-Leste;ALA,AlandIslands;GBA,Alderney;ASC,AscensionIsland;</example></param>
        /// <param name="origin">需要查询的订单来源 AE订单为“ESCROW”<example>ESCROW</example></param>
        /// <param name="outRef">用户需要查询的订单id</param>
        /// <returns></returns>
        public string api_queryTrackingResult(string serviceName, string logisticsNo, string toArea, string origin, string outRef)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("serviceName", serviceName);
            dic.Add("logisticsNo", logisticsNo);
            dic.Add("toArea", toArea);
            dic.Add("origin", origin);
            dic.Add("outRef", outRef);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryTrackingResult, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据主订单号和保修服务商查订单
        /// </summary>
        /// <param name="orderId">订单号</param>
        /// <param name="supplierId">供应商id</param>
        /// <returns></returns>
        public string api_queryWarrantiesByOrderId(long orderId, string supplierId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("supplierId", supplierId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryWarrantiesByOrderId, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取生效保修信息
        /// </summary>
        /// <param name="supplierId">供应商id</param>
        /// <param name="startTime">开始时间<example>2016-01-06 00:00:00</example></param>
        /// <param name="endTime">结束时间<example>2016-01-06 00:00:00</example></param>
        /// <param name="pageSize">页面大小(不得超过200)<example>50</example></param>
        /// <param name="pageNo">显示的页码<example>1</example></param>
        /// <param name="lastBuyerApplyServiceQuyerStartTime">查询买家最后一次申请保修开始时间<example>2016-01-06 00:00:00</example></param>
        /// <param name="lastBuyerApplyServiceQuyerEndTime">查询买家最后一次申请保修结束时间<example>2016-01-06 00:00:00</example></param>
        /// <returns></returns>
        public string api_queryWarrantiesInforce(string supplierId, int pageSize, int pageNo, string startTime = null, string endTime = null, string lastBuyerApplyServiceQuyerStartTime = null, string lastBuyerApplyServiceQuyerEndTime = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("supplierId", supplierId);
            dic.Add("startTime", startTime);
            dic.Add("endTime", endTime);
            dic.Add("pageSize", pageSize);
            dic.Add("pageNo", pageNo);
            dic.Add("lastBuyerApplyServiceQuyerStartTime", lastBuyerApplyServiceQuyerStartTime);
            dic.Add("lastBuyerApplyServiceQuyerEndTime", lastBuyerApplyServiceQuyerEndTime);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_queryWarrantiesInforce, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 创建线上发货物流订单时，若卖家选择自寄到仓库，需要填写使用的国内物流公司，此接口返回平台支持的国内物流公司信息。
        /// </summary>
        /// <returns></returns>
        public string api_qureyWlbDomesticLogisticsCompany()
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_qureyWlbDomesticLogisticsCompany, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderId">主订单id，一次只能一个。<example>30110902195804</example></param>
        /// <param name="files">附件保存的Url。这个值的来源是 上传请款图片接口返回的参数 。<example>http://filespath</example></param>
        /// <param name="memo">填写请款备注详情。<example>备注</example></param>
        /// <returns></returns>
        public string api_requestPaymentRelease(long orderId, string files, string memo = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("orderId", orderId);
            dic.Add("files", files);
            dic.Add("memo", memo);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_requestPaymentRelease, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家放弃退货申请（退货）
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <returns></returns>
        public string api_sellerAbandonReceiveGoods(long issueId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerAbandonReceiveGoods, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家同意纠纷 -已停用
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <param name="isReturnGoods">是否退货，需要先查询纠纷详情接口，得到买家资金方案中的isReceivedGoods<example>true</example></param>
        /// <param name="refundAmount">退款金额（单位：分），需要先查询纠纷详情接口，得到买家资金方案中的issueMoney中的cent<example>3000</example></param>
        /// <param name="refundCurrency">币种，需要先查询纠纷详情接口，得到买家资金方案中的issueMoney中的币种<example>USD、RUB</example></param>
        /// <returns></returns>
        public string api_sellerAgreeIssue(long issueId, bool isReturnGoods, long refundAmount, string refundCurrency)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            dic.Add("isReturnGoods", isReturnGoods);
            dic.Add("refundAmount", refundAmount);
            dic.Add("refundCurrency", refundCurrency);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerAgreeIssue, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家确认收货 (试用)
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <returns></returns>
        public string api_sellerConrimReceiveGoods(long issueId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerConrimReceiveGoods, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 修改发货通知(一个订单只能修改2次，只能修改发货通知后5日内的订单，请注意！)
        /// </summary>
        /// <param name="oldServiceName">用户需要修改的的老的发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。）<example>EMS_SH_ZX_US；EMS；SEP；FEDEX；UPSE；FEDEX_IE；RUSTON；HKPAP；CPAM；SF；HKPAM；CHP；ZTORU；ARAMEX；CPAP；TNT；ECONOMIC139；DHL；UPS；SGP；</example></param>
        /// <param name="oldLogisticsNo">用户需要修改的老的物流追踪号<example>CP123456789CN</example></param>
        /// <param name="newServiceName">用户需要修改的的新的发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。）<example>EMS_SH_ZX_US；EMS；SEP；FEDEX；UPSE；FEDEX_IE；RUSTON；HKPAP；CPAM；SF；HKPAM；CHP；ZTORU；ARAMEX；CPAP；TNT；ECONOMIC139；DHL；UPS；SGP；</example></param>
        /// <param name="newLogisticsNo">用户需要修改的老的物流追踪号<example>CP123456123CN</example></param>
        /// <param name="description">备注(只能输入英文)</param>
        /// <param name="sendType">状态包括：全部发货(all)、部分发货(part)<example>all</example></param>
        /// <param name="outRef">用户需要发货的订单id<example>60769040695804</example></param>
        /// <param name="trackingWebsite">当serviceName=Other的情况时，需要填写对应的追踪网址<example>www.intl183.com</example></param>
        /// <returns></returns>
        public string api_sellerModifiedShipment(string oldServiceName, string oldLogisticsNo, string newServiceName, string newLogisticsNo, string sendType, string outRef, string description = null, string trackingWebsite = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("oldServiceName", oldServiceName);
            dic.Add("oldLogisticsNo", oldLogisticsNo);
            dic.Add("newServiceName", newServiceName);
            dic.Add("newLogisticsNo", newLogisticsNo);
            dic.Add("description", description);
            dic.Add("sendType", sendType);
            dic.Add("outRef", outRef);
            dic.Add("trackingWebsite", trackingWebsite);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerModifiedShipment, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家拒绝纠纷 -已停用
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <param name="refundType">退款类型（full_amount_refund(全额退款)/part_amount_refund(部分退款)/no_amount_refund(不退款)<example>full_amount_refund</example></param>
        /// <param name="isReturnGoods">是否退货（Y/N）<example>Y</example></param>
        /// <param name="refundAmount">退款金额（单位：分，保修两位小数，币种：USD）<example>5800</example></param>
        /// <param name="content">拒绝买家纠纷方案的原因描述</param>
        /// <param name="attachments">图片附件，上传多张图片请以半角逗号“,”进行分隔上传</param>
        /// <returns></returns>
        public string api_sellerRefuseIssue(long issueId, string refundType, string isReturnGoods, string refundAmount, string content, string attachments = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            dic.Add("refundType", refundType);
            dic.Add("isReturnGoods", isReturnGoods);
            dic.Add("refundAmount", refundAmount);
            dic.Add("content", content);
            dic.Add("attachments", attachments);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerRefuseIssue, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 填写发货通知
        /// </summary>
        /// <param name="serviceName">用户选择的实际发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。平台支持物流服务详细一览表详见论坛链接;（http://sale.aliexpress.com/seller/shipping_methods_list.htm）<example>AUSPOST, ROYAL_MAIL, CORREOS, DEUTSCHE_POST, LAPOSTE, POSTEITALIANE, RUSSIAN_POST, USPS, UPS_US, UPS, JNE, ACOMMERCE, UPSE, DHL_UK, DHL_ES, DHL_IT, DHL_DE, ENVIALIA, DHL_FR, DHL, FEDEX, FEDEX_IE, TNT, SF, EMS, ROYAL_MAIL_PY, EMS_ZX_ZX_US, E_EMS, EMS_SH_ZX_US, SINOTRANS_AM, ITELLA_PY, ITELLA, CPAM, SINOTRANS_PY, YANWEN_JYT, CPAP, TOLL, HKPAM, HKPAP, SGP, CHP, SEP, ARAMEX, ECONOMIC139, SPSR_RU, YANWEN_AM, CPAM_HRB, CTR_LAND_PICKUP, SPSR_CN, POST_NL, POST_MY, OTHER_ES, OTHER_IT, OTHER_FR, OTHER_US, ; OTHER_UK, OTHER_RU, OTHER_DE, OTHER_AU, Other</example></param>
        /// <param name="logisticsNo">物流追踪号</param>
        /// <param name="description">备注(只能输入英文，且长度限制在512个字符。）</param>
        /// <param name="sendType">状态包括：全部发货(all)、部分发货(part)</param>
        /// <param name="outRef">用户需要发货的订单id</param>
        /// <param name="trackingWebsite">当serviceName=Other的情况时，需要填写对应的追踪网址</param>
        /// <returns></returns>
        public string api_sellerShipment(string serviceName, string logisticsNo, string sendType, string outRef, string description = null, string trackingWebsite = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("serviceName", serviceName);
            dic.Add("logisticsNo", logisticsNo);
            dic.Add("description", description);
            dic.Add("sendType", sendType);
            dic.Add("outRef", outRef);
            dic.Add("trackingWebsite", trackingWebsite);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerShipment, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 卖家提交纠纷仲裁申请（试用）
        /// </summary>
        /// <param name="issueId">纠纷ID<example>60573020065804</example></param>
        /// <param name="reason">纠纷原因(有两个值，一个是noMatchDesc（货不对版），另外一个是notReceived（未收到货）<example>noMatchDesc</example></param>
        /// <param name="content">卖家提交仲裁描述</param>
        /// <returns></returns>
        public string api_sellerSubmitArbi(long issueId, string reason, string content)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("issueId", issueId);
            dic.Add("reason", reason);
            dic.Add("content", content);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sellerSubmitArbi, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 设置单个产品的产品分组信息，最多设置三个分组。
        /// </summary>
        /// <param name="productId">产品ID<example>32218803874</example></param>
        /// <param name="groupIds">商品分组ID。如果需要将一个商品设置成多个分组，需要将分组id用逗号分隔，如：'123,456,789' 至多3个。<example>254562048</example></param>
        /// <returns></returns>
        public string api_setGroups(long productId, string groupIds)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("groupIds", groupIds);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_setGroups, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 商品橱窗设置
        /// </summary>
        /// <param name="productIdList">待设置橱窗的商品id，可输入多个，之前用半角分号分割。<example>1351344486;1351344487</example></param>
        /// <returns></returns>
        public string api_setShopwindowProduct(string productIdList)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productIdList", productIdList);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_setShopwindowProduct, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 修改商品所引用的尺码模板
        /// </summary>
        /// <param name="productId">商品Id<example>4363434343</example></param>
        /// <param name="sizechartId">尺码表模版Id, 必须与当前商品所在类目想对应。<example>544113</example></param>
        /// <returns></returns>
        public string api_setSizeChart(long productId, long sizechartId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("productId", productId);
            dic.Add("sizechartId", sizechartId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_setSizeChart, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询指定类目适合的尺码模板
        /// </summary>
        /// <param name="postCatId"></param>
        /// <returns></returns>
        public string api_sizeModelsRequiredForPostCat(int postCatId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("postCatId", postCatId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_sizeModelsRequiredForPostCat, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="input"></param>
        /// <param name="filename">图片原名，上传证明文件，支持jpg和png格式，大小不超过2MB。</param>
        /// <param name="orderId">订单ID</param>
        /// <returns></returns>
        public string api_updateDeliveriedConfirmationFile(byte[] input = null, string filename = null, long? orderId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("input", input);
            dic.Add("filename", filename);
            dic.Add("orderId", orderId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_updateDeliveriedConfirmationFile, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID(即关系ID)</param>
        /// <param name="dealStat">处理状态(0未处理,1已处理)</param>
        /// <returns></returns>
        public string api_updateMsgProcessed(string channelId, string dealStat)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("channelId", channelId);
            dic.Add("dealStat", dealStat);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_updateMsgProcessed, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID(即关系ID)<example>1123445</example></param>
        /// <param name="rank">标签(rank0,rank1,rank2,rank3,rank4,rank5)rank0~rank5为六种不同颜色标记依次为白，红，橙，绿，蓝，紫<example>rank1</example></param>
        /// <returns></returns>
        public string api_updateMsgRank(string channelId, string rank)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("channelId", channelId);
            dic.Add("rank", rank);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_updateMsgRank, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 更新插入操作返回结果
        /// </summary>
        /// <param name="channelId">通道ID，即关系ID<example>2344555</example></param>
        /// <param name="msgSources">查询类型<value>message_center</value><example>message_center/order_msg</example></param>
        /// <returns></returns>
        public string api_updateMsgRead(string channelId, string msgSources)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("channelId", channelId);
            dic.Add("msgSources", msgSources);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_updateMsgRead, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 上传图片到图片银行（由于无法实现图片的上传、下载，故该测试工具不可用。）示例代码请参见
        /// http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#2468428
        /// </summary>
        /// <param name="fileName">上传文件名称，长度不要超过256个字符。<value>$req.http.params.fileName</value></param>
        /// <param name="groupId">图片保存的图片组，groupId为空，则图片保存在Other组中。</param>
        /// <returns></returns>
        public string api_uploadImage(string fileName, string groupId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("fileName", fileName);
            dic.Add("groupId", groupId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_uploadImage, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 将商品图片上传到图片银行。这个接口与api.uploadImage的区别在于显式提供imageBytes参数用于设置图片的二进制数据。参数格式：imageBytes="12ff8722adfeefa..."。推荐使用。
        /// </summary>
        /// <param name="fileName">上传文件名称，长度不要超过256个字符。</param>
        /// <param name="imageBytes">图片文件的字节流;图片大小限制：3MB</param>
        /// <param name="groupId">图片保存的图片组，groupId为空，则图片保存在Other组中。</param>
        /// <returns></returns>
        public string api_uploadImage4SDK(string fileName, byte[] imageBytes, string groupId = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("fileName", fileName);
            dic.Add("imageBytes", imageBytes);
            dic.Add("groupId", groupId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_uploadImage4SDK, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 纠纷图片上传 （试用）
        /// </summary>
        /// <param name="extension">图片扩展名<example>32141243325234313.jpg</example></param>
        /// <returns></returns>
        public string api_uploadIssueImage(string extension)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("extension", extension);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_uploadIssueImage, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 上传图片到临时目录。适用于上传商品主图、商品详描图或SKU图片，用于商品主图介绍展示的临时图片至多支持上传6张图片。
        /// 示例代码请参见：http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#tpc
        /// 注意：
        /// http://gw.api.alibaba.com/fileapi/param2/1/aliexpress.open/api.uploadTempImage/{0}?access_token={1}&srcFileName={2}
        /// 把图片流POST到这地址即可。
        /// 商品主图的限制：1) 大小不超过5MB 2)尺寸不超过1000x1500  3) 图片格式: JPG/JPEG
        /// 商品SKU图的限制: 1) 大小不超过200KB 2) 尺寸不超过1000x1500 3) 图片格式: JPG/JPEG
        /// 商品详描图的限制: 1) 大小不超过5MB 2)尺寸不超过1000x5000 3)图片格式: JPG/JPEG
        /// </summary>
        /// <param name="srcFileName">图片原名<value>$req.http.params.srcFileName</value><example>1.jpg</example></param>
        /// <returns></returns>
        public string api_uploadTempImage(string srcFileName)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("srcFileName", srcFileName);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_uploadTempImage, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 新的上传图片到临时目录接口。这个接口与api.uploadTempImage接口的区别在于：显示提供了fileData参数用于设置图片的字节参数。参数格式：fileData=af0012034...。推荐大家使用。
        /// </summary>
        /// <param name="srcFileName">图片原名<value>$req.http.params.srcFileName</value><example>1.jpg</example></param>
        /// <param name="fileData">字符串形式的图片文件二进制数据流<example>aff3fadfafd3fdd00123</example></param>
        /// <returns></returns>
        public string api_uploadTempImage4SDK(string srcFileName, byte[] fileData)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("srcFileName", srcFileName);
            dic.Add("fileData", fileData);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _api_uploadTempImage4SDK, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 获取指定活动详细信息
        /// </summary>
        /// <param name="activityId">活动ID</param>
        /// <returns></returns>
        public string findSellerCouponActivity(long activityId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("activityId", activityId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _findSellerCouponActivity, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 查询已添加的coupon活动
        /// </summary>
        /// <param name="status">活动状态，可取值：["not_started", "releasing", "release_end", "closed"]<example>"release_end"</example></param>
        /// <param name="activityName">活动名称，支持模糊搜索<example>"name1"</example></param>
        /// <param name="minActivityStartDate">活动开始时间区间--最小值，允许格式"mm/dd/yyyy HH:mm:ss"<example>"01/01/2014 00:00:00"</example></param>
        /// <param name="maxActivityStartDate">活动开始时间区间--最大值，允许格式："mm/dd/yyyy HH:mm:ss"<example>"01/10/2014 00:00:00"</example></param>
        /// <param name="pageSize">每页展示记录数<value>20</value><example>10</example></param>
        /// <param name="currentPage">当前页的页码<value>1</value><example>1</example></param>
        /// <returns></returns>
        public string getActList(string status = null, string activityName = null, string minActivityStartDate = null, string maxActivityStartDate = null, int? pageSize = null, int? currentPage = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("status", status);
            dic.Add("activityName", activityName);
            dic.Add("minActivityStartDate", minActivityStartDate);
            dic.Add("maxActivityStartDate", maxActivityStartDate);
            dic.Add("pageSize", pageSize);
            dic.Add("currentPage", currentPage);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _getActList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 根据发布类目id、父属性路径（可选）获取子属性信息
        /// </summary>
        /// <param name="cateId">叶子类目ID。通过产品获取类目ID，如果只传cid，则返回一级属性。<example>5090301</example></param>
        /// <param name="parentAttrValueList">类目子属性路径,由该子属性上层的类目属性id和类目属性值id组成,格式参考示例。如需返回此类目对应的子属性，则需同cateid一起进行提交。<example>[[2,200013977]]</example></param>
        /// <returns></returns>
        public string getChildAttributesResultByPostCateIdAndPath(int cateId, string parentAttrValueList = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("cateId", cateId);
            dic.Add("parentAttrValueList", parentAttrValueList);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _getChildAttributesResultByPostCateIdAndPath, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 需要联系ae开放平台人员开通权限，普通isv暂时无法使用。游标式获取失败的消息列表，获取的消息会自动消费成功的确认。所以下次以相同条件调用获取的是剩下的数据，直至返回数据为空,针对发送失败的消息，仅保留7天前的数据
        /// </summary>
        /// <param name="createStartTime">消息创建时间查找开始范围，如果时间小于7天前，默认设置为最小值=当前时间-7天<example>20130417000000000+0800</example></param>
        /// <param name="createEndTime">消息创建时间查找结束范围，如果时间大于当前时间，默认设置最大值=当前时间<example>20130417000000000+0800</example></param>
        /// <param name="quantity">每次取的数据量，范围20-200，默认20<value>20</value><example>20</example></param>
        /// <param name="type">查询某一个消息类型<example>SYSTEM_AE_PLATFORM</example></param>
        /// <param name="userInfo">查询的某个用户的消息，国际站用户loginId</param>
        /// <returns></returns>
        public string push_cursor_messageList(System.DateTimeOffset createStartTime, System.DateTimeOffset createEndTime, int? quantity = null, string type = null, string userInfo = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("createStartTime", createStartTime);
            dic.Add("createEndTime", createEndTime);
            dic.Add("quantity", quantity);
            dic.Add("type", type);
            dic.Add("userInfo", userInfo);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _push_cursor_messageList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 需要联系ae开放平台申请权限，普通isv暂时无法使用。手动调用确认api，确认消息已经被消费成功。仅当使用查询式获取失败消息的api时，才需要使用
        /// </summary>
        /// <param name="msgIdList">待确认的消息id列表<example>[123,456]</example></param>
        /// <returns></returns>
        public string push_message_confirm(long[] msgIdList)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("msgIdList", msgIdList);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _push_message_confirm, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 需要向ae开放平台申请权限，普通isv暂时无法使用。查询式获取发送的消息列表，获取的消息不会自动确认，需要调用方手动调用确认api来确认消费状态。需注意，确认后，会影响分页返回的数据,针对发送失败的消息，仅保留7天前的数据
        /// </summary>
        /// <param name="createStartTime">消息创建时间查找开始范围，如果时间小于7天前，默认设置为最小值=当前时间-7天<example>20130417000000000+0800</example></param>
        /// <param name="createEndTime">消息创建时间查找结束范围，如果时间大于当前时间，默认设置最大值=当前时间<example>20130417000000000+0800</example></param>
        /// <param name="page">当前数据页，默认为1<value>1</value><example>1</example></param>
        /// <param name="pageSize">每次分页取的数据量，范围20-200，默认20<value>20</value><example>20</example></param>
        /// <param name="type">查询某一个消息类型<example>SYSTEM_AE_PLATFORM</example></param>
        /// <param name="userInfo">查询的某个用户的消息，国际站用户loginId</param>
        /// <returns></returns>
        public string push_query_messageList(System.DateTimeOffset createStartTime, System.DateTimeOffset createEndTime, int? page = null, int? pageSize = null, string type = null, string userInfo = null)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("createStartTime", createStartTime);
            dic.Add("createEndTime", createEndTime);
            dic.Add("page", page);
            dic.Add("pageSize", pageSize);
            dic.Add("type", type);
            dic.Add("userInfo", userInfo);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _push_query_messageList, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        /// <summary>
        /// 判断发布类目尺码模板是否必须
        /// </summary>
        /// <param name="postCatId"></param>
        /// <returns></returns>
        public string sizeModelIsRequiredForPostCat(int postCatId)
        {
            var dic = new Dictionary<string, object>();

            //系统级输入参数
            dic.Add(this._fieldAccessToken, this._accessToken);//用户授权令牌

            //应用级输入参数
            dic.Add("postCatId", postCatId);
            //提交请求
            var c = this.postWebRequest(this._openapiIP, this._appKey, this._url + _sizeModelIsRequiredForPostCat, isFile: false, stream: null, paramDic: dic, paramIsSign: true, paramIsAppKey: true);
            return c;
        }
        #endregion AliAPI方法
    }



    /* 参数类型实例============================================================================
    名称  AddressDTOs
    示例
    {"receiver":{"city":"Russian City","country":"BR","email":"db1007825240@alibaba.com","fax":"23 3423 324","memberType":"receiver","mobile":"123123","name":"Mrs.Kson","phone":"23 05 1231232","postcode":"123456","province":"Russian State","streetAddress":"abasa basd basd ","trademanageId":"db1007825240"},"sender":{"city":"310100","country":"CN","county":"310115","email":"hjy_seller@aliqatest.com","memberType":"sender","name":"lisi","phone":"123123123","postcode":"310052","province":"310100","streetAddress":"dong da jie No.123","trademanageId":"hjy_seller"},"refund": {"addressId": "12345"}}


    名称  alibaba.product.AeopAEMultimedia
    示例
    "aeopAEMultimedia":{"aeopAEVideos":[{"mediaId":30994083,"posterUrl":"http://img02.taobaocdn.com/bao/uploaded/TB16e9MJVXXXXacXVXXXXXXXXXX.jpg","mediaStatus":"approved","mediaType":"video","aliMemberId":225671041}]}


    名称  aeopAeProductPropertys[]
    示例
    [

    {

    "attrNameId": 2,

    "attrValue": "STD"
            },

    {

    "attrValueId": 200004894,

    "attrNameId": 175
            },

    {

    "attrValueId": 200660860,

    "attrNameId": 186
            }
        ]


    名称  aeopAeProductSKUs[]
    示例
    [

    {

    "ipmSkuStock": 10,

    "skuPrice": "11.00",

    "aeopSKUProperty": [

    {

    "propertyValueId": 193,

    "skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg",

    "propertyValueDefinitionName": "balck",

    "skuPropertyId": 200000182
                    },

    {

    "propertyValueId": 201336100,

    "skuPropertyId": 200007763
                    }
                ],

    "skuCode": "11234"
            }
        ]


    名称  alibaba.product.NationalQuoteConfiguration
    示例
    如果需要删除分国家报价，只需将该对象的属性值设为空串：{"configurationType":"","configurationData":""}


    名称  AeopWlDeclareProductDTO[]
    示例
    [
        {
            "categoryCnDesc": "小米手机",
            "categoryEnDesc": "xiaomi Phone",
            "isContainsBattery": 1,
            "productDeclareAmount": 1,
            "productId": 20003,
            "productNum": 1,
            "productWeight": 10,
            "hsCode": 12345678,
            "isAneroidMarkup": 0,
            "isOnlyBattery": 1
        },
        {
            "categoryCnDesc": "MP3",
            "categoryEnDesc": "MP3",
            "isContainsBattery": 0,
            "productDeclareAmount": 2,
            "productId": 0,
            "productNum": 4,
            "productWeight": 20,
            "hsCode": 12345678,
            "isAneroidMarkup": 1,
            "isOnlyBattery": 0
        }
    ]


    名称  alibaba.ae.seller.servicescore.AeProductServiceScoreQueryRequest
    示例
    查询参数


    名称  AeopWarehouseOrderQueryPdfRequest[]
    示例
    [{"internationalLogisticsId":"RE700150389CN"},{"internationalLogisticsId":"RA010000112FI"},{"internationalLogisticsId":"RE70055589CN"},{"internationalLogisticsId":"RE70333389CN"}]


    */
}



namespace SDK.Platform.AliExpressApi.Model
{
    #region 实体对象
    /// <summary>
    /// aliexpress.open
    /// 根据请求地址的类型：发货地址信息，揽收地址信息，退货地址信息，返回相应的地址列表。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.api.getLogisticsSellerAddresses&v=1
    /// </summary>
    public partial class AlibabaAeApiGetLogisticsSellerAddressesResponse : AliErrorType
    {

        /// <summary>
        /// 发货地址列表，英文
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderSellerAddressesList")]
        public AlibabaAeLogisticsSellerAddressDTO[] SenderSellerAddressesList { get; set; }

        /// <summary>
        /// 揽收地址列表，中文
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PickupSellerAddressesList")]
        public AlibabaAeLogisticsSellerAddressDTO[] PickupSellerAddressesList { get; set; }

        /// <summary>
        /// 退货地址列表，中文
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RefundSellerAddressesList")]
        public AlibabaAeLogisticsSellerAddressDTO[] RefundSellerAddressesList { get; set; }

        /// <summary>
        /// 返回成功标示
        /// 是否隐私:是
        /// 示例值:
        /// true/false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:是
        /// 示例值:
        /// 负数
        /// </summary>
        [JsonProperty("ErrorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// 错误描述
        /// 是否隐私:是
        /// 示例值:
        /// 错误描述
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 读取下一级别的地址信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getNextLevelAddressData&v=1
    /// </summary>
    public partial class ApiGetNextLevelAddressDataResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public ChinaAddressItemDTO[] Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getAllProvince&v=1
    /// </summary>
    public partial class ApiGetAllProvinceResponse : AliErrorType
    {

        /// <summary>
        /// 地址信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public ChinaAddressItemDTO[] Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 批量获取线上发货标签(线上物流发货专用接口)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getPrintInfos&v=1
    /// </summary>
    public partial class ApiGetPrintInfosResponse : AliErrorType
    {

        /// <summary>
        /// 通过国际订单号获取的body内容用base64转码后生成运单标签的pdf字节流。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public string Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 修改发货通知(一个订单只能修改2次，只能修改发货通知后5日内的订单，请注意！)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerModifiedShipment&v=1
    /// </summary>
    public partial class ApiSellerModifiedShipmentResponse : AliErrorType
    {

        /// <summary>
        /// success=true 返回成功，否则失败
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 线上物流发货专用接口
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getOnlineLogisticsInfo&v=1
    /// </summary>
    public partial class ApiGetOnlineLogisticsInfoResponse : AliErrorType
    {

        /// <summary>
        /// 物流订单详细信息列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AeopLogisticsWarehouseOrderResult[] Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 当前页数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 总页数
        /// 是否隐私:是
        /// 示例值:
        /// 5
        /// </summary>
        [JsonProperty("TotalPage")]
        public int TotalPage { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取线上发货标签(线上物流发货专用接口)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getPrintInfo&v=1
    /// </summary>
    public partial class ApiGetPrintInfoResponse : AliErrorType
    {

        /// <summary>
        /// 通过国际订单号获取的body内容用base64转码后生成运单标签的pdf字节流。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public string Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据交易订单获取线上发货物流服务列表，线上发货物流服务仅能用于线上发货，请了解！
    /// 以下包裹信息是不支持线上发货的，获取方案可能为空：
    /// 1、长\宽\高  加起来 不能大于90;
    /// 2、长宽高最大的一条边不能大于60cm;
    /// 3、包裹重量不能超过2KG;
    /// 4、已操作线下物流发货的订单。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getOnlineLogisticsServiceListByOrderId&v=1
    /// </summary>
    public partial class ApiGetOnlineLogisticsServiceListByOrderIdResponse : AliErrorType
    {

        /// <summary>
        /// 支持的线上发货物流方式
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AeopOnlineLogisticsServiceResult[] Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 创建线上发货物流订单
    /// 关于中国邮政平常小包 使用说明请参见http://seller.aliexpress.com/so/onlinelogistics_postbj.php
    /// 中国邮政平常小包 获取国际跟踪单号请通过http://gw.api.alibaba.com/dev/doc/api.htm?ns=aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.createWarehouseOrder&v=1
    /// </summary>
    public partial class ApiCreateWarehouseOrderResponse : AliErrorType
    {

        /// <summary>
        /// 创建订单返回的结果
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AeopWlCreateWarehouseOrderResultDTO Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 创建线上发货物流订单时，若卖家选择自寄到仓库，需要填写使用的国内物流公司，此接口返回平台支持的国内物流公司信息。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.qureyWlbDomesticLogisticsCompany&v=1
    /// </summary>
    public partial class ApiQureyWlbDomesticLogisticsCompanyResponse : AliErrorType
    {

        /// <summary>
        /// 国内物流方式信息劣币怕
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AeopWlDomesticLogisticsCompanyDTO[] Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用报错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 此接口返回的物流服务于线上发货物流服务不同。此接口返回的物流服务用语卖家设置运费模板和声明发货，不能用于线上发货。请注意！
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.listLogisticsService&v=1
    /// </summary>
    public partial class ApiListLogisticsServiceResponse : AliErrorType
    {

        /// <summary>
        /// 物流方式列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AeopLogisticsServiceResult[] Result { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 填写发货通知
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerShipment&v=1
    /// </summary>
    public partial class ApiSellerShipmentResponse : AliErrorType
    {

        /// <summary>
        /// 返回结果
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询物流追踪信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryTrackingResult&v=1
    /// </summary>
    public partial class ApiQueryTrackingResultResponse : AliErrorType
    {

        /// <summary>
        /// 追踪详细信息列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Details")]
        public AeopTrackingDetailResult[] Details { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 追踪网址
        /// 是否隐私:是
        /// 示例值:
        /// www.ems.com
        /// </summary>
        [JsonProperty("OfficialWebsite")]
        public string OfficialWebsite { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内DSR物流中低分商品分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getProductListForLowLogisticsDSR&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetProductListForLowLogisticsDSRResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeDisputeProductListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取卖家每日服务分计算起始时间，每日服务分计算截止时间，每日服务分，该卖家所在主营二级行业名称，该卖家所在主营二级行业平均分，各考核项（考核项名称、权重、该卖家该考核项指标、该卖家该考核项得分、该卖家所在主营二级行业指标均值，该卖家所在主营二级行业得分均值）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getServiceScoreInfo&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetServiceScoreInfoResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeStoreServiceScoreInfoResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取考核期内指定商品的服务得分信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getServiceScoreInfoByProduct&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetServiceScoreInfoByProductResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeProductServiceScoreQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内DSR商品描述中低分商品分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getProductListForLowDescriptionDSR&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetProductListForLowDescriptionDSRResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeDisputeProductListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取考核期内指定类目的服务分信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getServiceScoreInfoByCategory&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetServiceScoreInfoByCategoryResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeCategoryServiceScoreQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内未在48小时内发货订单分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getOrderListForLateShipment&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetOrderListForLateShipmentResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeLogist48hSendGoodsOrderListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内货不对版纠纷提起订单分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getOrderListForSNAD&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetOrderListForSNADResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeIssueOrderListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内DSR卖家服务中低分商品分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getProductListForLowCustomerServiceDSR&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetProductListForLowCustomerServiceDSRResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeDisputeProductListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内未收到货物纠纷提起订单分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getOrderListForNR&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetOrderListForNRResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeIssueOrderListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺考核期内成交不卖订单分页列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getOrderListForNoShipment&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetOrderListForNoShipmentResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeNotSellOrderListQueryResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询店铺当月服务等级相关信息（包括该卖家上月考核订单量，当月考核周期，当月服务等级计算起始时间，当月服务等级计算截止时间，当月服务等级，上月每日服务分均值，下月等级预估计算起始时间，下月等级预估计算截止时间，下月等级预估）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.seller.getCurrentLevelInfo&v=1
    /// </summary>
    public partial class AlibabaAeSellerGetCurrentLevelInfoResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AlibabaAeSellerServicescoreAeCurrentLevelInfoResponse Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商家认证信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.userauth.queryMerchantCertificationInfo&v=1
    /// </summary>
    public partial class AlibabaAeUserauthQueryMerchantCertificationInfoResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AePersonAuthDTO")]
        public AlibabaUserauthAePersonAuthDTO AePersonAuthDTO { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeMerchantInfoDTO")]
        public AlibabaAeSellerAeMerchantInfoDTO AeMerchantInfoDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 保修相关API接口，故从纠纷类调整至保修类API。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.warrantie.getList&v=1
    /// </summary>
    public partial class AlibabaAeWarrantieGetListResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("DataList")]
        public AlibabaAeWarrantyWarrantyInfo[] DataList { get; set; }

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:是
        /// 示例值:
        /// 00001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误描述
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }

        /// <summary>
        /// 符合条件的结果总数
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取生效保修信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryWarrantiesInforce&v=1
    /// </summary>
    public partial class ApiQueryWarrantiesInforceResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("DataList")]
        public WarrantyInforceApiDTO[] DataList { get; set; }

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:是
        /// 示例值:
        /// 00001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误描述
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }

        /// <summary>
        /// 符合条件的保修总数
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据主订单号和保修服务商查订单
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryWarrantiesByOrderId&v=1
    /// </summary>
    public partial class ApiQueryWarrantiesByOrderIdResponse : AliErrorType
    {

        /// <summary>
        /// 保修数据明细
        /// 是否隐私:是
        /// 示例值:
        /// [{"streetAddress":"ssss","productProperties":"{\"CHER Model\":\"5000\",\"Operation System\":\"No Smartphone\",\"ROM\":\"16G\",\"Cellular\":\"GSM\",\"RAM\":\"2G\",\"Release Date\":\"2009\",\"Item Condition\":\"New\",\"Unlock Phones\":\"Yes\",\"CPU\":\"Quad Core\",\"Brand Name\":\"CHER\",\"Feature\":\"Touchscreen\",\"Design\":\"Bar\"}","serviceAmount":1,"warrantyType":"warranty_refund","city":"sss","getGoodsTime":"2015-10-21 05:23:59","skuInfo":"{\"Bundle\":\"Bundle 1\"}","description":"dewdewdew","name":"wqq","province":"Amur Oblast","payCurrency":"USD","attachments":"[\"http://f01.a.alicdn.com/kf/HTB1XqAGKpXXXXbCXFXX760XFXXXL.png?size=65226&height=500&width=1200&hash=84bc9f915c67fa6eb515432b287d01e3\"]","serviceStartTime":"2015-11-05 05:23:59","productSnapshotUrl":"http://www.aliexpress.com/snapshot/6996967086.html?orderId=70073911495804","exchange":1.0000,"orderId":70073911495804,"warrantyStatus":"cancel","status":"FINISH","orderDate":"2015-10-21 05:07:00","postCode":"50000","orderCurrency":"USD","serviceEndTime":"2016-11-04 05:23:59","sendGoodsTime":"2015-10-21 05:21:44","country":"RU","productCount":1,"telephone":"1234567","productName":"cxw1021_yufabu_kuajiezhifu","productAmount":2,"storeUrl":"http://www.aliexpress.com/store/402172"}]
        /// </summary>
        [JsonProperty("DataList")]
        public WarrantyDetailApiDTO[] DataList { get; set; }

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时存在
        /// 是否隐私:是
        /// 示例值:
        /// 00001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误描述，当success=false时存在
        /// 是否隐私:是
        /// 示例值:
        /// 订单不存在
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 满足api对新纠纷的查询需求
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.issue.findIssueDetailByIssueId&v=1
    /// </summary>
    public partial class AlibabaAeIssueFindIssueDetailByIssueIdResponse : AliErrorType
    {

        /// <summary>
        /// 案件详细信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ResultObject")]
        public AlibabaIssueIssueDetailOpenApiDTO ResultObject { get; set; }

        /// <summary>
        /// 调用过程正确否
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用返回状态码
        /// 是否隐私:是
        /// 示例值:
        /// 200
        /// </summary>
        [JsonProperty("ResultCode")]
        public int ResultCode { get; set; }

        /// <summary>
        /// 调用返回说明
        /// 是否隐私:是
        /// 示例值:
        /// 调用结果成功返回!
        /// </summary>
        [JsonProperty("ResultMemo")]
        public string ResultMemo { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 纠纷中卖家新增订单留言（试用）留言内容同订单留言。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.leaveOrderMessage&v=1
    /// </summary>
    public partial class ApiLeaveOrderMessageResponse : AliErrorType
    {

        /// <summary>
        /// 是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家提交纠纷仲裁申请（试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerSubmitArbi&v=1
    /// </summary>
    public partial class ApiSellerSubmitArbiResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家确认收货 (试用)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerConrimReceiveGoods&v=1
    /// </summary>
    public partial class ApiSellerConrimReceiveGoodsResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家放弃退货申请（退货）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerAbandonReceiveGoods&v=1
    /// </summary>
    public partial class ApiSellerAbandonReceiveGoodsResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家拒绝纠纷 -已停用
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerRefuseIssue&v=1
    /// </summary>
    public partial class ApiSellerRefuseIssueResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家同意纠纷 -已停用
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sellerAgreeIssue&v=1
    /// </summary>
    public partial class ApiSellerAgreeIssueResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 纠纷图片上传 （试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.uploadIssueImage&v=1
    /// </summary>
    public partial class ApiUploadIssueImageResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据纠纷ID查询纠纷详情信息-已停用
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryIssueDetail&v=1
    /// </summary>
    public partial class ApiQueryIssueDetailResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// {"snapshotUrl":"http://www.aliexpress.com/snapshot/3005612434.html?orderId=30117050845804","issueAPIIssueDTO":{"id":60789910095804,"gmtModified":"20151118045546000-0800","issueStatus":"seller_initiate_arbitration","gmtCreate":"20151118045420000-0800","parentOrderId":30117050845804,"limitRefundAmount":{"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}},"issueProcessDTOs":[{"gmtModified":"20151118211708000-0800","gmtCreate":"20151118211708000-0800","issueId":60789910095804,"actionType":"judgment_for_cc","id":30038583135804,"issueRefundSuggestionList":[{"isDefault":true}],"submitMemberType":"system"},{"gmtModified":"20151118045546000-0800","gmtCreate":"20151118045546000-0800","issueId":60789910095804,"actionType":"seller_initiate_arbitration","id":61812590375804,"content":"sadasdasd","issueRefundSuggestionList":[{"isDefault":true}],"submitMemberType":"seller"},{"gmtModified":"20151118045530000-0800","gmtCreate":"20151118045530000-0800","issueId":60789910095804,"actionType":"buyer_send_goods","id":61812590365804,"content":"","issueRefundSuggestionList":[{"isDefault":true}],"submitMemberType":"buyer"},{"gmtModified":"20151118045518000-0800","gmtCreate":"20151118045518000-0800","issueId":60789910095804,"actionType":"seller_accept","id":61812590355804,"issueRefundSuggestionList":[{"issueMoneyPost":{"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}},"issueReturnGoods":true,"issueRefundType":"full_amount_refund","isDefault":true,"issueMoney":{"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}}}],"submitMemberType":"seller"},{"gmtModified":"20151118045420000-0800","gmtCreate":"20151118045420000-0800","reason":"Color_not_as_described@3rdIssueReason","issueId":60789910095804,"actionType":"initiate","id":61812590345804,"content":"asdasdasda","issueRefundSuggestionList":[{"issueMoneyPost":{"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}},"issueReturnGoods":true,"issueRefundType":"full_amount_refund","isDefault":true,"issueMoney":{"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}}}],"submitMemberType":"buyer","isReceivedGoods":"Y","attachments":["http://g02.a.alicdn.com/kf/UT8B.pjXtxbXXcUQpbXm.png"]}],"limitRefundLocalAmount":{"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}},"reasonChinese":"颜色与描述不符","orderId":30117050845804,"reasonEnglish":"Color not as described"}}
        /// </summary>
        [JsonProperty("Data")]
        public IssueAPIDetailDTO Data { get; set; }

        /// <summary>
        /// 是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询纠纷列表信息。（试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryIssueList&v=1
    /// </summary>
    public partial class ApiQueryIssueListResponse : AliErrorType
    {

        /// <summary>
        /// 纠纷数据
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 		{
        /// 			"id": 680*************804,
        /// 			"gmtModified": "20150714021033000-0700",
        /// 			"issueStatus": "system_initiate_arbitration",
        /// 			"gmtCreate": "20150714020749000-0700",
        /// 			"parentOrderId": 0,
        /// 			"issueProcessDTOs": [],
        /// 			"orderId": 680*************804
        /// 		},
        /// 			{
        /// 			"id": 680*************804,
        /// 			"gmtModified": "20150708082338000-0700",
        /// 			"issueStatus": "seller_accept_issue",
        /// 			"gmtCreate": "20150708082304000-0700",
        /// 			"parentOrderId": 0,
        /// 			"issueProcessDTOs": [],
        /// 			"orderId": 680*************804
        /// 		}
        /// 	]
        /// </summary>
        [JsonProperty("DataList")]
        public IssueAPIIssueDTO[] DataList { get; set; }

        /// <summary>
        /// 纠纷总数
        /// 是否隐私:是
        /// 示例值:
        /// 14
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 每页条数
        /// 是否隐私:是
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }

        /// <summary>
        /// 当前页数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:是
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// AppsFlyer是AE合作的广告商，它会给AE传输AE否投放广告的效果数据
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.message.pushPerfData&v=1
    /// </summary>
    public partial class AlibabaAeMessagePushPerfDataResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public string Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 需要向ae开放平台申请权限，普通isv暂时无法使用。查询式获取发送的消息列表，获取的消息不会自动确认，需要调用方手动调用确认api来确认消费状态。需注意，确认后，会影响分页返回的数据,针对发送失败的消息，仅保留7天前的数据
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=push.query.messageList&v=1
    /// </summary>
    public partial class PushQueryMessageListResponse : AliErrorType
    {

        /// <summary>
        /// 分页数据
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PushMessagePage")]
        public PushMessagePage PushMessagePage { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 需要联系ae开放平台申请权限，普通isv暂时无法使用。手动调用确认api，确认消息已经被消费成功。仅当使用查询式获取失败消息的api时，才需要使用
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=push.message.confirm&v=1
    /// </summary>
    public partial class PushMessageConfirmResponse : AliErrorType
    {

        /// <summary>
        /// 操作是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 需要联系ae开放平台人员开通权限，普通isv暂时无法使用。游标式获取失败的消息列表，获取的消息会自动消费成功的确认。所以下次以相同条件调用获取的是剩下的数据，直至返回数据为空,针对发送失败的消息，仅保留7天前的数据
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=push.cursor.messageList&v=1
    /// </summary>
    public partial class PushCursorMessageListResponse : AliErrorType
    {

        /// <summary>
        /// 推送消息列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PushMessageList")]
        public PushMessage[] PushMessageList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品交易表现
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductBusinessInfoById&v=1
    /// </summary>
    public partial class ApiQueryProductBusinessInfoByIdResponse : AliErrorType
    {

    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品每日浏览量(该数据仅限30天之内的时间区间数据查询）(试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductViewedInfoEverydayById&v=1
    /// </summary>
    public partial class ApiQueryProductViewedInfoEverydayByIdResponse : AliErrorType
    {

        /// <summary>
        /// 浏览量总数。{
        ///     "addCartCount":       加入购物车,
        ///     "exposedCount":       曝光量,
        ///     "favoritedCount": ,
        ///     "gmvPerBuyer": 客单价,
        ///     "gmvPerBuyer30d":最近30天客单价,
        ///     "gmvPerOrder": 订单均额,
        ///     "gmvPerOrder30d": 最近30天订单均额,
        ///     "outputOrder": 成交订单数,
        ///     "refundAmt": 退款金额,
        ///     "success": 本次调用是否成功,
        ///     "viewedCount": 30天浏览量 
        /// }
        /// 是否隐私:是
        /// 示例值:
        /// "addCartCount": 0,
        /// 	"exposedCount": 0,
        /// 	"favoritedCount": 0,
        /// 	"gmvPerBuyer": 0,
        /// 	"gmvPerBuyer30d": null,
        /// 	"gmvPerOrder": 0,
        /// 	"gmvPerOrder30d": null,
        /// 	"outputOrder": 0,
        /// 	"refundAmt": 0,
        /// 	"success": true,
        /// 	"viewedCount": 0
        /// </summary>
        [JsonProperty("Success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品每日加入购物车数据(该数据仅限30天之内的时间区间数据查询）（试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductAddCartInfoEverydayById&v=1
    /// </summary>
    public partial class ApiQueryProductAddCartInfoEverydayByIdResponse : AliErrorType
    {

        /// <summary>
        /// 被加入购物车数量。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品每天被曝光数据(该数据仅限30天之内的时间区间数据查询）（试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductExposedInfoEverydayById&v=1
    /// </summary>
    public partial class ApiQueryProductExposedInfoEverydayByIdResponse : AliErrorType
    {

        /// <summary>
        /// 被曝光数。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Total")]
        public string Total { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品每天的销量数据(该数据仅限30天之内的时间区间数据查询）（试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductSalesInfoEverydayById&v=1
    /// </summary>
    public partial class ApiQueryProductSalesInfoEverydayByIdResponse : AliErrorType
    {

        /// <summary>
        /// 销量总数。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Total")]
        public string Total { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品每天被收藏的数量(该数据仅限30天之内的时间区间数据查询）（试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductFavoritedInfoEverydayById&v=1
    /// </summary>
    public partial class ApiQueryProductFavoritedInfoEverydayByIdResponse : AliErrorType
    {

        /// <summary>
        /// 收藏成功。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询速卖通平台公告信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryAeAnouncement&v=1
    /// </summary>
    public partial class ApiQueryAeAnouncementResponse : AliErrorType
    {

    }

    /// <summary>
    /// aliexpress.open
    /// 查询速卖通服务市场公告信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryServiceAnouncement&v=1
    /// </summary>
    public partial class ApiQueryServiceAnouncementResponse : AliErrorType
    {

    }

    /// <summary>
    /// aliexpress.open
    /// 查询开放平台公告信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryOpenAnouncement&v=1
    /// </summary>
    public partial class ApiQueryOpenAnouncementResponse : AliErrorType
    {

        /// <summary>
        /// 返回结果。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public AeopAnouncementResult Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取指定活动详细信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=findSellerCouponActivity&v=1
    /// </summary>
    public partial class FindSellerCouponActivityResponse : AliErrorType
    {

        /// <summary>
        /// 卖家自主coupon活动领域模型对象
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerCouponActivity")]
        public SellerCouponActivity SellerCouponActivity { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询已添加的coupon活动
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=getActList&v=1
    /// </summary>
    public partial class GetActListResponse : AliErrorType
    {

        /// <summary>
        /// 卖家自主coupon活动查询结果列表，支持分页
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerCouponActivityList")]
        public SellerCouponActivityList SellerCouponActivityList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家对未评价的订单进行评价
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.evaluation.saveSellerFeedback&v=1
    /// </summary>
    public partial class ApiEvaluationSaveSellerFeedbackResponse : AliErrorType
    {

        /// <summary>
        /// 返回主订单留评是否成功标识。success：true—成功；false—失败。
        /// 是否隐私:是
        /// 示例值:
        /// {"errorCode":3002,"errorMessage":"It is already leave feedback.","success":false}
        /// </summary>
        [JsonProperty("Result")]
        public string Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询待卖家评价的订单信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.evaluation.querySellerEvaluationOrderList&v=1
    /// </summary>
    public partial class ApiEvaluationQuerySellerEvaluationOrderListResponse : AliErrorType
    {

        /// <summary>
        /// 卖家评价订单信息。listResult：订单集合；totalItem：订单总记录数。
        /// 是否隐私:是
        /// 示例值:
        /// {"listResult":[{"orderId":1809251120},{"orderId":1809251110}],"success":true,"totalItem":2}
        /// </summary>
        [JsonProperty("卖家评价订单信息")]
        public string 卖家评价订单信息 { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据买卖家loginId查询站内信
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryMsgDetailListByBuyerId&v=1
    /// </summary>
    public partial class ApiQueryMsgDetailListByBuyerIdResponse : AliErrorType
    {

        /// <summary>
        /// 站内信详情结果集
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public DetailResult[] Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取当前用户下与当前用户建立消息关系的列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryMsgRelationList&v=1
    /// </summary>
    public partial class ApiQueryMsgRelationListResponse : AliErrorType
    {

        /// <summary>
        /// 站内信/订单留言关系列表返回结果集
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public RelationResult[] Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 站内信/订单留言查询详情列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryMsgDetailList&v=1
    /// </summary>
    public partial class ApiQueryMsgDetailListResponse : AliErrorType
    {

        /// <summary>
        /// 站内信/订单留言详情结果集
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public DetailResult[] Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 新的上传图片到临时目录接口。这个接口与api.uploadTempImage接口的区别在于：显示提供了fileData参数用于设置图片的字节参数。参数格式：fileData=af0012034...。推荐大家使用。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.uploadTempImage4SDK&v=1
    /// </summary>
    public partial class ApiUploadTempImage4SDKResponse : AliErrorType
    {

        /// <summary>
        /// 图片的宽度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 800
        /// </summary>
        [JsonProperty("Width")]
        public int Width { get; set; }

        /// <summary>
        /// 图片的高度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 800
        /// </summary>
        [JsonProperty("Height")]
        public int Height { get; set; }

        /// <summary>
        /// 图片的URL。
        /// 是否隐私:是
        /// 示例值:
        /// http://g02.a.alicdn.com/kf/HTB1U07VIVXXXXaiaXXXq6xXFXXXu.jpg
        /// </summary>
        [JsonProperty("Url")]
        public string Url { get; set; }

        /// <summary>
        /// 本次操作的结果。
        /// 是否隐私:是
        /// 示例值:
        /// true或者false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 图片的文件名。
        /// 是否隐私:是
        /// 示例值:
        /// 1.jpg
        /// </summary>
        [JsonProperty("SrcFileName")]
        public string SrcFileName { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 上传图片到临时目录。适用于上传商品主图、商品详描图或SKU图片，用于商品主图介绍展示的临时图片至多支持上传6张图片。
    /// 示例代码请参见：http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#tpc
    /// 注意：
    /// http://gw.api.alibaba.com/fileapi/param2/1/aliexpress.open/api.uploadTempImage/{0}?access_token={1}&srcFileName={2}
    /// 把图片流POST到这地址即可。
    /// 商品主图的限制：1) 大小不超过5MB 2)尺寸不超过1000x1500  3) 图片格式: JPG/JPEG
    /// 商品SKU图的限制: 1) 大小不超过200KB 2) 尺寸不超过1000x1500 3) 图片格式: JPG/JPEG
    /// 商品详描图的限制: 1) 大小不超过5MB 2)尺寸不超过1000x5000 3)图片格式: JPG/JPEG
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.uploadTempImage&v=1
    /// </summary>
    public partial class ApiUploadTempImageResponse : AliErrorType
    {

        /// <summary>
        /// 图片的宽度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 800
        /// </summary>
        [JsonProperty("Width")]
        public int Width { get; set; }

        /// <summary>
        /// 图片的高度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 800
        /// </summary>
        [JsonProperty("Height")]
        public int Height { get; set; }

        /// <summary>
        /// 图片的URL。
        /// 是否隐私:是
        /// 示例值:
        /// http://g02.a.alicdn.com/kf/HTB1U07VIVXXXXaiaXXXq6xXFXXXu.jpg
        /// </summary>
        [JsonProperty("Url")]
        public string Url { get; set; }

        /// <summary>
        /// 本次操作的结果。
        /// 是否隐私:是
        /// 示例值:
        /// true或者false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 图片的文件名。
        /// 是否隐私:是
        /// 示例值:
        /// 1.jpg
        /// </summary>
        [JsonProperty("SrcFileName")]
        public string SrcFileName { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 将商品图片上传到图片银行。这个接口与api.uploadImage的区别在于显式提供imageBytes参数用于设置图片的二进制数据。参数格式：imageBytes="12ff8722adfeefa..."。推荐使用。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.uploadImage4SDK&v=1
    /// </summary>
    public partial class ApiUploadImage4SDKResponse : AliErrorType
    {

        /// <summary>
        /// 图片的宽度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 858
        /// </summary>
        [JsonProperty("Width")]
        public int Width { get; set; }

        /// <summary>
        /// 图片的高度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 1210
        /// </summary>
        [JsonProperty("Height")]
        public int Height { get; set; }

        /// <summary>
        /// 图片的名称。
        /// 是否隐私:是
        /// 示例值:
        /// test2.png
        /// </summary>
        [JsonProperty("FileName")]
        public string FileName { get; set; }

        /// <summary>
        /// 图片银行总的空间大小。单位：MB
        /// 是否隐私:是
        /// 示例值:
        /// 6144.00
        /// </summary>
        [JsonProperty("PhotobankTotalSize")]
        public string PhotobankTotalSize { get; set; }

        /// <summary>
        /// 已经使用了的图片银行空间。单位：MB
        /// 是否隐私:是
        /// 示例值:
        /// 96.95
        /// </summary>
        [JsonProperty("PhotobankUsedSize")]
        public string PhotobankUsedSize { get; set; }

        /// <summary>
        /// 这张图片的URL。
        /// 是否隐私:是
        /// 示例值:
        /// http://g02.a.alicdn.com/kf/HT
        /// </summary>
        [JsonProperty("PhotobankUrl")]
        public string PhotobankUrl { get; set; }

        /// <summary>
        /// 图片上传的结果。
        /// 是否隐私:是
        /// 示例值:
        /// SUCCESS
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 接口调用的结果。
        /// 是否隐私:是
        /// 示例值:
        /// true或者false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据path查询图片信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryPhotoBankImageByPaths&v=1
    /// </summary>
    public partial class ApiQueryPhotoBankImageByPathsResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Images")]
        public string Images { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取图片银行信息，例如图片银行容量，已使用量等信息。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getPhotoBankInfo&v=1
    /// </summary>
    public partial class ApiGetPhotoBankInfoResponse : AliErrorType
    {

        /// <summary>
        /// 图片银行总容量，单位字节。
        /// 是否隐私:是
        /// 示例值:
        /// 6442450944
        /// </summary>
        [JsonProperty("Capicity")]
        public long Capicity { get; set; }

        /// <summary>
        /// 图片银行已使用量，单位字节。
        /// 是否隐私:是
        /// 示例值:
        /// 101887513
        /// </summary>
        [JsonProperty("Useage")]
        public long Useage { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 删除用户图片银行中未被引用的图片信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.delUnUsePhoto&v=1
    /// </summary>
    public partial class ApiDelUnUsePhotoResponse : AliErrorType
    {

        /// <summary>
        /// success:调用是否成功, true或者false;
        /// 是否隐私:是
        /// 示例值:
        /// { "success":true }
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 上传图片到图片银行（由于无法实现图片的上传、下载，故该测试工具不可用。）示例代码请参见
    /// http://bbs.seller.aliexpress.com/bbs/read.php?tid=166319#2468428
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.uploadImage&v=1
    /// </summary>
    public partial class ApiUploadImageResponse : AliErrorType
    {

        /// <summary>
        /// 图片的宽度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 858
        /// </summary>
        [JsonProperty("Width")]
        public int Width { get; set; }

        /// <summary>
        /// 图片的高度。单位：像素
        /// 是否隐私:是
        /// 示例值:
        /// 1210
        /// </summary>
        [JsonProperty("Height")]
        public int Height { get; set; }

        /// <summary>
        /// 图片的名称。
        /// 是否隐私:是
        /// 示例值:
        /// test2.png
        /// </summary>
        [JsonProperty("FileName")]
        public string FileName { get; set; }

        /// <summary>
        /// 图片银行总的空间大小。单位：MB
        /// 是否隐私:是
        /// 示例值:
        /// 6144.00
        /// </summary>
        [JsonProperty("PhotobankTotalSize")]
        public string PhotobankTotalSize { get; set; }

        /// <summary>
        /// 已经使用了的图片银行空间。单位：MB
        /// 是否隐私:是
        /// 示例值:
        /// 96.95
        /// </summary>
        [JsonProperty("PhotobankUsedSize")]
        public string PhotobankUsedSize { get; set; }

        /// <summary>
        /// 这张图片的URL。
        /// 是否隐私:是
        /// 示例值:
        /// http://g02.a.alicdn.com/kf/HTB1.v4sJXXXXXcgXXXX760XFXXXe/200042360/HTB1.v4sJXXXXXcgXXXX760XFXXXe.png
        /// </summary>
        [JsonProperty("PhotobankUrl")]
        public string PhotobankUrl { get; set; }

        /// <summary>
        /// 图片上传的结果。
        /// 是否隐私:是
        /// 示例值:
        /// SUCCESS
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 接口调用的结果。
        /// 是否隐私:是
        /// 示例值:
        /// true或者false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取图片银行指定分组的子分组信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.listGroup&v=1
    /// </summary>
    public partial class ApiListGroupResponse : AliErrorType
    {

        /// <summary>
        /// 图片银行分组列表，如果没有任何的分组信息。这个属性为:[]。
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 		{"groupId":"300349002","groupName":"123123123"},
        /// 		{"groupId":"600261320","groupName":"dd"},
        /// 		{"groupId":"300473001","groupName":"fileserver2"},
        /// 		{"groupId":"600607652","groupName":"group1"}
        /// 	]
        /// </summary>
        [JsonProperty("PhotoBankImageGroupList")]
        public PhotobankGroup[] PhotoBankImageGroupList { get; set; }

        /// <summary>
        /// 本次调用是否成功。
        /// 是否隐私:是
        /// 示例值:
        /// true/false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 图片银行列表分页查询
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.listImagePagination&v=1
    /// </summary>
    public partial class ApiListImagePaginationResponse : AliErrorType
    {

        /// <summary>
        /// 当前参数组成的查询对象。
        /// 是否隐私:是
        /// 示例值:
        /// {"groupId":"1","pageSize":300,"currentPage":2}
        /// </summary>
        [JsonProperty("Query")]
        public PhtobankPaginationQuery Query { get; set; }

        /// <summary>
        /// 本次查询结果返回的图片列表。
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 		{
        /// 			"fileSize":36668,
        /// 			"height":276,
        /// 			"iid":3207108923,
        /// 			"width":223,
        /// 			"referenceCount":0,
        /// 			"displayName":"image",
        /// 			"url":"http://g01.a.alicdn.com/kf/HTB1PHDKGVXXXXa5XXXXq6xXFXXXK/200042360/HTB1PHDKGVXXXXa5XXXXq6xXFXXXK.jpg"
        /// 		},
        /// 
        /// 		{
        /// 			"fileSize":194362,
        /// 			"height":850,
        /// 			"iid":3207108922,
        /// 			"width":730,
        /// 			"referenceCount":0,
        /// 			"displayName":"image",
        /// 			"url":"http://g01.a.alicdn.com/kf/HTB1PtfIGVXXXXajXpXXq6xXFXXXi/200042360/HTB1PtfIGVXXXXajXpXXq6xXFXXXi.jpg"
        /// 		}
        /// 	]
        /// </summary>
        [JsonProperty("Images")]
        public PhotobankImageRecord[] Images { get; set; }

        /// <summary>
        /// 当前分组下的图片总数。如果locationType取值为"allGroup", 则为这个用户的图片总数。
        /// 是否隐私:是
        /// 示例值:
        /// 1468
        /// </summary>
        [JsonProperty("Total")]
        public int Total { get; set; }

        /// <summary>
        /// 本次查询结果分页的页数。
        /// 是否隐私:是
        /// 示例值:
        /// 23
        /// </summary>
        [JsonProperty("TotalPage")]
        public int TotalPage { get; set; }

        /// <summary>
        /// 本次调用是否成功。
        /// 是否隐私:是
        /// 示例值:
        /// true/false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 卖家post商品时可选择商品有效期。
    /// 每次延长的有效期=post商品时卖家选择的商品有效期
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.ae.product.renewExpire&v=1
    /// </summary>
    public partial class AlibabaAeProductRenewExpireResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ModifyResponse")]
        public AlibabaAeProductAeopModifyProductResponse ModifyResponse { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 多语言原发接口。卖家可以通过这个接口发布一个多语言商品。一次只能发布一种多语言商品，例如：俄文。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=alibaba.product.postMultilanguageAeProduct&v=1
    /// </summary>
    public partial class AlibabaProductPostMultilanguageAeProductResponse : AliErrorType
    {

        /// <summary>
        /// 新商品的ID
        /// 是否隐私:是
        /// 示例值:
        /// 59345
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 接口调用结果。true表示发布成功，false表示发布失败。
        /// 是否隐私:是
        /// 示例值:
        /// true或false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询商品状态，商品供三种状态。审核通过:approved;审核中:auditing;审核不通过:refuse
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.findAeProductStatusById&v=1
    /// </summary>
    public partial class ApiFindAeProductStatusByIdResponse : AliErrorType
    {

        /// <summary>
        /// 商品ID
        /// 是否隐私:是
        /// 示例值:
        /// 32462942083
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品状态。审核通过:approved;审核中:auditing;审核不通过:refuse
        /// 是否隐私:是
        /// 示例值:
        /// auditing
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 调用发布商品接口api.postaeproduct前，针对商品标题等信息做违禁词相关信息查询接口。
    /// 当前支持的违禁词查询范围包括：1.商品的标题，2.商品的关键字, 3. 商品的类目属性, 4.商品的详细描述。用户提供以上四个参数以及商品的类目ID来查询标题、关键字、类目属性、详细描述中是否包含了当前类目的违禁词。
    /// 发布产品时平台提供的违禁词查询只供参考和引导的作用，同时由于是系统检测并不能判断实际词语应用的场景，所以还需请您不断仔细检查相关词语的应用情况，可点此进入知识产权的相关学习：http://seller.aliexpress.com/education/rules/ipr31.html?tracelog=ipr01zscqzq
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.findAeProductProhibitedWords&v=1
    /// </summary>
    public partial class ApiFindAeProductProhibitedWordsResponse : AliErrorType
    {

        /// <summary>
        /// 标题中的违禁词列表, 如果标题字中没有违禁词, 则返回一个"'[]"。否则将以示例值中的格式返回。其中每个违禁词都包含了2个属性: primaryWord和types。其中primaryWord表示违禁词，types表示违禁词的类型，总共有四种类型: FORBIDEN_TYPE(禁用), RESTRICT_TYPE(限定), BRAND_TYPE(品牌), TORT_TYPE(侵权)。
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 	{
        /// 		"primaryWord": "nike",
        /// 		"types": ["FORBIDEN_TYPE", "RESTRICT_TYPE"]
        /// 	},
        /// 	{
        /// 		"primaryWord": "adidas",
        /// 		"types": ["BRAND_TYPE", "TORT_TYPE"]
        /// 	}
        /// ]
        /// </summary>
        [JsonProperty("TitleProhibitedWords")]
        public AeProhibitedWord[] TitleProhibitedWords { get; set; }

        /// <summary>
        /// 关键字的违禁词列表, 如果关键字中没有违禁词, 则返回一个"'[]"。否则将以示例值中的格式返回。其中每个违禁词都包含了2个属性: primaryWord和types。其中primaryWord表示违禁词，types表示违禁词的类型，总共有四种类型: FORBIDEN_TYPE(禁用), RESTRICT_TYPE(限定), BRAND_TYPE(品牌), TORT_TYPE(侵权)。
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 	{
        /// 		"primaryWord": "nike",
        /// 		"types": ["FORBIDEN_TYPE", "RESTRICT_TYPE"]
        /// 	},
        /// 	{
        /// 		"primaryWord": "adidas",
        /// 		"types": ["BRAND_TYPE", "TORT_TYPE"]
        /// 	}
        /// ]
        /// </summary>
        [JsonProperty("KeywordsProhibitedWords")]
        public AeProhibitedWord[] KeywordsProhibitedWords { get; set; }

        /// <summary>
        /// 类目属性的违禁词列表, 如果类目属性中没有违禁词, 则返回一个"'[]"。否则将以示例值中的格式返回。其中每个违禁词都包含了2个属性: primaryWord和types。其中primaryWord表示违禁词，types表示违禁词的类型，总共有四种类型: FORBIDEN_TYPE(禁用), RESTRICT_TYPE(限定), BRAND_TYPE(品牌), TORT_TYPE(侵权)。
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 	{
        /// 		"primaryWord": "nike",
        /// 		"types": ["FORBIDEN_TYPE", "RESTRICT_TYPE"]
        /// 	},
        /// 	{
        /// 		"primaryWord": "adidas",
        /// 		"types": ["BRAND_TYPE", "TORT_TYPE"]
        /// 	}
        /// ]
        /// </summary>
        [JsonProperty("ProductPropertiesProhibitedWords")]
        public AeProhibitedWord[] ProductPropertiesProhibitedWords { get; set; }

        /// <summary>
        /// 商品详描中的违禁词列表, 如果商品详描中没有违禁词, 则返回一个"'[]"。否则将以示例值中的格式返回。其中每个违禁词都包含了2个属性: primaryWord和types。其中primaryWord表示违禁词，types表示违禁词的类型，总共有四种类型: FORBIDEN_TYPE(禁用), RESTRICT_TYPE(限定), BRAND_TYPE(品牌), TORT_TYPE(侵权)。
        /// 是否隐私:是
        /// 示例值:
        /// [
        /// 	{
        /// 		"primaryWord": "nike",
        /// 		"types": ["FORBIDEN_TYPE", "RESTRICT_TYPE"]
        /// 	},
        /// 	{
        /// 		"primaryWord": "adidas",
        /// 		"types": ["BRAND_TYPE", "TORT_TYPE"]
        /// 	}
        /// ]
        /// </summary>
        [JsonProperty("DetailProhibitedWords")]
        public AeProhibitedWord[] DetailProhibitedWords { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 编辑单个商品的一个或者多个SKU可售库存。将要修改的SKU的库存值保存在skuStocks参数中(Map类型数据)，其中key为SKU ID(字符串), value为对应的库存值(Long型)。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editMutilpleSkuStocks&v=1
    /// </summary>
    public partial class ApiEditMutilpleSkuStocksResponse : AliErrorType
    {

        /// <summary>
        /// 接口调用结果。true/false分别表示接口调用成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true/false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 待编辑的产品ID
        /// 是否隐私:是
        /// 示例值:
        /// 12345
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 修改的产品数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 编辑商品单个SKU的库存信息.
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editSingleSkuStock&v=1
    /// </summary>
    public partial class ApiEditSingleSkuStockResponse : AliErrorType
    {

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 修改的产品数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 修改的产品ID
        /// 是否隐私:是
        /// 示例值:
        /// 123445
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 编辑商品的单个SKU价格信息。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editSingleSkuPrice&v=1
    /// </summary>
    public partial class ApiEditSingleSkuPriceResponse : AliErrorType
    {

        /// <summary>
        /// 修改的产品数。如果接口调用成功，则这个值为1，调用失败则为0。
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 产品ID
        /// 是否隐私:是
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 接口调用结果.
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 原发编辑商品多语言标题或详描描述（英文版本除外）。试用
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editMultilanguageProduct&v=1
    /// </summary>
    public partial class ApiEditMultilanguageProductResponse : AliErrorType
    {

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 修改的商品数。
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 产品ID
        /// 是否隐私:是
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 可查询获取该卖家目前实际可用橱窗数量。调用该接口时需主要针对主账户ID提供查询服务，子账号ID无法获取相关橱窗数量查询。(试用）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getRemainingWindows&v=1
    /// </summary>
    public partial class ApiGetRemainingWindowsResponse : AliErrorType
    {

        /// <summary>
        /// 每个橱窗的有效期(单位: 天)。
        /// 是否隐私:是
        /// 示例值:
        /// 7
        /// </summary>
        [JsonProperty("ValidDays")]
        public int ValidDays { get; set; }

        /// <summary>
        /// 剩余的可用橱窗数
        /// 是否隐私:是
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("RemainingWindowCount")]
        public int RemainingWindowCount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 创建一个新的产品分组.一个用户的一级分组最多有10个，二级分组最多有10个。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.createProductGroup&v=1
    /// </summary>
    public partial class ApiCreateProductGroupResponse : AliErrorType
    {

        /// <summary>
        /// 创建产品分组的时间
        /// 是否隐私:是
        /// 示例值:
        /// 20150423224923499-0700
        /// </summary>
        [JsonProperty("TimeStamp")]
        public System.DateTimeOffset TimeStamp { get; set; }

        /// <summary>
        /// 新创建的产品组ID
        /// 是否隐私:是
        /// 示例值:
        /// 124
        /// </summary>
        [JsonProperty("Target")]
        public long Target { get; set; }

        /// <summary>
        /// 创建失败时的错误信息
        /// 是否隐私:是
        /// 示例值:
        /// error
        /// </summary>
        [JsonProperty("ErrorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询当前用户在指定类目下可用的尺码模版信息。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getSizeChartInfoByCategoryId&v=1
    /// </summary>
    public partial class ApiGetSizeChartInfoByCategoryIdResponse : AliErrorType
    {

        /// <summary>
        /// 尺码标模版列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SizechartDTOList")]
        public MessageSizechartDTOList[] SizechartDTOList { get; set; }

        /// <summary>
        /// 调用方法成功标识
        /// 是否隐私:是
        /// 示例值:
        /// "success":true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 修改商品所引用的尺码模板
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.setSizeChart&v=1
    /// </summary>
    public partial class ApiSetSizeChartResponse : AliErrorType
    {

        /// <summary>
        /// 尺码表设置成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取某个卖家橱窗商品目前使用情况详情。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getWindowProducts&v=1
    /// </summary>
    public partial class ApiGetWindowProductsResponse : AliErrorType
    {

        /// <summary>
        /// 已使用的橱窗信息。
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WindowProducts")]
        public AeopAeProductWindow[] WindowProducts { get; set; }

        /// <summary>
        /// 已使用的橱窗个数，与windowProducts中记录的条数一致。
        /// 是否隐私:是
        /// 示例值:
        /// 3
        /// </summary>
        [JsonProperty("UsedCount")]
        public int UsedCount { get; set; }

        /// <summary>
        /// 当前用户的橱窗总数＝已使用的橱窗数＋未使用的橱窗数。
        /// 是否隐私:是
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("WindowCount")]
        public int WindowCount { get; set; }

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 已推荐为橱窗商品的ID列表。与windowProducts中的产品ID一致。
        /// 是否隐私:是
        /// 示例值:
        /// [1,2,3]
        /// </summary>
        [JsonProperty("ProductList")]
        public long[] ProductList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 编辑商品的类目属性，用给定的类目属性覆盖原有的类目属性。(试用)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editProductCategoryAttributes&v=1
    /// </summary>
    public partial class ApiEditProductCategoryAttributesResponse : AliErrorType
    {

        /// <summary>
        /// 该产品的ID
        /// 是否隐私:是
        /// 示例值:
        /// 1724649102
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 修改的产品数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 设置单个产品的产品分组信息，最多设置三个分组。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.setGroups&v=1
    /// </summary>
    public partial class ApiSetGroupsResponse : AliErrorType
    {

        /// <summary>
        /// 操作结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public string Success { get; set; }

        /// <summary>
        /// 20150714015815415-0700
        /// 是否隐私:是
        /// 示例值:
        /// 本次操作的时间
        /// </summary>
        [JsonProperty("TimeStamp")]
        public System.DateTimeOffset TimeStamp { get; set; }

        /// <summary>
        /// 绑定成功的产品分组列表。
        /// 是否隐私:是
        /// 示例值:
        /// [1001,2002]
        /// </summary>
        [JsonProperty("Target")]
        public long[] Target { get; set; }

        /// <summary>
        /// 出错时的错误信息。
        /// 是否隐私:是
        /// 示例值:
        /// some group set ok ,some group system error,please check target and retry!
        /// </summary>
        [JsonProperty("ErrorMessage")]
        public string ErrorMessage { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询指定商品id所在产品分组
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryProductGroupIdByProductId&v=1
    /// </summary>
    public partial class ApiQueryProductGroupIdByProductIdResponse : AliErrorType
    {

        /// <summary>
        /// 这个产品所关联的产品分组ID列表。
        /// 是否隐私:是
        /// 示例值:
        /// [{"groupId":254562048}, {"groupId":200001234}]
        /// </summary>
        [JsonProperty("Target")]
        public GroupIdHolder[] Target { get; set; }

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用接口的时间。
        /// 是否隐私:是
        /// 示例值:
        /// 20150714014419608-0700
        /// </summary>
        [JsonProperty("TimeStamp")]
        public System.DateTimeOffset TimeStamp { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取当前会员的产品分组
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getProductGroupList&v=1
    /// </summary>
    public partial class ApiGetProductGroupListResponse : AliErrorType
    {

        /// <summary>
        /// 产品分组信息
        /// 是否隐私:是
        /// 示例值:
        /// [{"groupId":262007001,"groupName":"test112fasdfds","childGroup":[{"groupId":500052004,"groupName":"twrewerw"},{"groupId":503693012,"groupName":"111"}]},{"groupId":500052002,"groupName":"tseqrsdsd","childGroup":[{"groupId":500052008,"groupName":"asfasdfs"},{"groupId":503014044,"groupName":"ssss"}]},{"groupId":262007004,"groupName":"sfdasdfasdffasdfasd"},{"groupId":503212001,"groupName":"macbook pro","childGroup":[{"groupId":503014043,"groupName":"macbook air"}]},{"groupId":1000000005004,"groupName":"imac"},{"groupId":1000000006001,"groupName":"test group name"}]
        /// </summary>
        [JsonProperty("Target")]
        public AeopProductGroup[] Target { get; set; }

        /// <summary>
        /// 调用接口的时间戳
        /// 是否隐私:是
        /// 示例值:
        /// 20140217180739336-0800
        /// </summary>
        [JsonProperty("TimeStamp")]
        public string TimeStamp { get; set; }

        /// <summary>
        /// 接口的调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 编辑产品类目、属性、sku
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editProductCidAttIdSku&v=1
    /// </summary>
    public partial class ApiEditProductCidAttIdSkuResponse : AliErrorType
    {

        /// <summary>
        /// 待修改产品的ID
        /// 是否隐私:是
        /// 示例值:
        /// 1724649102
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 修改的产品数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 编辑商品的单个字段(目前使用api.editSimpleProductFiled这个接口 暂不支持商品分组、商品属性、SKU、服务模板的修改。请注意！)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editSimpleProductFiled&v=1
    /// </summary>
    public partial class ApiEditSimpleProductFiledResponse : AliErrorType
    {

        /// <summary>
        /// 产品ID
        /// 是否隐私:是
        /// 示例值:
        /// 1590267344
        /// </summary>
        [JsonProperty("ProductId")]
        public string ProductId { get; set; }

        /// <summary>
        /// 修改的产品数
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 接口的调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取属性需要优化的商品列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getAtributeMissingProductList&v=1
    /// </summary>
    public partial class ApiGetAtributeMissingProductListResponse : AliErrorType
    {

        /// <summary>
        /// 详见AeopProductOptimizeResult数据结构
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopProductOptimizeResult")]
        public AeopProductOptimizeResult AeopProductOptimizeResult { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 通过淘宝产品的url进行单品认领（URL需做代码转译。)
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.claimTaobaoProducts4API&v=1
    /// </summary>
    public partial class ApiClaimTaobaoProducts4APIResponse : AliErrorType
    {

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 认领失败时的错误码
        /// 是否隐私:是
        /// 示例值:
        /// 6003
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 认领失败时的错误信息
        /// 是否隐私:是
        /// 示例值:
        /// has claimed the taobao product
        /// </summary>
        [JsonProperty("ErrorMessage")]
        public string ErrorMessage { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 商品橱窗设置
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.setShopwindowProduct&v=1
    /// </summary>
    public partial class ApiSetShopwindowProductResponse : AliErrorType
    {

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 剩余的可用橱窗数。
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("RemainingWindowCount")]
        public int RemainingWindowCount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 服务模板查询API
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.queryPromiseTemplateById&v=1
    /// </summary>
    public partial class ApiQueryPromiseTemplateByIdResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TemplateList")]
        public AlibabaProductPromiseTemplate[] TemplateList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.listTbProductByIds&v=1
    /// </summary>
    public partial class ApiListTbProductByIdsResponse : AliErrorType
    {

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Response")]
        public AeopTaoDaiXiaoProductResultDTO[] Response { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询信息模板列表
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.findAeProductDetailModuleListByQurey&v=1
    /// </summary>
    public partial class ApiFindAeProductDetailModuleListByQureyResponse : AliErrorType
    {

        /// <summary>
        /// 模块信息列表
        /// 是否隐私:是
        /// 示例值:
        /// [{"id":2194354,"moduleContents":"1350593917,1354823930,1353525682","status":"approved","name":"test123456","type":"relation","aliMemberId":200042360},{"id":2088506,"moduleContents":"<p> <img alt=\"test1\" src=\"http://img.alibaba.com/img/pb/053/647/783/783647053_238.jpg\" /><img alt=\"test2\" src=\"http://img.alibaba.com/img/pb/045/647/783/783647045_687.jpg\" /><img alt=\"test3\" src=\"http://img.alibaba.com/img/pb/054/647/783/783647054_682.jpg\" /><img alt=\"test4\" src=\"http://img.alibaba.com/img/pb/042/647/783/783647042_426.jpg\" /></p>","status":"approved","name":"testcc111","type":"custom","aliMemberId":200042360},{"id":1762000,"moduleContents":"<p> sdfsdf </p>","status":"approved","name":"3433","type":"custom","aliMemberId":200042360},{"id":1729207,"moduleContents":"<p> asdfasdfasdf </p>\n<p> asdfasdfasdf </p>\n<p> <img alt=\"\" src=\"http://upload.alibaba.com/common/upload/137/447/364/453/hz-fileserver-upload1_hjfa3m56.jpg?size=274813&height=750&width=1000&hash=2f3d43ece202c8d172b9721031d9bcdf\" /><img alt=\"\" src=\"http://upload.alibaba.com/common/upload/137/447/364/620/hz-fileserver-upload2_hjfa3m58.jpg?size=193019&height=750&width=1000&hash=110f7beb032d3eb0e34ff0ade19388f8\" /><img alt=\"\" src=\"http://upload.alibaba.com/common/upload/137/447/364/547/hz-fileserver-upload2_hjfa3m57.jpg?size=277148&height=750&width=1000&hash=e6c98312973b8714b42d354e186d7282\" /><img alt=\"\" src=\"http://upload.alibaba.com/common/upload/137/447/364/689/hz-fileserver-upload2_hjfa3m59.jpg?size=161109&height=750&width=1000&hash=23978a1f7117f1962b300ca2a16e9c72\" /></p>","status":"approved","name":"bbbbbdfasda","type":"custom","aliMemberId":200042360},{"id":1726203,"moduleContents":"<p> <img alt=\"\" height=\"960\" src=\"http://upload.alibaba.com/wsproduct_repository/upload/aerichtext-2013-7/137/447/331/480/1374473314809_hz-myaliexpress-web2_3364.jpg?width=640&height=960&hash=49a0a9caa7dc55d33e37583b6b465609&size=57523\" width=\"640\" /></p>\n<p> ly </p>","status":"approved","name":"aaaaaaaaaaaa","type":"custom","aliMemberId":200042360},{"id":23003,"moduleContents":"<p> <img alt=\"\" src=\"http://upload.alibaba.com/wsproduct_repository/upload/135/815/139/575/hz-fileserver-upload2_hbxc9owi.jpg?size=440190&height=1403&width=1000&hash=ff57dba76e0de9204679f67ac8fcb1f6\" /></p>","status":"approved","name":"ccccccccccc","type":"custom","aliMemberId":200042360},{"id":1649000,"moduleContents":"<p> <img alt=\"\" src=\"http://upload.alibaba.com/common/upload/137/346/311/370/hz-fileserver-upload3_hiykgyv6.jpg?size=113531&height=520&width=780&hash=cde7a91f6e36e1085c0e642f69a9819e\" /></p>","status":"approved","name":"2342312312","type":"custom","aliMemberId":200042360},{"id":1344000,"moduleContents":"595360445,595360449,595360446,595360428","status":"approved","name":"4589","type":"relation","aliMemberId":200042360},{"id":10012,"moduleContents":"<p> Ω≤≥°C°F√μ </p>","status":"approved","name":"test1","type":"custom","aliMemberId":200042360},{"id":10007,"moduleContents":"595360447,690226500,690186781","status":"approved","name":"test","type":"relation","aliMemberId":200042360},{"id":31000,"moduleContents":"<p> sfgsdfgsfgsdf </p>\n<p> sf </p>\n<p> gsdfg<img alt=\"001\" height=\"301\" src=\"http://hz01.i.aliimg.com/img/pb/392/623/443/443623392_188.JPG\" width=\"265\" /></p>","status":"approved","name":"sasdf","type":"custom","aliMemberId":200042360},{"id":20001,"moduleContents":"<p> testsfdgsdf </p>","status":"approved","name":"test111","type":"custom","aliMemberId":200042360},{"id":10014,"moduleContents":"<p> iphone </p>","status":"approved","name":"iphone","type":"custom","aliMemberId":200042360}]
        /// </summary>
        [JsonProperty("AeopDetailModuleList")]
        public AeopDetailModule[] AeopDetailModuleList { get; set; }

        /// <summary>
        /// 当前页号
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 总页数
        /// 是否隐私:是
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("TotalPage")]
        public int TotalPage { get; set; }

        /// <summary>
        /// 接口调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据模块id查询模块，模块在detail详情中显示格式：<kse:widget data-widget-type="widget" id="1004" title="Specification " type="relation"></kse:widget>
    /// 标签属性id="1004"对应返回值中的id,标签属性type="relation"对应返回值中的type, 标签属性title="Specification "对应返回值中的name.
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.findAeProductModuleById&v=1
    /// </summary>
    public partial class ApiFindAeProductModuleByIdResponse : AliErrorType
    {

        /// <summary>
        /// 模块的id
        /// 是否隐私:是
        /// 示例值:
        /// 123
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 模块的创建时间
        /// 是否隐私:是
        /// 示例值:
        /// 20150714014419608-0700
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 模块的最近一次修改时间
        /// 是否隐私:是
        /// 示例值:
        /// 20150714014419608-0700
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// 模块的名称
        /// 是否隐私:是
        /// 示例值:
        /// hello
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 模块的类型
        /// 是否隐私:是
        /// 示例值:
        /// custom
        /// </summary>
        [JsonProperty("Type")]
        public string Type { get; set; }

        /// <summary>
        /// 模块的状态
        /// 是否隐私:是
        /// 示例值:
        /// approved
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 模块的内容
        /// 是否隐私:是
        /// 示例值:
        /// hello world
        /// </summary>
        [JsonProperty("ModuleContents")]
        public string ModuleContents { get; set; }

        /// <summary>
        /// 这个模块所有者的主账户ID
        /// 是否隐私:是
        /// 示例值:
        /// 1006680305
        /// </summary>
        [JsonProperty("AliMemberId")]
        public long AliMemberId { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// display content
        /// </summary>
        [JsonProperty("DisplayContent")]
        public string DisplayContent { get; set; }

        /// <summary>
        /// 接口的调用结果。true/false分别表示成功和失败。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 上架一个或者多个商品，待上架的产品ID通过参数productIds指定，产品ID之间使用英文分号(;)隔开, 最多一次只能上架50个商品。
    /// 
    /// 行业准入商品上架限制
    /// 如果用户退出了一个行业准入的类目(比如：假发)，那么将无法上架这个类目下的商品。
    /// 
    /// 返回值
    /// 1. 接口调用成功后，将返回类似的json串: {"modifyCount": 10, success: true}。
    /// 2. 接口调用失败后，将返回类似的json串: {"error_code": "11001023", "error_message": "Product too much", "exception": "exception message"}
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.onlineAeProduct&v=1
    /// </summary>
    public partial class ApiOnlineAeProductResponse : AliErrorType
    {

        /// <summary>
        /// 商品上架错误详情
        /// 是否隐私:是
        /// 示例值:
        /// [ 
        ///      {errorCode: 11015111, productIds:[50001056157, 50001056153]},
        ///      {errorCode: 11015112,  productIds:[50001056152, 50001056156]}
        /// ]
        /// </summary>
        [JsonProperty("ErrorDetails")]
        public AlibabaProductOnlineErrorDetail[] ErrorDetails { get; set; }

        /// <summary>
        /// 操作成功返回成功产品个数。
        /// 是否隐私:是
        /// 示例值:
        /// 5
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 接口调用结果。成功为true, 失败为false。
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 商品下架接口。需要下架的商品的通过productIds参数指定，多个商品之间用英文分号隔开。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.offlineAeProduct&v=1
    /// </summary>
    public partial class ApiOfflineAeProductResponse : AliErrorType
    {

        /// <summary>
        /// 成功下架的商品数。
        /// 是否隐私:是
        /// 示例值:
        /// 4
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 接口调用结果。成功为true, 失败为false。
        /// 是否隐私:是
        /// 示例值:
        /// true或false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 商品编辑接口（修改任何一个商品信息时，必须将其他所有信息进行填写全面后再提交，否则会出现报错情况出现。）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.editAeProduct&v=1
    /// </summary>
    public partial class ApiEditAeProductResponse : AliErrorType
    {

        /// <summary>
        /// 商品的ID。
        /// 是否隐私:是
        /// 示例值:
        /// 124
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 编辑成功次数。对于编辑商品来说，这个参数为1。
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 接口调用结果。成功为true，失败为false。
        /// 是否隐私:是
        /// 示例值:
        /// true或false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据商品id查询单个商品的详细信息。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.findAeProductById&v=1
    /// </summary>
    public partial class ApiFindAeProductByIdResponse : AliErrorType
    {

        /// <summary>
        /// 商品的类目属性
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopAeProductPropertys")]
        public AeopAeProductPropertys[] AeopAeProductPropertys { get; set; }

        /// <summary>
        /// 商品的SKU信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopAeProductSKUs")]
        public AeopAeProductSKUs[] AeopAeProductSKUs { get; set; }

        /// <summary>
        /// 商品多媒体信息，该属性主要包含商品的视频列表
        /// 是否隐私:是
        /// 示例值:
        /// aeopAEMultimedia":{"aeopAEVideos":[{"mediaId":30994083,"posterUrl":"http://img02.taobaocdn.com/bao/uploaded/TB16e9MJVXXXXacXVXXXXXXXXXX.jpg","mediaStatus":"approved","mediaType":"video","aliMemberId":225671041}]}
        /// </summary>
        [JsonProperty("AeopAEMultimedia")]
        public AlibabaProductAeopAEMultimedia AeopAEMultimedia { get; set; }

        /// <summary>
        /// 商品分国家报价的配置
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopNationalQuoteConfiguration")]
        public AlibabaProductNationalQuoteConfiguration AeopNationalQuoteConfiguration { get; set; }

        /// <summary>
        /// 商品详描
        /// 是否隐私:是
        /// 示例值:
        /// <ul> <li> <h2 style="padding: 5px;"> product details </h2> </li></ul><div> <div>  <p> <img src="http://img01.cp.aliimg.com/bao/uploaded/i1/TB1h8QnHpXXXXbgXFXXXXXXXXXX_!!0-item_pic.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p> </div>  <div>   <p> <img src="http://img01.cp.aliimg.com/bao/uploaded/i1/1829426776/TB2VKM4cXXXXXaFXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <div>   <p> <img src="http://img01.cp.aliimg.com/bao/uploaded/i3/1829426776/TB21v3GcXXXXXaeXpXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <div>   <p> <img src="http://img01.cp.aliimg.com/bao/uploaded/i3/1829426776/TB2tkMGcXXXXXaFXpXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div>  <p> <img src="http://img01.cp.aliimg.com/kissy/1.0.0/build/imglazyload/spaceball.gif" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <div>   <p> <img align="absmiddle" src="http://img01.cp.aliimg.com/imgextra/i2/1829426776/TB2PXfDcpXXXXXvXpXXXXXXXXXX-1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http://img01.cp.aliimg.com/imgextra/i4/1829426776/TB27Y.QcXXXXXXtXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http://img01.cp.aliimg.com/imgextra/i2/1829426776/TB2L5cMcXXXXXbFXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>   <p> <img align="absmiddle" src="http://img01.cp.aliimg.com/imgextra/i2/1829426776/TB2P_7LcXXXXXciXXXXXXXXXXXX_!!1829426776.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  </div></div><div style="margin: 10px; padding-top: 10px; width: 580px;">  <ul>   <li> <h2 style="padding: 5px;"> size information </h2> </li>  </ul>  <p style="line-height: 16px;"> note : the following information is for reference only . please contact the seller to get the detailed information . </p>  <p> <img src="http://img.alibaba.com/images/cms/upload/seller/product/01size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <p> <img src="http://img.alibaba.com/images/cms/upload/seller/product/02size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p>  <p> <img src="http://img.alibaba.com/images/cms/upload/seller/product/03size_chart.jpg" alt="aeProduct.getSubject()" title="aeProduct.getSubject()" /> </p></div><p>   </p><p>   </p>
        /// </summary>
        [JsonProperty("Detail")]
        public string Detail { get; set; }

        /// <summary>
        /// 商品的备货期
        /// 是否隐私:是
        /// 示例值:
        /// 60
        /// </summary>
        [JsonProperty("DeliveryTime")]
        public int DeliveryTime { get; set; }

        /// <summary>
        /// 商品拥有者的login_id
        /// 是否隐私:是
        /// 示例值:
        /// aliqatest01
        /// </summary>
        [JsonProperty("OwnerMemberId")]
        public string OwnerMemberId { get; set; }

        /// <summary>
        /// 商品拥有者的ID
        /// 是否隐私:是
        /// 示例值:
        /// 1006680305
        /// </summary>
        [JsonProperty("OwnerMemberSeq")]
        public int OwnerMemberSeq { get; set; }

        /// <summary>
        /// 产品ID
        /// 是否隐私:是
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 产品所在类目的ID
        /// 是否隐私:是
        /// 示例值:
        /// 123456
        /// </summary>
        [JsonProperty("CategoryId")]
        public int CategoryId { get; set; }

        /// <summary>
        /// 产品的标题
        /// 是否隐私:是
        /// 示例值:
        /// knew odd
        /// </summary>
        [JsonProperty("Subject")]
        public string Subject { get; set; }

        /// <summary>
        /// 是否为打包出售方式
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("PackageType")]
        public bool PackageType { get; set; }

        /// <summary>
        /// 每包的数量
        /// 是否隐私:是
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("LotNum")]
        public int LotNum { get; set; }

        /// <summary>
        /// 产品的长度
        /// 是否隐私:是
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("PackageLength")]
        public int PackageLength { get; set; }

        /// <summary>
        /// 产品的宽度
        /// 是否隐私:是
        /// 示例值:
        /// 20
        /// </summary>
        [JsonProperty("PackageWidth")]
        public int PackageWidth { get; set; }

        /// <summary>
        /// 产品的高度
        /// 是否隐私:是
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("PackageHeight")]
        public int PackageHeight { get; set; }

        /// <summary>
        /// 产品的毛重
        /// 是否隐私:是
        /// 示例值:
        /// 40.12
        /// </summary>
        [JsonProperty("GrossWeight")]
        public string GrossWeight { get; set; }

        /// <summary>
        /// 是否支持是自定义计重
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsPackSell")]
        public bool IsPackSell { get; set; }

        /// <summary>
        /// 库存的扣减策略
        /// 是否隐私:是
        /// 示例值:
        /// place_order_withhold或payment_success_deduct
        /// </summary>
        [JsonProperty("ReduceStrategy")]
        public string ReduceStrategy { get; set; }

        /// <summary>
        /// 产品所在的产品分组列表
        /// 是否隐私:是
        /// 示例值:
        /// [1002141,10024524]
        /// </summary>
        [JsonProperty("GroupIds")]
        public System.Array GroupIds { get; set; }

        /// <summary>
        /// 产品的批发折扣
        /// 是否隐私:是
        /// 示例值:
        /// 90
        /// </summary>
        [JsonProperty("BulkDiscount")]
        public int BulkDiscount { get; set; }

        /// <summary>
        /// 产品的主图列表
        /// 是否隐私:是
        /// 示例值:
        /// http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg;http://g02.a.alicdn.com/kf/HTB1DkaWJXXXXXb6XFXXq6xXFXXXp.jpg;http://g02.a.alicdn.com/kf/HTB1pMCQJXXXXXcvXVXXq6xXFXXXm.jpg;http://g03.a.alicdn.com/kf/HTB1QhORJXXXXXbiXVXXq6xXFXXXx.jpg;http://g02.a.alicdn.com/kf/HTB1q1aLJXXXXXcfaXXXq6xXFXXXv.jpg
        /// </summary>
        [JsonProperty("ImageURLs")]
        public string ImageURLs { get; set; }

        /// <summary>
        /// 产品的单位
        /// 是否隐私:是
        /// 示例值:
        /// 100000015
        /// </summary>
        [JsonProperty("ProductUnit")]
        public int ProductUnit { get; set; }

        /// <summary>
        /// 产品的有效期
        /// 是否隐私:是
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("WsValidNum")]
        public int WsValidNum { get; set; }

        /// <summary>
        /// 产品的来源
        /// 是否隐私:是
        /// 示例值:
        /// isv
        /// </summary>
        [JsonProperty("Src")]
        public string Src { get; set; }

        /// <summary>
        /// 产品的下架日期
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WsOfflineDate")]
        public System.DateTimeOffset WsOfflineDate { get; set; }

        /// <summary>
        /// 产品的下架原因
        /// 是否隐私:是
        /// 示例值:
        /// expire_offline
        /// </summary>
        [JsonProperty("WsDisplay")]
        public string WsDisplay { get; set; }

        /// <summary>
        /// 产品的状态
        /// 是否隐私:是
        /// 示例值:
        /// onSelling
        /// </summary>
        [JsonProperty("ProductStatusType")]
        public string ProductStatusType { get; set; }

        /// <summary>
        /// 产品的货币单位。美元: USD, 卢布: RUB
        /// 是否隐私:是
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// 产品关联的运费模版ID
        /// 是否隐私:是
        /// 示例值:
        /// 12345
        /// </summary>
        [JsonProperty("FreightTemplateId")]
        public long FreightTemplateId { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AddUnit")]
        public int AddUnit { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AddWeight")]
        public string AddWeight { get; set; }

        /// <summary>
        /// 自定义计重的基本产品件数
        /// 是否隐私:是
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("BaseUnit")]
        public int BaseUnit { get; set; }

        /// <summary>
        /// 享受批发价的产品数
        /// 是否隐私:是
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("BulkOrder")]
        public int BulkOrder { get; set; }

        /// <summary>
        /// 产品所关联的产品分组ID
        /// 是否隐私:是
        /// 示例值:
        /// 10023
        /// </summary>
        [JsonProperty("GroupId")]
        public int GroupId { get; set; }

        /// <summary>
        /// 是否是动态图产品
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsImageDynamic")]
        public bool IsImageDynamic { get; set; }

        /// <summary>
        /// 单品产品的价格。
        /// 是否隐私:是
        /// 示例值:
        /// 10.23
        /// </summary>
        [JsonProperty("ProductPrice")]
        public string ProductPrice { get; set; }

        /// <summary>
        /// 产品所关联的服务模版
        /// 是否隐私:是
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("PromiseTemplateId")]
        public long PromiseTemplateId { get; set; }

        /// <summary>
        /// 产品所关联的尺码模版ID
        /// 是否隐私:是
        /// 示例值:
        /// 123
        /// </summary>
        [JsonProperty("SizechartId")]
        public long SizechartId { get; set; }

        /// <summary>
        /// 接口调用结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CouponStartDate")]
        public System.DateTimeOffset CouponStartDate { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CouponEndDate")]
        public System.DateTimeOffset CouponEndDate { get; set; }

        /// <summary>
        /// mobile detail
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("MobileDetail")]
        public string MobileDetail { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 商品列表查询接口。主账号可查询所有商品，子账号只可查询自身所属商品。
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.findProductInfoListQuery&v=1
    /// </summary>
    public partial class ApiFindProductInfoListQueryResponse : AliErrorType
    {

        /// <summary>
        /// 商品基本信息列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopAEProductDisplayDTOList")]
        public AeopAEProductDisplaySampleDTO[] AeopAEProductDisplayDTOList { get; set; }

        /// <summary>
        /// 总页数
        /// 是否隐私:是
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("TotalPage")]
        public int TotalPage { get; set; }

        /// <summary>
        /// 当前页
        /// 是否隐私:是
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 总商品数
        /// 是否隐私:是
        /// 示例值:
        /// 1021
        /// </summary>
        [JsonProperty("ProductCount")]
        public int ProductCount { get; set; }

        /// <summary>
        /// 接口调用结果
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// post产品并且返回post成功后的产品的id
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.postAeProduct&v=1
    /// </summary>
    public partial class ApiPostAeProductResponse : AliErrorType
    {

        /// <summary>
        /// 新商品的ID
        /// 是否隐私:是
        /// 示例值:
        /// 59345
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 接口调用结果。true表示发布成功，false表示发布失败。
        /// 是否隐私:是
        /// 示例值:
        /// true或false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 列出用户的运费模板
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.listFreightTemplate&v=1
    /// </summary>
    public partial class ApiListFreightTemplateResponse : AliErrorType
    {

        /// <summary>
        /// 运费模板列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopFreightTemplateDTOList")]
        public AeopFreightTemplateDTO[] AeopFreightTemplateDTOList { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// success=true表示调用成功，success=false表示调用失败
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用出错描述
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 运费计算
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.calculateFreight&v=1
    /// </summary>
    public partial class ApiCalculateFreightResponse : AliErrorType
    {

        /// <summary>
        /// 运费计算结果列表
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeopFreightCalculateResultDTOList")]
        public AeopFreightCalculateResultDTO[] AeopFreightCalculateResultDTOList { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 通过模板ID获取单个运费模板内容
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getFreightSettingByTemplateQuery&v=1
    /// </summary>
    public partial class ApiGetFreightSettingByTemplateQueryResponse : AliErrorType
    {

        /// <summary>
        /// 运费模板内容
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FreightSettingList")]
        public AeopFreightSetting[] FreightSettingList { get; set; }

        /// <summary>
        /// 运费模板Id
        /// 是否隐私:是
        /// 示例值:
        /// 100170741
        /// </summary>
        [JsonProperty("TemplateId")]
        public int TemplateId { get; set; }

        /// <summary>
        /// 运费模板名称
        /// 是否隐私:是
        /// 示例值:
        /// CPAM free
        /// </summary>
        [JsonProperty("TemplateName")]
        public string TemplateName { get; set; }

        /// <summary>
        /// 是否是默认
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Default")]
        public bool Default { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:是
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用出错信息
        /// 是否隐私:是
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 查询指定类目适合的尺码模板
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.sizeModelsRequiredForPostCat&v=1
    /// </summary>
    public partial class ApiSizeModelsRequiredForPostCatResponse : AliErrorType
    {

    }

    /// <summary>
    /// aliexpress.open
    /// 判断发布类目尺码模板是否必须
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=sizeModelIsRequiredForPostCat&v=1
    /// </summary>
    public partial class SizeModelIsRequiredForPostCatResponse : AliErrorType
    {

        /// <summary>
        /// 如果这个类目尺码表必须则为true, 否则为false.
        /// 是否隐私:是
        /// 示例值:
        /// true或者false
        /// </summary>
        [JsonProperty("True_false")]
        public bool True_false { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 根据发布类目id、父属性路径（可选）获取子属性信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=getChildAttributesResultByPostCateIdAndPath&v=1
    /// </summary>
    public partial class GetChildAttributesResultByPostCateIdAndPathResponse : AliErrorType
    {

    }

    /// <summary>
    /// aliexpress.open
    /// 获取单个类目信息
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getPostCategoryById&v=1
    /// </summary>
    public partial class ApiGetPostCategoryByIdResponse : AliErrorType
    {

        /// <summary>
        /// success:调用是否成功，可为true 或false。
        /// id:类目ID；
        /// level:类目层级；
        /// names:类目名称，13种语言；
        /// isleaf:是否是叶子节点，true是，false否。
        /// 是否隐私:是
        /// 示例值:
        /// {"aeopPostCategoryList":[
        /// 	{"id":3,
        /// 	 "level":0,
        /// 	 "names":{"zh":"服装","en":"Apparel"},
        /// 	 "isleaf":false}],
        /// "success":true}
        /// </summary>
        [JsonProperty("单个类目信息")]
        public string 单个类目信息 { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取下级类目信息,同获取单个类目信息内容相同（cateId=0获得一级类目列表）
    /// http://gw.api.alibaba.com/dev/doc/intl/api.htm?ns=aliexpress.open&n=api.getChildrenPostCategoryById&v=1
    /// </summary>
    public partial class ApiGetChildrenPostCategoryByIdResponse : AliErrorType
    {

        /// <summary>
        /// 与getPostCategoryById同
        /// 是否隐私:是
        /// 示例值:
        /// {"aeopPostCategoryList":[{"id":200002039,"level":0,"names":{"zh":"婴儿活动用品","en":"Activity & Gear"},"isleaf":false},{"id":200001330,"level":0,"names":{"zh":"婴儿护理","en":"Baby Care"},"isleaf":false},{"id":100003020,"level":0,"names":{"zh":"婴儿寝具床品","en":"Bedding"},"isleaf":false},{"id":200002038,"level":0,"names":{"zh":"婴儿喂养用品","en":"Feeding"},"isleaf":false},{"id":200002006,"level":0,"names":{"zh":"婴儿安全防护","en":"Safety"},"isleaf":false}],"success":true}
        /// </summary>
        [JsonProperty("子类目信息")]
        public string 子类目信息 { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 子订单声明发货返回信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopSellerShipmentSubTradeOrderResponse&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopSellerShipmentSubTradeOrderResponse
    {

        /// <summary>
        /// 子订单序号，从1开始
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("SubTradeOrderIndex")]
        public int SubTradeOrderIndex { get; set; }

        /// <summary>
        /// 声明发货类型：part(部分发货)，all(全部发货)
        /// 是否隐私:否
        /// 示例值:
        /// part/all
        /// </summary>
        [JsonProperty("SendType")]
        public string SendType { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// -100
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 错误提示
        /// 是否隐私:否
        /// 示例值:
        /// system error
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 包裹声明发货结果
        /// 是否隐私:否
        /// 示例值:
        /// [
        ///     {
        ///         "success": true, 
        ///         "errorMsg": "***", 
        ///         "errorCode": -1, 
        ///         "logisticsNo": "123456", 
        ///         "serviceName": "CAINIAO_STANDARD", 
        ///         "trackingWebSite": "www.baidu.com"
        ///     }
        /// ]
        /// </summary>
        [JsonProperty("ShipmentList")]
        public AlibabaAeLogisticsAeopShipmentDTO[] ShipmentList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 子订单声明请求信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopSellerShipmentSubTradeOrderRequest&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopSellerShipmentSubTradeOrderRequest
    {

        /// <summary>
        /// 子订单序号，从1开始
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("SubTradeOrderIndex")]
        public int SubTradeOrderIndex { get; set; }

        /// <summary>
        /// 包裹声明发货信息
        /// 是否隐私:否
        /// 示例值:
        /// {
        /// 						"logisticsNo":"123456", //必填
        /// 						"serviceName":"CAINIAO_STANDARD", //必填
        /// 						"trackingWebSite":"www.baidu.com" //other时必填
        /// 					}
        /// </summary>
        [JsonProperty("ShipmentList")]
        public AlibabaAeLogisticsAeopShipmentRequset[] ShipmentList { get; set; }

        /// <summary>
        /// 声明发货类型：part(部分发货)，all(全部发货)
        /// 是否隐私:否
        /// 示例值:
        /// part/all
        /// </summary>
        [JsonProperty("SendType")]
        public string SendType { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 子订单声明发货包裹请求信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopShipmentRequset&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopShipmentRequset
    {

        /// <summary>
        /// 运单号
        /// 是否隐私:否
        /// 示例值:
        /// LT123456789CN
        /// </summary>
        [JsonProperty("LogisticsNo")]
        public string LogisticsNo { get; set; }

        /// <summary>
        /// 用户选择的实际发货物流服务（物流服务key：该接口根据api.listLogisticsService列出平台所支持的物流服务 进行获取目前所支持的物流。平台支持物流服务详细一览表详见论坛链接
        /// （http://sale.aliexpress.com/seller/shipping_methods_list.htm）
        /// 是否隐私:否
        /// 示例值:
        /// CAINIAO_STANDARD
        /// </summary>
        [JsonProperty("ServiceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// 追踪网址
        /// 是否隐私:否
        /// 示例值:
        /// www.17track.com
        /// </summary>
        [JsonProperty("TrackingWebSite")]
        public string TrackingWebSite { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 子订单声明发货包裹信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopShipmentDTO&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopShipmentDTO
    {

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// -100
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 错误提示
        /// 是否隐私:否
        /// 示例值:
        /// system error
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 运单号
        /// 是否隐私:否
        /// 示例值:
        /// LT123456789CN
        /// </summary>
        [JsonProperty("LogisticsNo")]
        public string LogisticsNo { get; set; }

        /// <summary>
        /// 物流公司名称
        /// 是否隐私:否
        /// 示例值:
        /// CAINIAO_STANDARD
        /// </summary>
        [JsonProperty("ServiceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// 追踪网址
        /// 是否隐私:否
        /// 示例值:
        /// www.17track.com
        /// </summary>
        [JsonProperty("TrackingWebSite")]
        public string TrackingWebSite { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 行业各项考核项平均指标信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeIndustryAvgServiceIndexDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeIndustryAvgServiceIndexDTO
    {

        /// <summary>
        /// 发布类目id
        /// 是否隐私:否
        /// 示例值:
        /// 3280111
        /// </summary>
        [JsonProperty("PcateId")]
        public long PcateId { get; set; }

        /// <summary>
        /// 发布类目层级
        /// 是否隐私:否
        /// 示例值:
        /// 3
        /// </summary>
        [JsonProperty("PcateFlag")]
        public long PcateFlag { get; set; }

        /// <summary>
        /// 拍而不卖率
        /// 是否隐私:否
        /// 示例值:
        /// 0.39%
        /// </summary>
        [JsonProperty("BuyNotSelRate")]
        public string BuyNotSelRate { get; set; }

        /// <summary>
        /// 免责后未收到货纠纷发起率
        /// 是否隐私:否
        /// 示例值:
        /// 4.6%
        /// </summary>
        [JsonProperty("NrDisclaimerIssueRate")]
        public string NrDisclaimerIssueRate { get; set; }

        /// <summary>
        /// 免责后货不对版纠纷发起率
        /// 是否隐私:否
        /// 示例值:
        /// 0.37%
        /// </summary>
        [JsonProperty("SnadDisclaimerIssueRate")]
        public string SnadDisclaimerIssueRate { get; set; }

        /// <summary>
        /// DSR商品评价综合评分
        /// 是否隐私:否
        /// 示例值:
        /// 4.41
        /// </summary>
        [JsonProperty("DsrProdScore")]
        public string DsrProdScore { get; set; }

        /// <summary>
        /// DSR卖家服务评价综合评分
        /// 是否隐私:否
        /// 示例值:
        /// 4.55
        /// </summary>
        [JsonProperty("DsrCommunicateScore")]
        public string DsrCommunicateScore { get; set; }

        /// <summary>
        /// DSR物流服务评价综合评分（免责后）
        /// 是否隐私:否
        /// 示例值:
        /// 4.7
        /// </summary>
        [JsonProperty("DsrLogisScoreAftDisclaim")]
        public string DsrLogisScoreAftDisclaim { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 运费试算的其它费用
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopOnlineLogisticsFeeItem&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopOnlineLogisticsFeeItem
    {

        /// <summary>
        /// 费用项code
        /// 是否隐私:否
        /// 示例值:
        /// other_delivery_fee
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 费用名称
        /// 是否隐私:否
        /// 示例值:
        /// 附加费
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("Currency")]
        public string Currency { get; set; }

        /// <summary>
        /// 金额
        /// 是否隐私:否
        /// 示例值:
        /// 12.34
        /// </summary>
        [JsonProperty("Amount")]
        public double Amount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 物流面单的字段信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopWarehouseOrderPrintFieldResponse&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopWarehouseOrderPrintFieldResponse : AliErrorType
    {

        /// <summary>
        /// 是否调用成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 调用错误描述信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }

        /// <summary>
        /// 交易订单号
        /// 是否隐私:否
        /// 示例值:
        /// 3400339439434
        /// </summary>
        [JsonProperty("TradeOrderId")]
        public long TradeOrderId { get; set; }

        /// <summary>
        /// 是否打印分拣码
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("PrintPresorting")]
        public bool PrintPresorting { get; set; }

        /// <summary>
        /// presortingCode
        /// 是否隐私:否
        /// 示例值:
        /// 2032390060
        /// </summary>
        [JsonProperty("PresortingCode")]
        public string PresortingCode { get; set; }

        /// <summary>
        /// 分区码
        /// 是否隐私:否
        /// 示例值:
        /// R1
        /// </summary>
        [JsonProperty("ZoningCode")]
        public string ZoningCode { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 返回给ISV的地址列表
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.SellerAddressDTO&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsSellerAddressDTO
    {

        /// <summary>
        /// 城市
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("City")]
        public string City { get; set; }

        /// <summary>
        /// 国家
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Country")]
        public string Country { get; set; }

        /// <summary>
        /// 邮箱
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Email")]
        public string Email { get; set; }

        /// <summary>
        /// 传真
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Fax")]
        public string Fax { get; set; }

        /// <summary>
        /// 类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("MemberType")]
        public string MemberType { get; set; }

        /// <summary>
        /// 电话
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Mobile")]
        public string Mobile { get; set; }

        /// <summary>
        /// 姓名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 电话
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Phone")]
        public string Phone { get; set; }

        /// <summary>
        /// 邮编
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Postcode")]
        public string Postcode { get; set; }

        /// <summary>
        /// 省份
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Province")]
        public string Province { get; set; }

        /// <summary>
        /// 详细地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("StreetAddress")]
        public string StreetAddress { get; set; }

        /// <summary>
        /// 旺旺
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TrademanageId")]
        public string TrademanageId { get; set; }

        /// <summary>
        /// 区
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("County")]
        public string County { get; set; }

        /// <summary>
        /// 街道
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Street")]
        public string Street { get; set; }

        /// <summary>
        /// 地址id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AddressId")]
        public long AddressId { get; set; }

        /// <summary>
        /// 是否需要升级地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsNeedToUpdate")]
        public bool IsNeedToUpdate { get; set; }

        /// <summary>
        /// 是否默认地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsDefault")]
        public bool IsDefault { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 供isv调用卖家地址信息的入参
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.logistics.AeopSellerAddressQueryRequest&t=1
    /// </summary>
    public partial class AlibabaAeLogisticsAeopSellerAddressQueryRequest
    {

        /// <summary>
        /// 请求卖家地址类型:sender/pickup/refund. sender必选
        /// 是否隐私:否
        /// 示例值:
        /// ["sender","pickup","refund"]
        /// </summary>
        [JsonProperty("SellerAddressQuery")]
        public System.Array SellerAddressQuery { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 声明发货结果信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopSellerShipmentResponse&t=1
    /// </summary>
    public partial class AeopSellerShipmentResponse
    {

        /// <summary>
        /// 是否成功
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 中国地址信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=ChinaAddressItemDTO&t=1
    /// </summary>
    public partial class ChinaAddressItemDTO
    {

        /// <summary>
        /// 地址区域的ID
        /// 是否隐私:否
        /// 示例值:
        /// 10001
        /// </summary>
        [JsonProperty("AreaId")]
        public long AreaId { get; set; }

        /// <summary>
        /// 中文展示名称
        /// 是否隐私:否
        /// 示例值:
        /// 北京市
        /// </summary>
        [JsonProperty("CnDiplayName")]
        public string CnDiplayName { get; set; }

        /// <summary>
        /// 英文文展示名称
        /// 是否隐私:否
        /// 示例值:
        /// bei jing shi
        /// </summary>
        [JsonProperty("PyDiplayName")]
        public string PyDiplayName { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 地址信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AddressDTOs&t=1
    /// </summary>
    public partial class AddressDTOs
    {

        /// <summary>
        /// 收货人信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Receiver")]
        public AddressDTO Receiver { get; set; }

        /// <summary>
        /// 发货人信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Sender")]
        public AddressDTO Sender { get; set; }

        /// <summary>
        /// 揽收人信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Pickup")]
        public AddressDTO Pickup { get; set; }

        /// <summary>
        /// 退货地址信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Refund")]
        public AddressDTO Refund { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述地址信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AddressDTO&t=1
    /// </summary>
    public partial class AddressDTO
    {

        /// <summary>
        /// 城市
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("City")]
        public string City { get; set; }

        /// <summary>
        /// 国家
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Country")]
        public string Country { get; set; }

        /// <summary>
        /// 邮箱
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Email")]
        public string Email { get; set; }

        /// <summary>
        /// 传真
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Fax")]
        public string Fax { get; set; }

        /// <summary>
        /// 类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("MemberType")]
        public string MemberType { get; set; }

        /// <summary>
        /// 电话
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Mobile")]
        public string Mobile { get; set; }

        /// <summary>
        /// 姓名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 电话
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Phone")]
        public string Phone { get; set; }

        /// <summary>
        /// 邮编
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Postcode")]
        public string Postcode { get; set; }

        /// <summary>
        /// 省份
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Province")]
        public string Province { get; set; }

        /// <summary>
        /// 详细地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("StreetAddress")]
        public string StreetAddress { get; set; }

        /// <summary>
        /// 旺旺
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TrademanageId")]
        public string TrademanageId { get; set; }

        /// <summary>
        /// 区
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("County")]
        public string County { get; set; }

        /// <summary>
        /// 街道
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Street")]
        public string Street { get; set; }

        /// <summary>
        /// 卖家后台地址id,用来获取卖家详细地址信息，传入值为Long型；传入addressId后，其余字段值无效。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AddressId")]
        public long AddressId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述取消物流订单返回信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopCancelWhOrderResponse&t=1
    /// </summary>
    public partial class AeopCancelWhOrderResponse
    {

        /// <summary>
        /// 描述信息
        /// 是否隐私:否
        /// 示例值:
        /// "error in cancelWhOrder ! warehouseOrderId is null or invalid." 表示订单号不能为空；
        /// "warehouseOrderId:3080425001 ;this logistics order is not yours." 表示该订单号不是您的订单；
        /// "warehouseOrderId:3080425001 ;cancel warehouse order error, you should check the status of logistics order." 表示取消订单失败，可能是您的订单状态不符合条件；
        /// "warehouseOrderId:3080425001 is cancel processing." 表示订单取消处理中；
        /// </summary>
        [JsonProperty("Message")]
        public string Message { get; set; }

        /// <summary>
        /// 调用成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// Money
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=Money&t=1
    /// </summary>
    public partial class Money
    {

        /// <summary>
        /// 金额
        /// 是否隐私:否
        /// 示例值:
        /// 11.32
        /// </summary>
        [JsonProperty("Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// 分
        /// 是否隐私:否
        /// 示例值:
        /// 1132
        /// </summary>
        [JsonProperty("Cent")]
        public long Cent { get; set; }

        /// <summary>
        /// 币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运单号面单打印请求参数
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopWarehouseOrderPdfRequest&t=1
    /// </summary>
    public partial class AeopWarehouseOrderPdfRequest
    {

        /// <summary>
        /// 是否打印详情
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("PrintDetail")]
        public bool PrintDetail { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WarehouseOrderQueryDTOs")]
        public AeopWarehouseOrderQueryPdfRequest[] WarehouseOrderQueryDTOs { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运单号面单PDF打印查询参数
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopWarehouseOrderQueryPdfRequest&t=1
    /// </summary>
    public partial class AeopWarehouseOrderQueryPdfRequest
    {

        /// <summary>
        /// 物流订单号
        /// 是否隐私:否
        /// 示例值:
        /// 3000001
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 国际运单号
        /// 是否隐私:否
        /// 示例值:
        /// UR837927903YP
        /// </summary>
        [JsonProperty("InternationalLogisticsId")]
        public string InternationalLogisticsId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述物流追踪详细信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopTrackingDetailResult&t=1
    /// </summary>
    public partial class AeopTrackingDetailResult
    {

        /// <summary>
        /// 时间
        /// 是否隐私:否
        /// 示例值:
        /// 2015-09-15 12:12:00
        /// </summary>
        [JsonProperty("EventDate")]
        public System.DateTimeOffset EventDate { get; set; }

        /// <summary>
        /// 描述
        /// 是否隐私:否
        /// 示例值:
        /// BILLING INFORMATION RECEIVED
        /// </summary>
        [JsonProperty("EventDesc")]
        public string EventDesc { get; set; }

        /// <summary>
        /// 地址
        /// 是否隐私:否
        /// 示例值:
        /// RE
        /// </summary>
        [JsonProperty("Address")]
        public string Address { get; set; }

        /// <summary>
        /// 签收人名
        /// 是否隐私:否
        /// 示例值:
        /// Mr LI
        /// </summary>
        [JsonProperty("SignedName")]
        public string SignedName { get; set; }

        /// <summary>
        /// 状态
        /// 是否隐私:否
        /// 示例值:
        /// TR
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述物流方式
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopLogisticsServiceResult&t=1
    /// </summary>
    public partial class AeopLogisticsServiceResult
    {

        /// <summary>
        /// 物流公司
        /// 是否隐私:否
        /// 示例值:
        /// CPAM
        /// </summary>
        [JsonProperty("LogisticsCompany")]
        public string LogisticsCompany { get; set; }

        /// <summary>
        /// 展示名称
        /// 是否隐私:否
        /// 示例值:
        /// China Post Registered Air Mail
        /// </summary>
        [JsonProperty("DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// 物流服务key
        /// 是否隐私:否
        /// 示例值:
        /// CPAM
        /// </summary>
        [JsonProperty("ServiceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// 最小处理时间
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("MinProcessDay")]
        public int MinProcessDay { get; set; }

        /// <summary>
        /// 最大处理时间
        /// 是否隐私:否
        /// 示例值:
        /// 5
        /// </summary>
        [JsonProperty("MaxProcessDay")]
        public int MaxProcessDay { get; set; }

        /// <summary>
        /// 物流追踪号码校验规则，采用正则表达式
        /// 是否隐私:否
        /// 示例值:
        /// ^[a-zA-z]{2}[A-Za-z0-9]{9}[a-zA-z]{2}$
        /// </summary>
        [JsonProperty("TrackingNoRegex")]
        public string TrackingNoRegex { get; set; }

        /// <summary>
        /// 推荐显示排序
        /// 是否隐私:否
        /// 示例值:
        /// 110
        /// </summary>
        [JsonProperty("RecommendOrder")]
        public int RecommendOrder { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述物流订单信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopLogisticsWarehouseOrderResult&t=1
    /// </summary>
    public partial class AeopLogisticsWarehouseOrderResult
    {

        /// <summary>
        /// 交易订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 17939268153
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 物流订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 1100001
        /// </summary>
        [JsonProperty("OnlineLogisticsId")]
        public long OnlineLogisticsId { get; set; }

        /// <summary>
        /// 国际物流订单类型（CPAM_WLB_FPXSZ小包-物流宝仓库-深圳市递四方速递FPXSZ；CPAM_WLB_ZTOBJ小包-物流宝仓库-中通海外北京仓ZTOBJ；CPAM_WLB_CPHSH小包-物流宝仓库-上海市邮政CPHSH；
        /// 是否隐私:否
        /// 示例值:
        /// CAINIAO_STANDARD_YANWENBJ
        /// </summary>
        [JsonProperty("InternationalLogisticsType")]
        public string InternationalLogisticsType { get; set; }

        /// <summary>
        /// 物流运单号
        /// 是否隐私:否
        /// 示例值:
        /// RE700150389CN
        /// </summary>
        [JsonProperty("InternationallogisticsId")]
        public string InternationallogisticsId { get; set; }

        /// <summary>
        /// 物流订单状态:init等待分配物流单号；waitWarehouseReceiveGoods等待仓库操作；pickup_success揽收成功；pickup_fail揽收失败；warehouseRejectGoods入库失败；waitWarehouseSendGoods等待出库；out_stock_success等待发货；out_stock_fail出库失败；send_goods_fail发货失败；warehouseSendGoodsSuccess已发货；
        /// 是否隐私:否
        /// 示例值:
        /// wait_warehouse_receive_goods
        /// </summary>
        [JsonProperty("LogisticsStatus")]
        public string LogisticsStatus { get; set; }

        /// <summary>
        /// 渠道编码
        /// 是否隐私:否
        /// 示例值:
        /// 105
        /// </summary>
        [JsonProperty("ChannelCode")]
        public string ChannelCode { get; set; }

        /// <summary>
        /// LP编号
        /// 是否隐私:否
        /// 示例值:
        /// LP00012621594229
        /// </summary>
        [JsonProperty("LpNumber")]
        public string LpNumber { get; set; }

        /// <summary>
        /// 运费
        /// 是否隐私:否
        /// 示例值:
        /// {{"amount":6.77,"cent":677,"currencyCode":"CNY"}
        /// </summary>
        [JsonProperty("LogisticsFee")]
        public Money LogisticsFee { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述线上发货物流方式
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopOnlineLogisticsServiceResult&t=1
    /// </summary>
    public partial class AeopOnlineLogisticsServiceResult
    {

        /// <summary>
        /// 物流方案ID
        /// 是否隐私:否
        /// 示例值:
        /// CPAM_WLB_CPHSH
        /// </summary>
        [JsonProperty("LogisticsServiceId")]
        public string LogisticsServiceId { get; set; }

        /// <summary>
        /// 物流方案名称
        /// 是否隐私:否
        /// 示例值:
        /// 速邮宝(中邮小包)
        /// </summary>
        [JsonProperty("LogisticsServiceName")]
        public string LogisticsServiceName { get; set; }

        /// <summary>
        /// 运输时效
        /// 是否隐私:否
        /// 示例值:
        /// 15-50天
        /// </summary>
        [JsonProperty("LogisticsTimeliness")]
        public string LogisticsTimeliness { get; set; }

        /// <summary>
        /// 交货地址
        /// 是否隐私:否
        /// 示例值:
        /// 上海市徐汇区百色路1218号生产大楼一层(速卖通)
        /// </summary>
        [JsonProperty("DeliveryAddress")]
        public string DeliveryAddress { get; set; }

        /// <summary>
        /// 试算结果
        /// 是否隐私:否
        /// 示例值:
        /// CN¥87.00
        /// </summary>
        [JsonProperty("TrialResult")]
        public string TrialResult { get; set; }

        /// <summary>
        /// 仓库中文名称
        /// 是否隐私:否
        /// 示例值:
        /// 中邮北京仓
        /// </summary>
        [JsonProperty("WarehouseName")]
        public string WarehouseName { get; set; }

        /// <summary>
        /// 其它费用项
        /// 是否隐私:否
        /// 示例值:
        /// [
        ///   {
        ///     "code": "other_delivery_fee",
        ///     "name": "附加费",
        ///     "currency": "USD",
        ///     "amount": 12.34
        ///   }
        /// ]
        /// </summary>
        [JsonProperty("OtherFees")]
        public AlibabaAeLogisticsAeopOnlineLogisticsFeeItem[] OtherFees { get; set; }

        /// <summary>
        /// 是否国际快递线路
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsExpressLogisticsService")]
        public bool IsExpressLogisticsService { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述创建物流订单结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopWlCreateWarehouseOrderResultDTO&t=1
    /// </summary>
    public partial class AeopWlCreateWarehouseOrderResultDTO
    {

        /// <summary>
        /// 创建订单是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 物流订单号
        /// 是否隐私:否
        /// 示例值:
        /// 3017539175
        /// </summary>
        [JsonProperty("WarehouseOrderId")]
        public long WarehouseOrderId { get; set; }

        /// <summary>
        /// 国际运单号
        /// 是否隐私:否
        /// 示例值:
        /// LN123123123CN
        /// </summary>
        [JsonProperty("IntlTrackingNo")]
        public string IntlTrackingNo { get; set; }

        /// <summary>
        /// 交易订单来源(ESCROW)
        /// 是否隐私:否
        /// 示例值:
        /// ESCROW
        /// </summary>
        [JsonProperty("TradeOrderFrom")]
        public string TradeOrderFrom { get; set; }

        /// <summary>
        /// 关联的交易订单号
        /// 是否隐私:否
        /// 示例值:
        /// 66715700375804
        /// </summary>
        [JsonProperty("TradeOrderId")]
        public long TradeOrderId { get; set; }

        /// <summary>
        /// 外部订单号
        /// 是否隐私:否
        /// 示例值:
        /// 35631664365
        /// </summary>
        [JsonProperty("OutOrderId")]
        public long OutOrderId { get; set; }

        /// <summary>
        /// 创建时错误码(1表示无错误)
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ErrorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// 创建时错误信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDesc")]
        public string ErrorDesc { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述国内物流方式信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopWlDomesticLogisticsCompanyDTO&t=1
    /// </summary>
    public partial class AeopWlDomesticLogisticsCompanyDTO
    {

        /// <summary>
        /// 物流公司ID
        /// 是否隐私:否
        /// 示例值:
        /// 101
        /// </summary>
        [JsonProperty("CompanyId")]
        public long CompanyId { get; set; }

        /// <summary>
        /// 物流公司名称
        /// 是否隐私:否
        /// 示例值:
        /// 圆通速递
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 物流公司编码
        /// 是否隐私:否
        /// 示例值:
        /// YTO
        /// </summary>
        [JsonProperty("CompanyCode")]
        public string CompanyCode { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述物流订单申报产品信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopWlDeclareProductDTO&t=1
    /// </summary>
    public partial class AeopWlDeclareProductDTO
    {

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 类目中文名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CategoryCnDesc")]
        public string CategoryCnDesc { get; set; }

        /// <summary>
        /// 类目英文名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CategoryEnDesc")]
        public string CategoryEnDesc { get; set; }

        /// <summary>
        /// 商品数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductNum")]
        public int ProductNum { get; set; }

        /// <summary>
        /// 商品申报金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductDeclareAmount")]
        public double ProductDeclareAmount { get; set; }

        /// <summary>
        /// 商品重量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductWeight")]
        public double ProductWeight { get; set; }

        /// <summary>
        /// 是否包含电池
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsContainsBattery")]
        public byte IsContainsBattery { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ScItemId")]
        public long ScItemId { get; set; }

        /// <summary>
        /// SKU名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuValue")]
        public string SkuValue { get; set; }

        /// <summary>
        /// SKU编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ScItemName")]
        public string ScItemName { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ScItemCode")]
        public string ScItemCode { get; set; }

        /// <summary>
        /// 海关编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("HsCode")]
        public string HsCode { get; set; }

        /// <summary>
        /// 判断是否属于非液体化妆品
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsAneroidMarkup")]
        public byte IsAneroidMarkup { get; set; }

        /// <summary>
        /// 是否为纯电池
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsOnlyBattery")]
        public byte IsOnlyBattery { get; set; }

        /// <summary>
        /// 是否易碎
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsBreakable")]
        public byte IsBreakable { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 类目服务分请求参数信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeCategoryServiceScoreQueryRequest&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeCategoryServiceScoreQueryRequest
    {

        /// <summary>
        /// 卖家loginId，需要与授权用户相同
        /// 是否隐私:否
        /// 示例值:
        /// cn1231231
        /// </summary>
        [JsonProperty("LoginId")]
        public string LoginId { get; set; }

        /// <summary>
        /// 语言环境： e.g:zh_CN 简体中文, zh_TW 繁体中文, en_US 英文
        /// 是否隐私:否
        /// 示例值:
        /// zh_CN
        /// </summary>
        [JsonProperty("LocaleStr")]
        public string LocaleStr { get; set; }

        /// <summary>
        /// 类目ID
        /// 是否隐私:否
        /// 示例值:
        /// 200003274
        /// </summary>
        [JsonProperty("PcateId")]
        public long PcateId { get; set; }

        /// <summary>
        /// 类目层级，目前只支持二级和三级类目
        /// 是否隐私:否
        /// 示例值:
        /// 2,3
        /// </summary>
        [JsonProperty("PcateFlag")]
        public long PcateFlag { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 请求状态以及每日服务分相关信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeStoreServiceScoreInfoResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeStoreServiceScoreInfoResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误信息
        /// 是否隐私:否
        /// 示例值:
        /// 服务器错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 50001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AlibabaAeSellerServicescoreAeStoreServiceScoreInfoDTO Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 保存卖家店铺每日服务分相关信息，其中包括:
    /// 
    /// 计算起始时间，每日服务分计算截止时间，每日服务分，该卖家所在主营二级行业名称，该卖家所在主营二级行业平均分，各考核项（考核项名称、权重、该卖家该考核项指标、该卖家该考核项得分、该卖家所在主营二级行业指标均值，该卖家所在主营二级行业得分均值）
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeStoreServiceScoreInfoDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeStoreServiceScoreInfoDTO
    {

        /// <summary>
        /// 主赚二级类目id
        /// 是否隐私:否
        /// 示例值:
        /// 311
        /// </summary>
        [JsonProperty("PrimOprPcateLv2Id")]
        public long PrimOprPcateLv2Id { get; set; }

        /// <summary>
        /// 主赚二级类目名称
        /// 是否隐私:否
        /// 示例值:
        /// 儿童服装（2岁以上）
        /// </summary>
        [JsonProperty("PrimOprPcateLv2Name")]
        public string PrimOprPcateLv2Name { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ServiceScoreInfoDTO")]
        public AlibabaAeSellerServicescoreAeServiceScoreInfoDTO ServiceScoreInfoDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺未在48小时内发货订单列表的响应结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeLogist48hSendGoodsOrderListQueryResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeLogist48hSendGoodsOrderListQueryResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误消息
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误代码
        /// 是否隐私:否
        /// 示例值:
        /// 40001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 总订单数量
        /// 是否隐私:否
        /// 示例值:
        /// 400
        /// </summary>
        [JsonProperty("TotalSize")]
        public string TotalSize { get; set; }

        /// <summary>
        /// 本批次不良订单list，受请求参数的pageSize和currentPage影响
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("List")]
        public AlibabaAeSellerServicescoreAeLogist48hSendGoodsOrderDTO[] List { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 包括服务得分，考核指标，行业平均得分，行业平均指标等数据
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeServiceScoreInfoDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeServiceScoreInfoDTO
    {

        /// <summary>
        /// 服务分计算起始时间
        /// 是否隐私:否
        /// 示例值:
        /// 20160729
        /// </summary>
        [JsonProperty("StatStartDate")]
        public string StatStartDate { get; set; }

        /// <summary>
        /// 服务分计算截止时间
        /// 是否隐私:否
        /// 示例值:
        /// 20160828
        /// </summary>
        [JsonProperty("StatEndDate")]
        public string StatEndDate { get; set; }

        /// <summary>
        /// 考核父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 32
        /// </summary>
        [JsonProperty("CheckMordCnt")]
        public long CheckMordCnt { get; set; }

        /// <summary>
        /// 考核项权重信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WeightDTO")]
        public AlibabaAeSellerServicescoreAeServiceScoreWeightDTO WeightDTO { get; set; }

        /// <summary>
        /// 服务得分信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ScoreDTO")]
        public AlibabaAeSellerServicescoreAeServiceScoreDTO ScoreDTO { get; set; }

        /// <summary>
        /// 服务指标信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndexDTO")]
        public AlibabaAeSellerServicescoreAeServiceIndexDTO IndexDTO { get; set; }

        /// <summary>
        /// 行业平均得分
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndustryAvgScoreDTO")]
        public AlibabaAeSellerServicescoreAeIndustryAvgServiceScoreDTO IndustryAvgScoreDTO { get; set; }

        /// <summary>
        /// 行业平均指标
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndustryAvgIndexDTO")]
        public AlibabaAeSellerServicescoreAeIndustryAvgServiceIndexDTO IndustryAvgIndexDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 请求状态以及每日店铺分类目服务分相关信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeCategoryServiceScoreQueryResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeCategoryServiceScoreQueryResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误信息
        /// 是否隐私:否
        /// 示例值:
        /// 服务器错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 50001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AlibabaAeSellerServicescoreAeCategoryServiceScoreIndexSumDTO Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 请求状态以及每日店铺下商品服务分相关信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeProductServiceScoreQueryResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeProductServiceScoreQueryResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误信息
        /// 是否隐私:否
        /// 示例值:
        /// 服务器错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 50001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 服务分结果信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AlibabaAeSellerServicescoreAeProductServiceScoreIndexSumDTO Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 包括服务得分，考核指标等数据
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeProductServiceScoreIndexSumDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeProductServiceScoreIndexSumDTO
    {

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 32792839700
        /// </summary>
        [JsonProperty("ItemId")]
        public long ItemId { get; set; }

        /// <summary>
        /// 商品所在类目ID
        /// 是否隐私:否
        /// 示例值:
        /// 301
        /// </summary>
        [JsonProperty("PcateId")]
        public long PcateId { get; set; }

        /// <summary>
        /// 商品所在类目名称
        /// 是否隐私:否
        /// 示例值:
        /// 运动服及配件
        /// </summary>
        [JsonProperty("PcateName")]
        public string PcateName { get; set; }

        /// <summary>
        /// 商品所在类目层级
        /// 是否隐私:否
        /// 示例值:
        /// 2,3
        /// </summary>
        [JsonProperty("PcateFlag")]
        public long PcateFlag { get; set; }

        /// <summary>
        /// 考核父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 902
        /// </summary>
        [JsonProperty("CheckMordCnt")]
        public long CheckMordCnt { get; set; }

        /// <summary>
        /// 服务得分信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ScoreDTO")]
        public AlibabaAeSellerServicescoreAeServiceScoreDTO ScoreDTO { get; set; }

        /// <summary>
        /// 服务指标信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndexDTO")]
        public AlibabaAeSellerServicescoreAeServiceIndexDTO IndexDTO { get; set; }

        /// <summary>
        /// 所在行业平均得分信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndustryAvgScoreDTO")]
        public AlibabaAeSellerServicescoreAeIndustryAvgServiceScoreDTO IndustryAvgScoreDTO { get; set; }

        /// <summary>
        /// 所在行业平均指标信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndustryAvgIndexDTO")]
        public AlibabaAeSellerServicescoreAeIndustryAvgServiceIndexDTO IndustryAvgIndexDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 商品服务分请求参数信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeProductServiceScoreQueryRequest&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeProductServiceScoreQueryRequest
    {

        /// <summary>
        /// 卖家loginId，需要与授权用户相同
        /// 是否隐私:否
        /// 示例值:
        /// cn1231231
        /// </summary>
        [JsonProperty("LoginId")]
        public string LoginId { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 32792839700
        /// </summary>
        [JsonProperty("ItemId")]
        public long ItemId { get; set; }

        /// <summary>
        /// 语言环境： e.g:zh_CN 简体中文, zh_TW 繁体中文, en_US 英文
        /// 是否隐私:否
        /// 示例值:
        /// zh_CN
        /// </summary>
        [JsonProperty("LocaleStr")]
        public string LocaleStr { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 全店铺未在48小时内发货订单信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeLogist48hSendGoodsOrderDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeLogist48hSendGoodsOrderDTO
    {

        /// <summary>
        /// 主订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 1833178253311
        /// </summary>
        [JsonProperty("POrderId")]
        public long POrderId { get; set; }

        /// <summary>
        /// 主订单物流状态
        /// 是否隐私:否
        /// 示例值:
        /// 买家已确认收货
        /// </summary>
        [JsonProperty("ParentLogisticsStatus")]
        public string ParentLogisticsStatus { get; set; }

        /// <summary>
        /// 支付成功时间
        /// 是否隐私:否
        /// 示例值:
        /// 2017-02-09 09:22:54
        /// </summary>
        [JsonProperty("PaymentConfirmTime")]
        public string PaymentConfirmTime { get; set; }

        /// <summary>
        /// 物流服务商名称
        /// 是否隐私:否
        /// 示例值:
        /// ePacket
        /// </summary>
        [JsonProperty("LogisticsTypeName")]
        public string LogisticsTypeName { get; set; }

        /// <summary>
        /// 物流单号
        /// 是否隐私:否
        /// 示例值:
        /// LX268460615CN
        /// </summary>
        [JsonProperty("LogistNum")]
        public string LogistNum { get; set; }

        /// <summary>
        /// 物流追踪上网时间
        /// 是否隐私:否
        /// 示例值:
        /// 2017-02-10 03:36:00
        /// </summary>
        [JsonProperty("PickupDate")]
        public string PickupDate { get; set; }

        /// <summary>
        /// 发货时长
        /// 是否隐私:否
        /// 示例值:
        /// 2天22时37分
        /// </summary>
        [JsonProperty("RealSendGoodsInterval")]
        public string RealSendGoodsInterval { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺成交不卖订单列表的响应结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeNotSellOrderListQueryResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeNotSellOrderListQueryResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误消息
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误代码
        /// 是否隐私:否
        /// 示例值:
        /// 40001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 总订单数量
        /// 是否隐私:否
        /// 示例值:
        /// 400
        /// </summary>
        [JsonProperty("TotalSize")]
        public long TotalSize { get; set; }

        /// <summary>
        /// 本批次不良订单list，受请求参数的pageSize和currentPage影响
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("List")]
        public AlibabaAeSellerServicescoreAeNotSellOrderDTO[] List { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 获取全店铺纠纷提起订单列表的响应结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeIssueOrderListQueryResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeIssueOrderListQueryResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误消息
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误代码
        /// 是否隐私:否
        /// 示例值:
        /// 40001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 总订单数量
        /// 是否隐私:否
        /// 示例值:
        /// 400
        /// </summary>
        [JsonProperty("TotalSize")]
        public long TotalSize { get; set; }

        /// <summary>
        /// 本批次不良订单list，受请求参数的pageSize和currentPage影响
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("List")]
        public AlibabaAeSellerServicescoreAeIssueOrderDTO[] List { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 包括服务得分，考核指标等数据
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeCategoryServiceScoreIndexSumDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeCategoryServiceScoreIndexSumDTO
    {

        /// <summary>
        /// 类目ID
        /// 是否隐私:否
        /// 示例值:
        /// 301
        /// </summary>
        [JsonProperty("PcateId")]
        public long PcateId { get; set; }

        /// <summary>
        /// 类目名称
        /// 是否隐私:否
        /// 示例值:
        /// 运动服及配件
        /// </summary>
        [JsonProperty("PcateName")]
        public string PcateName { get; set; }

        /// <summary>
        /// 类目层级
        /// 是否隐私:否
        /// 示例值:
        /// 2,3
        /// </summary>
        [JsonProperty("PcateFlag")]
        public long PcateFlag { get; set; }

        /// <summary>
        /// 考核父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 902
        /// </summary>
        [JsonProperty("CheckMordCnt")]
        public long CheckMordCnt { get; set; }

        /// <summary>
        /// 服务得分信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ScoreDTO")]
        public AlibabaAeSellerServicescoreAeServiceScoreDTO ScoreDTO { get; set; }

        /// <summary>
        /// 服务指标信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndexDTO")]
        public AlibabaAeSellerServicescoreAeServiceIndexDTO IndexDTO { get; set; }

        /// <summary>
        /// 行业平均得分
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndustryAvgScoreDTO")]
        public AlibabaAeSellerServicescoreAeIndustryAvgServiceScoreDTO IndustryAvgScoreDTO { get; set; }

        /// <summary>
        /// 行业平均指标
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IndustryAvgIndexDTO")]
        public AlibabaAeSellerServicescoreAeIndustryAvgServiceIndexDTO IndustryAvgIndexDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 全店铺纠纷订单信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeIssueOrderDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeIssueOrderDTO
    {

        /// <summary>
        /// 主订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 1833178253311
        /// </summary>
        [JsonProperty("POrderId")]
        public long POrderId { get; set; }

        /// <summary>
        /// 金额
        /// 是否隐私:否
        /// 示例值:
        /// $ 4.16
        /// </summary>
        [JsonProperty("Amount")]
        public string Amount { get; set; }

        /// <summary>
        /// 买家
        /// 是否隐私:否
        /// 示例值:
        /// Elizaceta Garaninb
        /// </summary>
        [JsonProperty("Buyer")]
        public string Buyer { get; set; }

        /// <summary>
        /// 买家国籍
        /// 是否隐私:否
        /// 示例值:
        /// Russian Federation
        /// </summary>
        [JsonProperty("BuyerCountry")]
        public string BuyerCountry { get; set; }

        /// <summary>
        /// 发生时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-09-10 10:07:44
        /// </summary>
        [JsonProperty("DateTime")]
        public string DateTime { get; set; }

        /// <summary>
        /// 纠纷原因
        /// 是否隐私:否
        /// 示例值:
        /// 发错地址,海关扣关
        /// </summary>
        [JsonProperty("IssueReasons")]
        public string[] IssueReasons { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 全店铺成交不卖订单信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeNotSellOrderDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeNotSellOrderDTO
    {

        /// <summary>
        /// 主订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 1833178253311
        /// </summary>
        [JsonProperty("POrderId")]
        public long POrderId { get; set; }

        /// <summary>
        /// 金额
        /// 是否隐私:否
        /// 示例值:
        /// $ 4.16
        /// </summary>
        [JsonProperty("Amount")]
        public string Amount { get; set; }

        /// <summary>
        /// 买家
        /// 是否隐私:否
        /// 示例值:
        /// Elizaceta Garaninb
        /// </summary>
        [JsonProperty("Buyer")]
        public string Buyer { get; set; }

        /// <summary>
        /// 买家国籍
        /// 是否隐私:否
        /// 示例值:
        /// Russian Federation
        /// </summary>
        [JsonProperty("BuyerCountry")]
        public string BuyerCountry { get; set; }

        /// <summary>
        /// 发生时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-09-10 10:07:44
        /// </summary>
        [JsonProperty("DateTime")]
        public string DateTime { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 服务分考核项权重信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeServiceScoreWeightDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeServiceScoreWeightDTO
    {

        /// <summary>
        /// 拍而不卖率权重
        /// 是否隐私:否
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("NotSellWeight")]
        public int NotSellWeight { get; set; }

        /// <summary>
        /// NR纠纷提起率权重
        /// 是否隐私:否
        /// 示例值:
        /// 15
        /// </summary>
        [JsonProperty("NrIssueWeight")]
        public int NrIssueWeight { get; set; }

        /// <summary>
        /// SNAD纠纷提起率权重
        /// 是否隐私:否
        /// 示例值:
        /// 15
        /// </summary>
        [JsonProperty("SnadIssueWeight")]
        public int SnadIssueWeight { get; set; }

        /// <summary>
        /// DSR商品描述权重
        /// 是否隐私:否
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("DsrGoodDescriptionWeight")]
        public int DsrGoodDescriptionWeight { get; set; }

        /// <summary>
        /// DSR卖家服务权重
        /// 是否隐私:否
        /// 示例值:
        /// 15
        /// </summary>
        [JsonProperty("DsrCommunicatWeight")]
        public int DsrCommunicatWeight { get; set; }

        /// <summary>
        /// DSR物流权重
        /// 是否隐私:否
        /// 示例值:
        /// 15
        /// </summary>
        [JsonProperty("DsrLogisticsWeight")]
        public int DsrLogisticsWeight { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 低分商品list信息的响应结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeDisputeProductListQueryResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeDisputeProductListQueryResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误消息
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误代码
        /// 是否隐私:否
        /// 示例值:
        /// 40001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 总记录条数
        /// 是否隐私:否
        /// 示例值:
        /// 510
        /// </summary>
        [JsonProperty("TotalSize")]
        public long TotalSize { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("List")]
        public AlibabaAeSellerServicescoreAeDisputeProductDTO[] List { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 低分商品信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeDisputeProductDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeDisputeProductDTO
    {

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 32499870610
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品名称
        /// 是否隐私:否
        /// 示例值:
        /// 2T Kids Girl Star Glitter Dance Tutu Skirt Sequin With 3 Layers Tulle Toddler Girl Chiffon Pettiskrit
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 得分
        /// 是否隐私:否
        /// 示例值:
        /// 4.60
        /// </summary>
        [JsonProperty("Score")]
        public string Score { get; set; }

        /// <summary>
        /// 是否已下架
        /// 是否隐私:否
        /// 示例值:
        /// Y,N
        /// </summary>
        [JsonProperty("IsOffline")]
        public string IsOffline { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 不良体验的请求参数信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeDisputeExpListQueryRequest&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeDisputeExpListQueryRequest
    {

        /// <summary>
        /// 卖家loginId，需要与授权用户相同
        /// 是否隐私:否
        /// 示例值:
        /// cn1231231
        /// </summary>
        [JsonProperty("LoginId")]
        public string LoginId { get; set; }

        /// <summary>
        /// 语言环境：
        /// e.g:zh_CN 简体中文, zh_TW 繁体中文, en_US 英文
        /// 是否隐私:否
        /// 示例值:
        /// zh_CN
        /// </summary>
        [JsonProperty("LocaleStr")]
        public string LocaleStr { get; set; }

        /// <summary>
        /// 每次查询请求的数据条数，最大不能超过50
        /// 是否隐私:否
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }

        /// <summary>
        /// 当前页数
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 行业得分均值信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeIndustryAvgServiceScoreDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeIndustryAvgServiceScoreDTO
    {

        /// <summary>
        /// 发布类目id
        /// 是否隐私:否
        /// 示例值:
        /// 3280111
        /// </summary>
        [JsonProperty("PcateId")]
        public long PcateId { get; set; }

        /// <summary>
        /// 发布类目层级
        /// 是否隐私:否
        /// 示例值:
        /// 3
        /// </summary>
        [JsonProperty("PcateFlag")]
        public long PcateFlag { get; set; }

        /// <summary>
        /// 拍而不卖率得分
        /// 是否隐私:否
        /// 示例值:
        /// 4.52
        /// </summary>
        [JsonProperty("BuyNotSelScore")]
        public string BuyNotSelScore { get; set; }

        /// <summary>
        /// nr纠纷提起率得分
        /// 是否隐私:否
        /// 示例值:
        /// 3.73
        /// </summary>
        [JsonProperty("NrIssueScore")]
        public string NrIssueScore { get; set; }

        /// <summary>
        /// snad纠纷提起率得分
        /// 是否隐私:否
        /// 示例值:
        /// 10.0
        /// </summary>
        [JsonProperty("SnadIssueScore")]
        public string SnadIssueScore { get; set; }

        /// <summary>
        /// dsr商品描述得分
        /// 是否隐私:否
        /// 示例值:
        /// 15.3
        /// </summary>
        [JsonProperty("DsrProdScore")]
        public string DsrProdScore { get; set; }

        /// <summary>
        /// dsr卖家服务得分
        /// 是否隐私:否
        /// 示例值:
        /// 9.56
        /// </summary>
        [JsonProperty("DsrCommunicateScore")]
        public string DsrCommunicateScore { get; set; }

        /// <summary>
        /// dsr物流得分
        /// 是否隐私:否
        /// 示例值:
        /// 7.5
        /// </summary>
        [JsonProperty("DsrLogisScore")]
        public string DsrLogisScore { get; set; }

        /// <summary>
        /// 总得分
        /// 是否隐私:否
        /// 示例值:
        /// 75.61
        /// </summary>
        [JsonProperty("TotalScore")]
        public string TotalScore { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 服务分考核项指标信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeServiceIndexDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeServiceIndexDTO
    {

        /// <summary>
        /// 拍而不卖率
        /// 是否隐私:否
        /// 示例值:
        /// 0.39%
        /// </summary>
        [JsonProperty("BuyNotSelRate")]
        public string BuyNotSelRate { get; set; }

        /// <summary>
        /// 免责前未收到货纠纷发起率分子父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 66
        /// </summary>
        [JsonProperty("NrIssueMordCnt")]
        public long NrIssueMordCnt { get; set; }

        /// <summary>
        /// 免责后未收到货纠纷发起率分子父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 41
        /// </summary>
        [JsonProperty("NrDisclaimerIssueMordCnt")]
        public long NrDisclaimerIssueMordCnt { get; set; }

        /// <summary>
        /// 免责后未收到货纠纷发起率
        /// 是否隐私:否
        /// 示例值:
        /// 4.6%
        /// </summary>
        [JsonProperty("NrDisclaimerIssueRate")]
        public string NrDisclaimerIssueRate { get; set; }

        /// <summary>
        /// 免责前货不对版纠纷发起率分子父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("SnadIssueMordCnt")]
        public long SnadIssueMordCnt { get; set; }

        /// <summary>
        /// 免责后货不对版纠纷发起率分子父订单数
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("SnadDisclaimerIssueMordCnt")]
        public long SnadDisclaimerIssueMordCnt { get; set; }

        /// <summary>
        /// 免责后货不对版纠纷发起率
        /// 是否隐私:否
        /// 示例值:
        /// 0.37%
        /// </summary>
        [JsonProperty("SnadDisclaimerIssueRate")]
        public string SnadDisclaimerIssueRate { get; set; }

        /// <summary>
        /// DSR商品评价综合评分
        /// 是否隐私:否
        /// 示例值:
        /// 4.41
        /// </summary>
        [JsonProperty("DsrProdScore")]
        public string DsrProdScore { get; set; }

        /// <summary>
        /// DSR卖家服务评价综合评分
        /// 是否隐私:否
        /// 示例值:
        /// 4.55
        /// </summary>
        [JsonProperty("DsrCommunicateScore")]
        public string DsrCommunicateScore { get; set; }

        /// <summary>
        /// DSR物流服务评价综合评分（免责后）
        /// 是否隐私:否
        /// 示例值:
        /// 4.7
        /// </summary>
        [JsonProperty("DsrLogisScoreAftDisclaim")]
        public string DsrLogisScoreAftDisclaim { get; set; }

        /// <summary>
        /// 48小时发货率
        /// 是否隐私:否
        /// 示例值:
        /// 6.91%
        /// </summary>
        [JsonProperty("Logis48hSendGoodsRate")]
        public string Logis48hSendGoodsRate { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 服务得分信息，包括总分以及各个单项得分
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeServiceScoreDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeServiceScoreDTO
    {

        /// <summary>
        /// 服务总得分
        /// 是否隐私:否
        /// 示例值:
        /// 75.61
        /// </summary>
        [JsonProperty("TotalScore")]
        public string TotalScore { get; set; }

        /// <summary>
        /// 拍而不卖得分
        /// 是否隐私:否
        /// 示例值:
        /// 4.52
        /// </summary>
        [JsonProperty("BuyNotSelScore")]
        public string BuyNotSelScore { get; set; }

        /// <summary>
        /// 未收到货纠纷得分
        /// 是否隐私:否
        /// 示例值:
        /// 3.73
        /// </summary>
        [JsonProperty("NrIssueScore")]
        public string NrIssueScore { get; set; }

        /// <summary>
        /// 货不对版纠纷得分
        /// 是否隐私:否
        /// 示例值:
        /// 10.0
        /// </summary>
        [JsonProperty("SnadIssueScore")]
        public string SnadIssueScore { get; set; }

        /// <summary>
        /// DSR商品描述得分
        /// 是否隐私:否
        /// 示例值:
        /// 15.3
        /// </summary>
        [JsonProperty("DsrProdScore")]
        public string DsrProdScore { get; set; }

        /// <summary>
        /// DSR卖家服务得分
        /// 是否隐私:否
        /// 示例值:
        /// 9.56
        /// </summary>
        [JsonProperty("DsrCommunicateScore")]
        public string DsrCommunicateScore { get; set; }

        /// <summary>
        /// DSR物流得分
        /// 是否隐私:否
        /// 示例值:
        /// 7.5
        /// </summary>
        [JsonProperty("DsrLogisScore")]
        public string DsrLogisScore { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 用于包装服务等级信息，已经请求是否成功信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeCurrentLevelInfoResponse&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeCurrentLevelInfoResponse
    {

        /// <summary>
        /// 请求是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true,false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 请求失败的原因
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 请求失败的原因的代码
        /// 是否隐私:否
        /// 示例值:
        /// 40001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 当月服务等级的信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Result")]
        public AlibabaAeSellerServicescoreAeCurrentLevelInfoDTO Result { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 当月等级的相关信息，包括当月店铺服务等级，上月服务得分均值，预估等级，考核周期，等级的考核开始和截止时间等等
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.servicescore.AeCurrentLevelInfoDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerServicescoreAeCurrentLevelInfoDTO
    {

        /// <summary>
        /// 当月考核周期
        /// 是否隐私:否
        /// 示例值:
        /// 30或者90
        /// </summary>
        [JsonProperty("AppraisePeriod")]
        public int AppraisePeriod { get; set; }

        /// <summary>
        /// 当月服务等级
        /// (1-不考核
        /// 2-不及格
        /// 3-及格
        /// 4-良好
        /// 5-优秀)
        /// 是否隐私:否
        /// 示例值:
        /// 4
        /// </summary>
        [JsonProperty("Level")]
        public int Level { get; set; }

        /// <summary>
        /// 考核订单量
        /// 是否隐私:否
        /// 示例值:
        /// 200
        /// </summary>
        [JsonProperty("CheckMOrderCount")]
        public long CheckMOrderCount { get; set; }

        /// <summary>
        /// 上月每日服务得分均值
        /// 是否隐私:否
        /// 示例值:
        /// 98.21
        /// </summary>
        [JsonProperty("AvgScore")]
        public string AvgScore { get; set; }

        /// <summary>
        /// 当月服务等级计算起始时间
        /// 是否隐私:否
        /// 示例值:
        /// 20160729
        /// </summary>
        [JsonProperty("StartDate")]
        public string StartDate { get; set; }

        /// <summary>
        /// 当月服务等级计算截止时间
        /// 是否隐私:否
        /// 示例值:
        /// 20160828
        /// </summary>
        [JsonProperty("EndDate")]
        public string EndDate { get; set; }

        /// <summary>
        /// 下月预估等级
        /// (1-不考核
        /// 2-不及格
        /// 3-及格
        /// 4-良好
        /// 5-优秀)
        /// 是否隐私:否
        /// 示例值:
        /// 4
        /// </summary>
        [JsonProperty("PredictLevel")]
        public int PredictLevel { get; set; }

        /// <summary>
        /// 预估服务分得分均值
        /// 是否隐私:否
        /// 示例值:
        /// 96.21
        /// </summary>
        [JsonProperty("PredictAvgScore")]
        public string PredictAvgScore { get; set; }

        /// <summary>
        /// 下月等级预估计算起始时间
        /// 是否隐私:否
        /// 示例值:
        /// 20160829
        /// </summary>
        [JsonProperty("PredictStartDate")]
        public string PredictStartDate { get; set; }

        /// <summary>
        /// 下月等级预估计算截止时间
        /// 是否隐私:否
        /// 示例值:
        /// 20160917
        /// </summary>
        [JsonProperty("PredictEndDate")]
        public string PredictEndDate { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.userauth.AuthInfoDTO&t=1
    /// </summary>
    public partial class AlibabaUserauthAuthInfoDTO
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PersonAuthDTO")]
        public AlibabaUserauthPersonAuthDTO PersonAuthDTO { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeMerchantInfoDTO")]
        public AlibabaAeSellerAeMerchantInfoDTO AeMerchantInfoDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.userauth.PersonAuthDTO&t=1
    /// </summary>
    public partial class AlibabaUserauthPersonAuthDTO
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RealName")]
        public string RealName { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FirmName")]
        public string FirmName { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AliId")]
        public long AliId { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PartnerAccountType")]
        public int PartnerAccountType { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("HaveC2B")]
        public bool HaveC2B { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.userauth.AeAuthInfoDTO&t=1
    /// </summary>
    public partial class AlibabaUserauthAeAuthInfoDTO
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AePersonAuthDTO")]
        public AlibabaUserauthAePersonAuthDTO AePersonAuthDTO { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeMerchantInfoDTO")]
        public AlibabaAeSellerAeMerchantInfoDTO AeMerchantInfoDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.userauth.AePersonAuthDTO&t=1
    /// </summary>
    public partial class AlibabaUserauthAePersonAuthDTO
    {

        /// <summary>
        /// 认证状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 用户支付宝账号类型：2或空为个人账号，1为企业账号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PartnerAccountType")]
        public string PartnerAccountType { get; set; }

        /// <summary>
        /// 姓名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RealName")]
        public string RealName { get; set; }

        /// <summary>
        /// 注册号码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CertNo")]
        public string CertNo { get; set; }

        /// <summary>
        /// 证件类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CertType")]
        public string CertType { get; set; }

        /// <summary>
        /// 个人升企业用户标识
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("HaveC2B")]
        public bool HaveC2B { get; set; }

        /// <summary>
        /// 企业名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FirmName")]
        public string FirmName { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 会员的标签信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.uic.BoolTagDo&t=1
    /// </summary>
    public partial class AlibabaAeUicBoolTagDo
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AccountId")]
        public long AccountId { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag1")]
        public long Tag1 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag2")]
        public long Tag2 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag3")]
        public long Tag3 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag4")]
        public long Tag4 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag5")]
        public long Tag5 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag6")]
        public long Tag6 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Tag7")]
        public long Tag7 { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 这个结构体主要用于保存会员等级查询结果，若查询成功会返回true和买家等级；若查询失败则返回false，和错误码及对应的错误信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AccountResultDTO&t=1
    /// </summary>
    public partial class AccountResultDTO : AliErrorType
    {

        /// <summary>
        /// 查询结果是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 返回的错误信息
        /// 是否隐私:否
        /// 示例值:
        /// 权限不足，不能访问
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 10001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 会员等级
        /// 是否隐私:否
        /// 示例值:
        /// A0
        /// </summary>
        [JsonProperty("Level")]
        public string Level { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 新版纠纷返回的纠纷详情信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.issue.IssueDetailOpenApiDTO&t=1
    /// </summary>
    public partial class AlibabaIssueIssueDetailOpenApiDTO
    {

        /// <summary>
        /// 纠纷ID
        /// 是否隐私:否
        /// 示例值:
        /// 4201234566655
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 纠纷创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-08-31 23:23:23
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 子订单号
        /// 是否隐私:否
        /// 示例值:
        /// 7647012345678
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 主订单号
        /// 是否隐私:否
        /// 示例值:
        /// 7647012345678
        /// </summary>
        [JsonProperty("ParentOrderId")]
        public long ParentOrderId { get; set; }

        /// <summary>
        /// 买家memberID
        /// 是否隐私:否
        /// 示例值:
        /// 12345678
        /// </summary>
        [JsonProperty("BuyerAliid")]
        public long BuyerAliid { get; set; }

        /// <summary>
        /// 纠纷原因ID
        /// 是否隐私:否
        /// 示例值:
        /// 107
        /// </summary>
        [JsonProperty("IssueReasonId")]
        public long IssueReasonId { get; set; }

        /// <summary>
        /// 纠纷原因
        /// 是否隐私:否
        /// 示例值:
        /// 尺寸不符
        /// </summary>
        [JsonProperty("IssueReason")]
        public string IssueReason { get; set; }

        /// <summary>
        /// 纠纷状态
        /// 是否隐私:否
        /// 示例值:
        /// buyer_initiate_arbitration
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// 退款上限
        /// 是否隐私:否
        /// 示例值:
        /// 33.33RUB
        /// </summary>
        [JsonProperty("RefundMoneyMax")]
        public IssueMoney RefundMoneyMax { get; set; }

        /// <summary>
        /// 退款上限本币
        /// 是否隐私:否
        /// 示例值:
        /// 10.22USD
        /// </summary>
        [JsonProperty("RefundMoneyMaxLocal")]
        public IssueMoney RefundMoneyMaxLocal { get; set; }

        /// <summary>
        /// 产品名称
        /// 是否隐私:否
        /// 示例值:
        /// MP3
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 产品价格
        /// 是否隐私:否
        /// 示例值:
        /// 10USD
        /// </summary>
        [JsonProperty("ProductPrice")]
        public IssueMoney ProductPrice { get; set; }

        /// <summary>
        /// 买家退货物流公司
        /// 是否隐私:否
        /// 示例值:
        /// EMS
        /// </summary>
        [JsonProperty("BuyerReturnLogisticsCompany")]
        public string BuyerReturnLogisticsCompany { get; set; }

        /// <summary>
        /// 买家退货单号
        /// 是否隐私:否
        /// 示例值:
        /// 12345678
        /// </summary>
        [JsonProperty("BuyerReturnNo")]
        public string BuyerReturnNo { get; set; }

        /// <summary>
        /// 退货物流订单LP单号
        /// 是否隐私:否
        /// 示例值:
        /// LP12345678
        /// </summary>
        [JsonProperty("BuyerReturnLogisticsLpNo")]
        public string BuyerReturnLogisticsLpNo { get; set; }

        /// <summary>
        /// 买家协商方案
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerSolutionList")]
        public AlibabaIssueSolutionDTO[] BuyerSolutionList { get; set; }

        /// <summary>
        /// 卖家协商方案
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerSolutionList")]
        public AlibabaIssueSolutionDTO[] SellerSolutionList { get; set; }

        /// <summary>
        /// 平台协商方案
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PlatformSolutionList")]
        public AlibabaIssueSolutionDTO[] PlatformSolutionList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 方案实体
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.issue.SolutionDTO&t=1
    /// </summary>
    public partial class AlibabaIssueSolutionDTO
    {

        /// <summary>
        /// 方案id
        /// 是否隐私:否
        /// 示例值:
        /// 1234567890
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 方案创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-08-31 23:23:23
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 方案修改时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-08-31 23:23:23
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// 版本号
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("Version")]
        public int Version { get; set; }

        /// <summary>
        /// 买家Aliid
        /// 是否隐私:否
        /// 示例值:
        /// 12345678
        /// </summary>
        [JsonProperty("BuyerAliid")]
        public long BuyerAliid { get; set; }

        /// <summary>
        /// 卖家Aliid
        /// 是否隐私:否
        /// 示例值:
        /// 12345678
        /// </summary>
        [JsonProperty("SellerAliid")]
        public long SellerAliid { get; set; }

        /// <summary>
        /// 子订单号
        /// 是否隐私:否
        /// 示例值:
        /// 7647012345678
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 纠纷id
        /// 是否隐私:否
        /// 示例值:
        /// 40001234567856
        /// </summary>
        [JsonProperty("IssueId")]
        public long IssueId { get; set; }

        /// <summary>
        /// 退款金额本币
        /// 是否隐私:否
        /// 示例值:
        /// 23.5RUB
        /// </summary>
        [JsonProperty("RefundMoney")]
        public IssueMoney RefundMoney { get; set; }

        /// <summary>
        /// 退款金额美金
        /// 是否隐私:否
        /// 示例值:
        /// 10.12USD
        /// </summary>
        [JsonProperty("RefundMoneyPost")]
        public IssueMoney RefundMoneyPost { get; set; }

        /// <summary>
        /// 是否是默认方案
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsDefault")]
        public bool IsDefault { get; set; }

        /// <summary>
        /// 方案提出者
        /// 是否隐私:否
        /// 示例值:
        /// seller、buyer或platform
        /// </summary>
        [JsonProperty("SolutionOwner")]
        public string SolutionOwner { get; set; }

        /// <summary>
        /// 方案内容
        /// 是否隐私:否
        /// 示例值:
        /// 方案说明，或者你为什么选择此方案
        /// </summary>
        [JsonProperty("Content")]
        public string Content { get; set; }

        /// <summary>
        /// 运费承担方
        /// 是否隐私:否
        /// 示例值:
        /// seller、buyer或platform
        /// </summary>
        [JsonProperty("LogisticsFeeBearRole")]
        public string LogisticsFeeBearRole { get; set; }

        /// <summary>
        /// 方案类型
        /// 是否隐私:否
        /// 示例值:
        /// refund or return_and_refund
        /// </summary>
        [JsonProperty("SolutionType")]
        public string SolutionType { get; set; }

        /// <summary>
        /// 达成时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-08-31 23:23:23
        /// </summary>
        [JsonProperty("ReachedTime")]
        public System.DateTimeOffset ReachedTime { get; set; }

        /// <summary>
        /// 方案状态
        /// 是否隐私:否
        /// 示例值:
        /// reached
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 方案达成类型
        /// 是否隐私:否
        /// 示例值:
        /// negotiation_consensus
        /// </summary>
        [JsonProperty("ReachedType")]
        public string ReachedType { get; set; }

        /// <summary>
        /// 买家接受时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-08-31 23:23:23
        /// </summary>
        [JsonProperty("BuyerAcceptTime")]
        public System.DateTimeOffset BuyerAcceptTime { get; set; }

        /// <summary>
        /// 卖家接受时间
        /// 是否隐私:否
        /// 示例值:
        /// 2016-08-31 23:23:23
        /// </summary>
        [JsonProperty("SellerAcceptTime")]
        public System.DateTimeOffset SellerAcceptTime { get; set; }

        /// <summary>
        /// 退货运费金额(分)
        /// 是否隐私:否
        /// 示例值:
        /// 12
        /// </summary>
        [JsonProperty("LogisticsFeeAmount")]
        public long LogisticsFeeAmount { get; set; }

        /// <summary>
        /// 退货运费币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("LogisticsFeeAmountCurrency")]
        public string LogisticsFeeAmountCurrency { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 金额，包含多币种信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.issue.Money&t=1
    /// </summary>
    public partial class AlibabaIssueMoney
    {

        /// <summary>
        /// 金额，单位元
        /// 是否隐私:否
        /// 示例值:
        /// 12.31
        /// </summary>
        [JsonProperty("Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// 金额，单位分
        /// 是否隐私:否
        /// 示例值:
        /// 1231
        /// </summary>
        [JsonProperty("Cent")]
        public long Cent { get; set; }

        /// <summary>
        /// 币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// 元/分换算比例
        /// 是否隐私:否
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("CentFactor")]
        public int CentFactor { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.warranty.WarrantyInfo&t=1
    /// </summary>
    public partial class AlibabaAeWarrantyWarrantyInfo
    {

        /// <summary>
        /// 订单id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 服务商id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SupplierId")]
        public string SupplierId { get; set; }

        /// <summary>
        /// 服务购买时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyTime")]
        public string BuyTime { get; set; }

        /// <summary>
        /// 业务维一标识
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BizId")]
        public long BizId { get; set; }

        /// <summary>
        /// 服务开始时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("StartTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// 服务结束时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("EndTime")]
        public string EndTime { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 保修生效数据
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=WarrantyInforceApiDTO&t=1
    /// </summary>
    public partial class WarrantyInforceApiDTO
    {

        /// <summary>
        /// 主订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 交易快照id(已经废除)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SnapshotId")]
        public string SnapshotId { get; set; }

        /// <summary>
        /// 创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CreateTime")]
        public string CreateTime { get; set; }

        /// <summary>
        /// 业务id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BizId")]
        public long BizId { get; set; }

        /// <summary>
        /// 保修生效时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("StartTime")]
        public string StartTime { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 保修详情数据
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=WarrantyDetailApiDTO&t=1
    /// </summary>
    public partial class WarrantyDetailApiDTO
    {

        /// <summary>
        /// 主订单号
        /// 是否隐私:否
        /// 示例值:
        /// 60023440513182
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 下单日期，格式yyyy-MM-dd HH:mm:ss
        /// 是否隐私:否
        /// 示例值:
        /// 2015-10-23 11:33:22
        /// </summary>
        [JsonProperty("OrderDate")]
        public string OrderDate { get; set; }

        /// <summary>
        /// 产品名称，英文
        /// 是否隐私:否
        /// 示例值:
        /// testetst
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 商品sku，json序列化
        /// 是否隐私:否
        /// 示例值:
        /// {“color”:”red”,”size”:”s”}
        /// </summary>
        [JsonProperty("SkuInfo")]
        public string SkuInfo { get; set; }

        /// <summary>
        /// 商品快照url
        /// 是否隐私:否
        /// 示例值:
        /// http://www.aliexpress.com:1080/snapshot/3000438019.html?orderId=60023440513182
        /// </summary>
        [JsonProperty("ProductSnapshotUrl")]
        public string ProductSnapshotUrl { get; set; }

        /// <summary>
        /// 产品属性，json序列化
        /// 是否隐私:否
        /// 示例值:
        /// {"a":"aa","b":"bb"}
        /// </summary>
        [JsonProperty("ProductProperties")]
        public string ProductProperties { get; set; }

        /// <summary>
        /// 店铺url
        /// 是否隐私:否
        /// 示例值:
        /// http://www.aliexpress.com:1080/store/1335004
        /// </summary>
        [JsonProperty("StoreUrl")]
        public string StoreUrl { get; set; }

        /// <summary>
        /// 买家国家
        /// 是否隐私:否
        /// 示例值:
        /// RU
        /// </summary>
        [JsonProperty("Country")]
        public string Country { get; set; }

        /// <summary>
        /// 买家省
        /// 是否隐私:否
        /// 示例值:
        /// Idaho
        /// </summary>
        [JsonProperty("Province")]
        public string Province { get; set; }

        /// <summary>
        /// 买家城市
        /// 是否隐私:否
        /// 示例值:
        /// setest
        /// </summary>
        [JsonProperty("City")]
        public string City { get; set; }

        /// <summary>
        /// 买家街道
        /// 是否隐私:否
        /// 示例值:
        /// streetAddress
        /// </summary>
        [JsonProperty("StreetAddress")]
        public string StreetAddress { get; set; }

        /// <summary>
        /// 买家邮编
        /// 是否隐私:否
        /// 示例值:
        /// 1000453
        /// </summary>
        [JsonProperty("PostCode")]
        public string PostCode { get; set; }

        /// <summary>
        /// 产品发货时间，yyyy-MM-dd HH:mm:ss
        /// 是否隐私:否
        /// 示例值:
        /// 2015-10-25 11:33:22
        /// </summary>
        [JsonProperty("SendGoodsTime")]
        public string SendGoodsTime { get; set; }

        /// <summary>
        /// 产品收货时间，yyyy-MM-dd HH:mm:ss
        /// 是否隐私:否
        /// 示例值:
        /// 2015-11-20 11:33:22
        /// </summary>
        [JsonProperty("GetGoodsTime")]
        public string GetGoodsTime { get; set; }

        /// <summary>
        /// 产品数量
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ProductCount")]
        public int ProductCount { get; set; }

        /// <summary>
        /// 交易状态。订单状态：
        /// 1.PLACE_ORDER_SUCCESS（下单成功）2.WAIT_SELLER_SEND_GOODS（待卖家发货）3.SELLER_PART_SEND_GOODS（待卖家部分发货）4.WAIT_BUYER_ACCEPT_GOODS（等待买家收货）5.FUND_PROCESSING（资金处理中）6.FINISH（交易成功）
        /// 是否隐私:否
        /// 示例值:
        /// FINISH
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 产品金额，分
        /// 是否隐私:否
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("ProductAmount")]
        public long ProductAmount { get; set; }

        /// <summary>
        /// 保修金额，分
        /// 是否隐私:否
        /// 示例值:
        /// 23
        /// </summary>
        [JsonProperty("ServiceAmount")]
        public long ServiceAmount { get; set; }

        /// <summary>
        /// 支付币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("PayCurrency")]
        public string PayCurrency { get; set; }

        /// <summary>
        /// 订单币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("OrderCurrency")]
        public string OrderCurrency { get; set; }

        /// <summary>
        /// 汇率
        /// 是否隐私:否
        /// 示例值:
        /// 1.0000
        /// </summary>
        [JsonProperty("Exchange")]
        public double Exchange { get; set; }

        /// <summary>
        /// 保修类型.
        /// 1.warranty_common（普通保修）2.warranty_refund（只退不修）
        /// 是否隐私:否
        /// 示例值:
        /// warranty_common
        /// </summary>
        [JsonProperty("WarrantyType")]
        public string WarrantyType { get; set; }

        /// <summary>
        /// 服务开始时间，买家确认收货之前为空
        /// 是否隐私:否
        /// 示例值:
        /// 2015-11-25 11:33:22
        /// </summary>
        [JsonProperty("ServiceStartTime")]
        public string ServiceStartTime { get; set; }

        /// <summary>
        /// 服务结束时间，买家确认收货之前为空
        /// 是否隐私:否
        /// 示例值:
        /// 2016-11-24 11:33:22
        /// </summary>
        [JsonProperty("ServiceEndTime")]
        public string ServiceEndTime { get; set; }

        /// <summary>
        /// 保修状态
        /// 1.notSubmit(未提交)2.create（创建）3.cancel（取消）4.finish（完成）
        /// 是否隐私:否
        /// 示例值:
        /// create
        /// </summary>
        [JsonProperty("WarrantyStatus")]
        public string WarrantyStatus { get; set; }

        /// <summary>
        /// 买家姓名,warrantyStatus=notSubmit时为空
        /// 是否隐私:否
        /// 示例值:
        /// ctest
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 买家电话,warrantyStatus=notSubmit时为空
        /// 是否隐私:否
        /// 示例值:
        /// 1248945
        /// </summary>
        [JsonProperty("Telephone")]
        public string Telephone { get; set; }

        /// <summary>
        /// 买家保修描述,warrantyStatus=notSubmit时为空
        /// 是否隐私:否
        /// 示例值:
        /// my phone not work!
        /// </summary>
        [JsonProperty("Description")]
        public string Description { get; set; }

        /// <summary>
        /// 买家保修提交附件，逗号分隔,warrantyStatus=notSubmit时为空
        /// 是否隐私:否
        /// 示例值:
        /// aaa.jpg,b.jpg
        /// </summary>
        [JsonProperty("Attachments")]
        public string Attachments { get; set; }

        /// <summary>
        /// 交易快照id
        /// 是否隐私:否
        /// 示例值:
        /// 1111
        /// </summary>
        [JsonProperty("SnapshotId")]
        public string SnapshotId { get; set; }

        /// <summary>
        /// 产品叶子类目id
        /// 是否隐私:否
        /// 示例值:
        /// 111
        /// </summary>
        [JsonProperty("ProductLeafCategoryId")]
        public int ProductLeafCategoryId { get; set; }

        /// <summary>
        /// 商品id
        /// 是否隐私:否
        /// 示例值:
        /// 111
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 保修金额，分
        /// 是否隐私:否
        /// 示例值:
        /// 11
        /// </summary>
        [JsonProperty("WarrantyServiceAmount")]
        public long WarrantyServiceAmount { get; set; }

        /// <summary>
        /// 保修金额币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("WarrantyServiceAmountCurrency")]
        public string WarrantyServiceAmountCurrency { get; set; }

        /// <summary>
        /// 保修生效状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WarrantyInForceStatus")]
        public string WarrantyInForceStatus { get; set; }

        /// <summary>
        /// 品牌名
        /// 是否隐私:否
        /// 示例值:
        /// OUKITEL
        /// </summary>
        [JsonProperty("BrandName")]
        public string BrandName { get; set; }

        /// <summary>
        /// ROM容量
        /// 是否隐私:否
        /// 示例值:
        /// 16G
        /// </summary>
        [JsonProperty("Rom")]
        public string Rom { get; set; }

        /// <summary>
        /// RAM容量
        /// 是否隐私:否
        /// 示例值:
        /// 2G
        /// </summary>
        [JsonProperty("Ram")]
        public string Ram { get; set; }

        /// <summary>
        /// sim卡数量
        /// 是否隐私:否
        /// 示例值:
        /// Dual SIM Cards
        /// </summary>
        [JsonProperty("SimCardQuantity")]
        public string SimCardQuantity { get; set; }

        /// <summary>
        /// 屏幕大小
        /// 是否隐私:否
        /// 示例值:
        /// 5.0
        /// </summary>
        [JsonProperty("ScreenSize")]
        public string ScreenSize { get; set; }

        /// <summary>
        /// cellular
        /// 是否隐私:否
        /// 示例值:
        /// GSM/WCDMA/LTE
        /// </summary>
        [JsonProperty("Cellular")]
        public string Cellular { get; set; }

        /// <summary>
        /// 收货人姓名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RecipientName")]
        public string RecipientName { get; set; }

        /// <summary>
        /// 买家注册邮箱
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerRegisteredEmail")]
        public string BuyerRegisteredEmail { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// Dispute operation result
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueAPIResultDTO&t=1
    /// </summary>
    public partial class IssueAPIResultDTO
    {

        /// <summary>
        /// Dispute operation result
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// Errorcode,when success=false
        /// 是否隐私:否
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// Error Reason,when success=false
        /// 是否隐私:否
        /// 示例值:
        /// parameter error
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 纠纷List返回对象
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueAPIListResultDTO&t=1
    /// </summary>
    public partial class IssueAPIListResultDTO
    {

        /// <summary>
        /// 纠纷总数
        /// 是否隐私:否
        /// 示例值:
        /// 14
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 每页条数
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }

        /// <summary>
        /// 当前页数
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 纠纷数据
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("DataList")]
        public IssueAPIIssueDTO[] DataList { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:否
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 纠纷detail结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueAPIDetailResultDTO&t=1
    /// </summary>
    public partial class IssueAPIDetailResultDTO
    {

        /// <summary>
        /// 操作结果
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误码，当success=false时有值
        /// 是否隐私:否
        /// 示例值:
        /// 06100001
        /// </summary>
        [JsonProperty("Code")]
        public string Code { get; set; }

        /// <summary>
        /// 错误原因，当success=false时有值
        /// 是否隐私:否
        /// 示例值:
        /// 参数错误
        /// </summary>
        [JsonProperty("Msg")]
        public string Msg { get; set; }

        /// <summary>
        /// 纠纷详情
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Data")]
        public IssueAPIDetailDTO Data { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 纠纷详情
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueAPIDetailDTO&t=1
    /// </summary>
    public partial class IssueAPIDetailDTO
    {

        /// <summary>
        /// 交易快照
        /// 是否隐私:否
        /// 示例值:
        /// http://www.aliexpress.com/snapshot/3005612434.html?orderId=30***********804
        /// </summary>
        [JsonProperty("SnapshotUrl")]
        public string SnapshotUrl { get; set; }

        /// <summary>
        /// 纠纷详情
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueAPIIssueDTO")]
        public IssueAPIIssueDTO IssueAPIIssueDTO { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 纠纷信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueAPIIssueDTO&t=1
    /// </summary>
    public partial class IssueAPIIssueDTO
    {

        /// <summary>
        /// IssueID
        /// 是否隐私:否
        /// 示例值:
        /// 680*************804
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// Create Issue time
        /// 是否隐私:否
        /// 示例值:
        /// 20150714020749000-0700
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// Modify Issue time
        /// 是否隐私:否
        /// 示例值:
        /// 20150714021033000-0700
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// orderId
        /// 是否隐私:否
        /// 示例值:
        /// 680*************804
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// parentOrderId
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("ParentOrderId")]
        public long ParentOrderId { get; set; }

        /// <summary>
        /// IssueStatus
        /// (WAIT_SELLER_CONFIRM_REFUND  ;
        /// SELLER_REFUSE_REFUND  ;
        /// ACCEPTISSUE  ;
        /// WAIT_BUYER_SEND_GOODS  ;
        /// WAIT_SELLER_RECEIVE_GOODS  ;
        /// ARBITRATING  ;
        /// SELLER_RESPONSE_ISSUE_TIMEOUT  )
        /// 是否隐私:否
        /// 示例值:
        /// WAIT_SELLER_CONFIRM_REFUND
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// Dispute resolution process, only detail interface display.
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueProcessDTOs")]
        public IssueAPIIssueProcessDTO[] IssueProcessDTOs { get; set; }

        /// <summary>
        /// Maximum refund amount USD.
        /// 是否隐私:否
        /// 示例值:
        /// {"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}
        /// </summary>
        [JsonProperty("LimitRefundAmount")]
        public IssueMoney LimitRefundAmount { get; set; }

        /// <summary>
        /// Maximum refund amount in local currency
        /// 是否隐私:否
        /// 示例值:
        /// {"amount":0.1,"cent":10,"currencyCode":"RUB","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"RUB","symbol":"RUB"}
        /// </summary>
        [JsonProperty("LimitRefundLocalAmount")]
        public IssueMoney LimitRefundLocalAmount { get; set; }

        /// <summary>
        /// Issue reason Chinese description
        /// 是否隐私:否
        /// 示例值:
        /// T
        /// he amount ordered doesn't match
        /// </summary>
        [JsonProperty("ReasonChinese")]
        public string ReasonChinese { get; set; }

        /// <summary>
        /// Issue reason description.
        /// 是否隐私:否
        /// 示例值:
        /// Quantity shortage
        /// </summary>
        [JsonProperty("ReasonEnglish")]
        public string ReasonEnglish { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// IssueAPIIssueProcess
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueAPIIssueProcessDTO&t=1
    /// </summary>
    public partial class IssueAPIIssueProcessDTO
    {

        /// <summary>
        /// processId
        /// 是否隐私:否
        /// 示例值:
        /// 680*************804
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// Process creation time
        /// 是否隐私:否
        /// 示例值:
        /// 20150714020749000-0700
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// Process modified time
        /// 是否隐私:否
        /// 示例值:
        /// 20150714020749000-0700
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// issueId
        /// 是否隐私:否
        /// 示例值:
        /// 680*************804
        /// </summary>
        [JsonProperty("IssueId")]
        public long IssueId { get; set; }

        /// <summary>
        /// Issue reason
        /// 是否隐私:否
        /// 示例值:
        /// Color_not_as_described@3rdIssueReason
        /// </summary>
        [JsonProperty("Reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Issue description
        /// 是否隐私:否
        /// 示例值:
        /// The produit don't turn one.
        /// </summary>
        [JsonProperty("Content")]
        public string Content { get; set; }

        /// <summary>
        /// Refund amount currency
        /// 是否隐私:否
        /// 示例值:
        /// {"amount":0.1,"cent":10,"currencyCode":"RUB","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"RUB","symbol":"RUB"}
        /// </summary>
        [JsonProperty("RefundAmount")]
        public IssueMoney RefundAmount { get; set; }

        /// <summary>
        /// Refund amount USD
        /// 是否隐私:否
        /// 示例值:
        /// {"amount":0.01,"cent":1,"currencyCode":"USD","centFactor":100,"currency":{"defaultFractionDigits":2,"currencyCode":"USD","symbol":"$"}
        /// </summary>
        [JsonProperty("RefundConfirmAmount")]
        public IssueMoney RefundConfirmAmount { get; set; }

        /// <summary>
        /// actionType
        /// 是否隐私:否
        /// 示例值:
        /// seller_accept
        /// </summary>
        [JsonProperty("ActionType")]
        public string ActionType { get; set; }

        /// <summary>
        /// submitMemberType
        /// (seller ;
        /// buyer;
        /// system )
        /// 是否隐私:否
        /// 示例值:
        /// seller
        /// </summary>
        [JsonProperty("SubmitMemberType")]
        public string SubmitMemberType { get; set; }

        /// <summary>
        /// attachments
        /// 是否隐私:否
        /// 示例值:
        /// ["http://g02.a.alicdn.com/kf/UT8B.pjXtxbXXcUQpbXm.png"]}]
        /// </summary>
        [JsonProperty("Attachments")]
        public string[] Attachments { get; set; }

        /// <summary>
        /// isReceivedGoods
        /// Y
        /// N
        /// 是否隐私:否
        /// 示例值:
        /// Y
        /// </summary>
        [JsonProperty("IsReceivedGoods")]
        public string IsReceivedGoods { get; set; }

        /// <summary>
        /// videos
        /// 是否隐私:否
        /// 示例值:
        /// ["http://cloud.video.taobao.com/play/u/133146836577/p/1/e/1/t/1/d/hd/fv/27046845.swf"]}]
        /// </summary>
        [JsonProperty("Videos")]
        public string[] Videos { get; set; }

        /// <summary>
        /// issueRefundSuggestionList
        /// 是否隐私:否
        /// 示例值:
        /// {"isDefault":true,"issueMoney":{"amount":74.47,"cent":7447,"centFactor":100,"currency":{"currencyCode":"RUB","symbol":"RUB"},"currencyCode":"RUB"},"issueMoneyPost":{"amount":1.42,"cent":142,"centFactor":100,"currency":{"currencyCode":"USD","symbol":"$"},"currencyCode":"USD"},"issueRefundType":"full_amount_refund","issueReturnGoods":false}
        /// </summary>
        [JsonProperty("IssueRefundSuggestionList")]
        public IssueRefundSuggestionDTO[] IssueRefundSuggestionList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// IssueRefundSuggestion
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=IssueRefundSuggestionDTO&t=1
    /// </summary>
    public partial class IssueRefundSuggestionDTO
    {

        /// <summary>
        /// Refund amount USD
        /// 是否隐私:否
        /// 示例值:
        /// 56 USD
        /// </summary>
        [JsonProperty("IssueMoneyPost")]
        public IssueMoney IssueMoneyPost { get; set; }

        /// <summary>
        /// issueReturnGoods
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IssueReturnGoods")]
        public bool IssueReturnGoods { get; set; }

        /// <summary>
        /// isDefault
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsDefault")]
        public bool IsDefault { get; set; }

        /// <summary>
        /// issueRefundType:
        /// （1.full_amount_refund ；
        /// 2.part_amount_refund ；
        /// 3.no_amount_refund ）
        /// 是否隐私:否
        /// 示例值:
        /// full_amount_refund
        /// </summary>
        [JsonProperty("IssueRefundType")]
        public string IssueRefundType { get; set; }

        /// <summary>
        /// Refund amount currency
        /// 是否隐私:否
        /// 示例值:
        /// 1120 RUB
        /// </summary>
        [JsonProperty("IssueMoney")]
        public IssueMoney IssueMoney { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// Monetary information
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=issue.Money&t=1
    /// </summary>
    public partial class IssueMoney
    {

        /// <summary>
        /// Amount
        /// 是否隐私:否
        /// 示例值:
        /// 12.31
        /// </summary>
        [JsonProperty("Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// Amount,cent
        /// 是否隐私:否
        /// 示例值:
        /// 1231
        /// </summary>
        [JsonProperty("Cent")]
        public long Cent { get; set; }

        /// <summary>
        /// CurrencyCode
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// ratiometric conversion
        /// 是否隐私:否
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("CentFactor")]
        public int CentFactor { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 货币单位
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=issue.Currency&t=1
    /// </summary>
    public partial class IssueCurrency
    {

        /// <summary>
        /// 默认分数
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("DefaultFractionDigits")]
        public int DefaultFractionDigits { get; set; }

        /// <summary>
        /// 币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// 币种符号
        /// 是否隐私:否
        /// 示例值:
        /// $
        /// </summary>
        [JsonProperty("Symbol")]
        public string Symbol { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=limitRefundAmount&t=1
    /// </summary>
    public partial class LimitRefundAmount
    {

        /// <summary>
        /// 金额
        /// 是否隐私:否
        /// 示例值:
        /// 0.01
        /// </summary>
        [JsonProperty("Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// 分
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("Cent")]
        public int Cent { get; set; }

        /// <summary>
        /// 货币值
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// 元/分换算比例
        /// 是否隐私:否
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("CentFactor")]
        public int CentFactor { get; set; }

        /// <summary>
        /// 币种
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Currency")]
        public Currency Currency { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// AppsFlyer广告效果数据
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.message.AppsFlyerPerfDto&t=1
    /// </summary>
    public partial class AlibabaMessageAppsFlyerPerfDto
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Media_source")]
        public string Media_source { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_channel")]
        public string Af_channel { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Campaign")]
        public string Campaign { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Fb_campaign_name")]
        public string Fb_campaign_name { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_adset")]
        public string Af_adset { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_adset_id")]
        public string Af_adset_id { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Fb_adgroup_id")]
        public string Fb_adgroup_id { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Fb_adgroup_name")]
        public string Fb_adgroup_name { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_keywords")]
        public string Af_keywords { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_ad")]
        public string Af_ad { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_ad_id")]
        public string Af_ad_id { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_siteid")]
        public string Af_siteid { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Attributed_touch_type")]
        public string Attributed_touch_type { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Attributed_touch_time")]
        public string Attributed_touch_time { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Af_cost_value")]
        public string Af_cost_value { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 分页获取消息列表
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=PushMessagePage&t=1
    /// </summary>
    public partial class PushMessagePage
    {

        /// <summary>
        /// 消息总数
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalCount")]
        public int TotalCount { get; set; }

        /// <summary>
        /// 分页的消息数据列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Datas")]
        public PushMessage[] Datas { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 推送消息的统一的格式
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=PushMessage&t=1
    /// </summary>
    public partial class PushMessage
    {

        /// <summary>
        /// 消息唯一id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("MsgId")]
        public long MsgId { get; set; }

        /// <summary>
        /// 消息类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Type")]
        public string Type { get; set; }

        /// <summary>
        /// 消息关联的用户memberId
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("UserInfo")]
        public string UserInfo { get; set; }

        /// <summary>
        /// 消息内容
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Data")]
        public string Data { get; set; }

        /// <summary>
        /// 消息创建的时间戳，单位毫秒
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtBorn")]
        public long GmtBorn { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 返回值包装类
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.merchant.ResultModel&t=1
    /// </summary>
    public partial class AlibabaAeSellerMerchantResultModel : AliErrorType
    {

        /// <summary>
        /// 异常描述
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ExceptionDesc")]
        public string ExceptionDesc { get; set; }

        /// <summary>
        /// 成功状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Successed")]
        public bool Successed { get; set; }

        /// <summary>
        /// 返回值
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReturnValue")]
        public AlibabaAeSellerAeMerchantInfoDTO ReturnValue { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 商家详细信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.seller.AeMerchantInfoDTO&t=1
    /// </summary>
    public partial class AlibabaAeSellerAeMerchantInfoDTO
    {

        /// <summary>
        /// 国家
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Country")]
        public string Country { get; set; }

        /// <summary>
        /// 失效日期
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ExpiredTime")]
        public System.DateTimeOffset ExpiredTime { get; set; }

        /// <summary>
        /// 数据
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Fields")]
        public string Fields { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 唯一编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("No")]
        public string No { get; set; }

        /// <summary>
        /// 状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Type")]
        public string Type { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=QueryListResult&t=1
    /// </summary>
    public partial class QueryListResult
    {

        /// <summary>
        /// 是否成功
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 601
        /// </summary>
        [JsonProperty("RetCode")]
        public int RetCode { get; set; }

        /// <summary>
        /// 详细说明
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }

        /// <summary>
        /// 返回的记录数。每条记录一个hashmap. map中的key是字段名称，value是就值。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RetList")]
        public System.Array RetList { get; set; }

        /// <summary>
        /// 总记录数。单个分区内
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalNum")]
        public long TotalNum { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 公告接口返回结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAnouncementResult&t=1
    /// </summary>
    public partial class AeopAnouncementResult
    {

        /// <summary>
        /// 总数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 是否成功
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }

        /// <summary>
        /// 错误编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AnouncementList")]
        public AeopAnouncementDTO AnouncementList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 公告信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAnouncementDTO&t=1
    /// </summary>
    public partial class AeopAnouncementDTO
    {

        /// <summary>
        /// 公告id
        /// 是否隐私:否
        /// 示例值:
        /// 12222222
        /// </summary>
        [JsonProperty("AnouncementId")]
        public string AnouncementId { get; set; }

        /// <summary>
        /// 业务类型
        /// 是否隐私:否
        /// 示例值:
        /// 放款
        /// </summary>
        [JsonProperty("BusinessType")]
        public string BusinessType { get; set; }

        /// <summary>
        /// 公告时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CreateDatetime")]
        public string CreateDatetime { get; set; }

        /// <summary>
        /// 公告内容
        /// 是否隐私:否
        /// 示例值:
        /// 1202速卖通平台将开展大促。。。。。
        /// </summary>
        [JsonProperty("Content")]
        public string Content { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 平台消息查询参数
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAnouncementQuery&t=1
    /// </summary>
    public partial class AeopAnouncementQuery
    {

        /// <summary>
        /// 公告id，一次只能查询一个
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Anouncement")]
        public string Anouncement { get; set; }

        /// <summary>
        /// 公告创建时间起始值，格式: mm/dd/yyyy hh:mm:ss,如10/08/2013 00:00:00
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PublicDatetimeStart")]
        public string PublicDatetimeStart { get; set; }

        /// <summary>
        /// 公告创建截止值，格式: mm/dd/yyyy hh:mm:ss,如10/09/2013 00:00:00
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PublicDatetimeEnd")]
        public string PublicDatetimeEnd { get; set; }

        /// <summary>
        /// 当前页码。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Page")]
        public int Page { get; set; }

        /// <summary>
        /// 每页个数，最大50。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 站内信/订单留言详情结果集
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=DetailResult&t=1
    /// </summary>
    public partial class DetailResult
    {

        /// <summary>
        /// 消息ID
        /// 是否隐私:否
        /// 示例值:
        /// 11333443434
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 11333443434
        /// </summary>
        [JsonProperty("GmtCreate")]
        public long GmtCreate { get; set; }

        /// <summary>
        /// 发送者名字
        /// 是否隐私:否
        /// 示例值:
        /// jack.li
        /// </summary>
        [JsonProperty("SenderName")]
        public string SenderName { get; set; }

        /// <summary>
        /// 消息类别(product/order/member/store)不同的消息类别，typeId为相应的值，如messageType为product,typeId为productId,对应summary中有相应的附属性信，如果为product,则有产品相关的信息
        /// 是否隐私:否
        /// 示例值:
        /// product
        /// </summary>
        [JsonProperty("MessageType")]
        public string MessageType { get; set; }

        /// <summary>
        /// 消息详情
        /// 是否隐私:否
        /// 示例值:
        /// hello
        /// </summary>
        [JsonProperty("Content")]
        public string Content { get; set; }

        /// <summary>
        /// 相关类型ID
        /// 是否隐私:否
        /// 示例值:
        /// 345555
        /// </summary>
        [JsonProperty("TypeId")]
        public long TypeId { get; set; }

        /// <summary>
        /// 图片地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FilePath")]
        public FilePath[] FilePath { get; set; }

        /// <summary>
        /// 附属信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Summary")]
        public Summary Summary { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 站内信/订单留言图片
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=FilePath&t=1
    /// </summary>
    public partial class FilePath
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SPath")]
        public string SPath { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("MPath")]
        public string MPath { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LPath")]
        public string LPath { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 站内信/订单留言附属信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=Summary&t=1
    /// </summary>
    public partial class Summary
    {

        /// <summary>
        /// 产品名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 产品图片链接
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductImageUrl")]
        public string ProductImageUrl { get; set; }

        /// <summary>
        /// 产品链接
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductDetailUrl")]
        public string ProductDetailUrl { get; set; }

        /// <summary>
        /// 订单链接
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderUrl")]
        public string OrderUrl { get; set; }

        /// <summary>
        /// 消息发送者名字
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderName")]
        public string SenderName { get; set; }

        /// <summary>
        /// 消息接收者名字
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiverName")]
        public string ReceiverName { get; set; }

        /// <summary>
        /// 消息发送者账号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderLoginId")]
        public string SenderLoginId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 更新插入操作返回结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=EcResult&t=1
    /// </summary>
    public partial class EcResult : AliErrorType
    {

        /// <summary>
        /// 是否成功
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 9001
        /// </summary>
        [JsonProperty("ErrorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// 错误信息
        /// 是否隐私:否
        /// 示例值:
        /// 参数有误
        /// </summary>
        [JsonProperty("ErrorMsg")]
        public string ErrorMsg { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 站内信/订单留言列表结果集
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=RelationResult&t=1
    /// </summary>
    public partial class RelationResult
    {

        /// <summary>
        /// 未读数
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("UnreadCount")]
        public long UnreadCount { get; set; }

        /// <summary>
        /// 通道ID，即关系ID(订单留言为订单号，站内信为站内信的关系ID)
        /// 是否隐私:否
        /// 示例值:
        /// 2234455
        /// </summary>
        [JsonProperty("ChannelId")]
        public string ChannelId { get; set; }

        /// <summary>
        /// 最后一条消息ID
        /// 是否隐私:否
        /// 示例值:
        /// 2455566
        /// </summary>
        [JsonProperty("LastMessageId")]
        public long LastMessageId { get; set; }

        /// <summary>
        /// 未读状态(0未读1已读)
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("ReadStat")]
        public string ReadStat { get; set; }

        /// <summary>
        /// 最后一条消息内容
        /// 是否隐私:否
        /// 示例值:
        /// hello
        /// </summary>
        [JsonProperty("LastMessageContent")]
        public string LastMessageContent { get; set; }

        /// <summary>
        /// 最后一条消息是否自己这边发送(true是，false否)
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("LastMessageIsOwn")]
        public bool LastMessageIsOwn { get; set; }

        /// <summary>
        /// 消息所属账号(主账号查询默认包含子账号的信息，如果属于子账号，这里有子账号的名字)
        /// 是否隐私:否
        /// 示例值:
        /// jack.liu
        /// </summary>
        [JsonProperty("ChildName")]
        public string ChildName { get; set; }

        /// <summary>
        /// 最后一条消息时间
        /// 是否隐私:否
        /// 示例值:
        /// 33443344455
        /// </summary>
        [JsonProperty("MessageTime")]
        public long MessageTime { get; set; }

        /// <summary>
        /// 消息所属账号(主账号查询默认包含子账号的信息，如果属于子账号，这里有子账号的ID)
        /// 是否隐私:否
        /// 示例值:
        /// 6645774
        /// </summary>
        [JsonProperty("ChildId")]
        public long ChildId { get; set; }

        /// <summary>
        /// 与当前卖家或子账号建立关系的买家名字
        /// 是否隐私:否
        /// 示例值:
        /// jack.ma
        /// </summary>
        [JsonProperty("OtherName")]
        public string OtherName { get; set; }

        /// <summary>
        /// 与当前卖家或子账号建立关系的买家账号
        /// 是否隐私:否
        /// 示例值:
        /// us3333
        /// </summary>
        [JsonProperty("OtherLoginId")]
        public string OtherLoginId { get; set; }

        /// <summary>
        /// 处理状态(0未处理,1已处理)
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("DealStat")]
        public string DealStat { get; set; }

        /// <summary>
        /// 标签值(0,1,2,3,4,5)依次表示为白，红，橙，绿，蓝，紫
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("Rank")]
        public string Rank { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=FundLoanListVO&t=1
    /// </summary>
    public partial class FundLoanListVO : AliErrorType
    {

        /// <summary>
        /// 总条数
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 订单放款列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderList")]
        public OrderLoanItemVO[] OrderList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OrderLoanItemVO&t=1
    /// </summary>
    public partial class OrderLoanItemVO
    {

        /// <summary>
        /// 订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 订单状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 子订单元素列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SonOrderList")]
        public SonOrderLoanVO[] SonOrderList { get; set; }

        /// <summary>
        /// 总金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AmountTotal")]
        public TradeMoney AmountTotal { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=SonOrderLoanVO&t=1
    /// </summary>
    public partial class SonOrderLoanVO
    {

        /// <summary>
        /// 子订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildOrderId")]
        public long ChildOrderId { get; set; }

        /// <summary>
        /// 放款状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanStatus")]
        public string LoanStatus { get; set; }

        /// <summary>
        /// 放款时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReleasedDatetime")]
        public System.DateTimeOffset ReleasedDatetime { get; set; }

        /// <summary>
        /// 待放款原因
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WaitLoanReson")]
        public string WaitLoanReson { get; set; }

        /// <summary>
        /// 联盟佣金
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AffiliateCommission")]
        public TradeMoney AffiliateCommission { get; set; }

        /// <summary>
        /// 放款金额(已废弃)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Amount")]
        public TradeMoney Amount { get; set; }

        /// <summary>
        /// 手续费
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("EscrowFee")]
        public TradeMoney EscrowFee { get; set; }

        /// <summary>
        /// 放款金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanAmount")]
        public TradeMoney LoanAmount { get; set; }

        /// <summary>
        /// 实际放款出账金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RealLoanAmount")]
        public TradeMoney RealLoanAmount { get; set; }

        /// <summary>
        /// 实际退款出账金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RealRefundAmount")]
        public TradeMoney RealRefundAmount { get; set; }

        /// <summary>
        /// 退款金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RefundAmount")]
        public TradeMoney RefundAmount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OrderBaseInfo&t=1
    /// </summary>
    public partial class OrderBaseInfo : AliErrorType
    {

        /// <summary>
        /// 冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// NO_FROZEN
        /// </summary>
        [JsonProperty("FrozenStatus")]
        public string FrozenStatus { get; set; }

        /// <summary>
        /// 资金状态(NOT_PAY,未付款； PAY_SUCCESS,付款成功； WAIT_SELLER_CHECK，卖家验款)
        /// 是否隐私:否
        /// 示例值:
        /// NOT_PAY
        /// </summary>
        [JsonProperty("FundStatus")]
        public string FundStatus { get; set; }

        /// <summary>
        /// 创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public string GmtModified { get; set; }

        /// <summary>
        /// 纠纷状态("NO_ISSUE"无纠纷；"IN_ISSUE"纠纷中；“END_ISSUE”纠纷结束。) frozenStatus:冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// NO_ISSUE
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// 订单放款状态：wait_loan 未放款，loan_ok已放款。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanStatus")]
        public string LoanStatus { get; set; }

        /// <summary>
        /// 物流状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsStatus")]
        public string LogisticsStatus { get; set; }

        /// <summary>
        /// 订单状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 卖家ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerOperatorLoginId")]
        public string SellerOperatorLoginId { get; set; }

        /// <summary>
        /// 卖家全名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerSignerFullname")]
        public string SellerSignerFullname { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OrderTradeInfo&t=1
    /// </summary>
    public partial class OrderTradeInfo : AliErrorType
    {

        /// <summary>
        /// 订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 订单初始金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InitOderAmount")]
        public string InitOderAmount { get; set; }

        /// <summary>
        /// 订单金额货币单位
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("InitOderAmountCur")]
        public string InitOderAmountCur { get; set; }

        /// <summary>
        /// 是否手机订单
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("IsPhone")]
        public bool IsPhone { get; set; }

        /// <summary>
        /// 物流金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsAmount")]
        public string LogisticsAmount { get; set; }

        /// <summary>
        /// 物流金额货币单位
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("LogisticsAmountCur")]
        public string LogisticsAmountCur { get; set; }

        /// <summary>
        /// 订单金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderAmount")]
        public string OrderAmount { get; set; }

        /// <summary>
        /// 货币单位
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("OrderAmountCur")]
        public string OrderAmountCur { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildOrderList")]
        public ChildOrderDTO[] ChildOrderList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=ChildOrderDTO&t=1
    /// </summary>
    public partial class ChildOrderDTO
    {

        /// <summary>
        /// 冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// NO_FROZEN
        /// </summary>
        [JsonProperty("FrozenStatus")]
        public string FrozenStatus { get; set; }

        /// <summary>
        /// 资金状态(NOT_PAY,未付款； PAY_SUCCESS,付款成功； WAIT_SELLER_CHECK，卖家验款)
        /// 是否隐私:否
        /// 示例值:
        /// NOT_PAY
        /// </summary>
        [JsonProperty("FundStatus")]
        public string FundStatus { get; set; }

        /// <summary>
        /// 子订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 子订单初始金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InitOrderAmt")]
        public string InitOrderAmt { get; set; }

        /// <summary>
        /// 货币单位
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("InitOrderAmtCur")]
        public string InitOrderAmtCur { get; set; }

        /// <summary>
        /// 纠纷状态("NO_ISSUE"无纠纷；"IN_ISSUE"纠纷中；“END_ISSUE”纠纷结束。) frozenStatus:冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// NO_ISSUE
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// lot数量
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("LotNum")]
        public int LotNum { get; set; }

        /// <summary>
        /// 子订单状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 商品属性
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductAttributes")]
        public string ProductAttributes { get; set; }

        /// <summary>
        /// 商品数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductCount")]
        public int ProductCount { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 商品价格
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductPrice")]
        public string ProductPrice { get; set; }

        /// <summary>
        /// 货币单位
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("ProductPriceCur")]
        public string ProductPriceCur { get; set; }

        /// <summary>
        /// 产品规格
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductStandard")]
        public string ProductStandard { get; set; }

        /// <summary>
        /// 产品单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductUnit")]
        public string ProductUnit { get; set; }

        /// <summary>
        /// SKU编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OperationResult&t=1
    /// </summary>
    public partial class OperationResult : AliErrorType
    {

        /// <summary>
        /// 错误码：100 无此订单,601 帐号无权限,200 业务数据错误，无对应的业务数据,201 业务数据错误无法执行此操作
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// 详细说明
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }

        /// <summary>
        /// 是否成功true/false
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=RequestLoanResult&t=1
    /// </summary>
    public partial class RequestLoanResult : AliErrorType
    {

        /// <summary>
        /// 返回的备注信息，当为上传附件时 ，memo就是附件的路径
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }

        /// <summary>
        /// 错误码，200表示成功
        /// 是否隐私:否
        /// 示例值:
        /// 200
        /// </summary>
        [JsonProperty("ResultCode")]
        public int ResultCode { get; set; }

        /// <summary>
        /// 请求放款是否成功
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=SimpleOrderListVO&t=1
    /// </summary>
    public partial class SimpleOrderListVO : AliErrorType
    {

        /// <summary>
        /// 总数量(SC订单不包含在结果中）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 订单数组
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderList")]
        public SimpleOrderItemVO[] OrderList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=SimpleOrderItemVO&t=1
    /// </summary>
    public partial class SimpleOrderItemVO
    {

        /// <summary>
        /// OrderType
        /// 是否隐私:否
        /// 示例值:
        /// AE_COMMON
        /// </summary>
        [JsonProperty("BizType")]
        public string BizType { get; set; }

        /// <summary>
        /// Transaction creation time
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public string GmtCreate { get; set; }

        /// <summary>
        /// Transaction modified time
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public string GmtModified { get; set; }

        /// <summary>
        /// Memo
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }

        /// <summary>
        /// OrderID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// OrderStatus
        /// 是否隐私:否
        /// 示例值:
        /// PLACE_ORDER_SUCCESS
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// Timeout left time
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TimeoutLeftTime")]
        public long TimeoutLeftTime { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductList")]
        public SimpleOrderProductVO[] ProductList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenOrderDetailDTO&t=1
    /// </summary>
    public partial class TpOpenOrderDetailDTO : AliErrorType
    {

        /// <summary>
        /// 买家全名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerSignerFullname")]
        public string BuyerSignerFullname { get; set; }

        /// <summary>
        /// 买家账号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Buyerloginid")]
        public string Buyerloginid { get; set; }

        /// <summary>
        /// 冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FrozenStatus")]
        public string FrozenStatus { get; set; }

        /// <summary>
        /// 资金状态(NOT_PAY,未付款； PAY_SUCCESS,付款成功； WAIT_SELLER_CHECK，卖家验款)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FundStatus")]
        public string FundStatus { get; set; }

        /// <summary>
        /// 订单创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset? GmtModified { get; set; }

        /// <summary>
        /// gmtPaySuccess:支付成功时间（与订单列表中gmtPayTime字段意义相同）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtPaySuccess")]
        public System.DateTimeOffset? GmtPaySuccess { get; set; }

        /// <summary>
        /// 交易结束时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtTradeEnd")]
        public System.DateTimeOffset? GmtTradeEnd { get; set; }

        /// <summary>
        /// 主订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 是否手机订单
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsPhone")]
        public bool IsPhone { get; set; }

        /// <summary>
        /// 纠纷状态("NO_ISSUE"无纠纷；"IN_ISSUE"纠纷中；“END_ISSUE”纠纷结束。)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// 放款状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanStatus")]
        public string LoanStatus { get; set; }

        /// <summary>
        /// 物流状态（"WAIT_SELLER_SEND_GOODS"等待卖家发货;"SELLER_SEND_PART_GOODS"卖家部分发货；"SELLER_SEND_GOODS"卖家已发货；"BUYER_ACCEPT_GOODS"买家已确认收货；"NO_LOGISTICS"没有物流流转信息）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsStatus")]
        public string LogisticsStatus { get; set; }

        /// <summary>
        /// 订单状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 付款方式 （migs信用卡支付走人民币渠道； migs102MasterCard支付并且走人民币渠道； migs101Visa支付并且走人民币渠道； pp101 PayPal； mb MoneyBooker渠道； tt101 Bank Transfer支付； wu101 West Union支付； wp101 Visa走美金渠道的支付； wp102 Mastercard 走美金渠道的支付； qw101 QIWI支付； cybs101 Visa走CYBS渠道的支付； cybs102 Mastercard 走CYBS渠道的支付； wm101 WebMoney支付； ebanx101 巴西Beloto支付 ；）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PaymentType")]
        public string PaymentType { get; set; }

        /// <summary>
        /// 卖家子帐号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerOperatorAliidloginid")]
        public string SellerOperatorAliidloginid { get; set; }

        /// <summary>
        /// 负责人loginId
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerOperatorLoginId")]
        public string SellerOperatorLoginId { get; set; }

        /// <summary>
        /// 卖家名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerSignerFullname")]
        public string SellerSignerFullname { get; set; }

        /// <summary>
        /// 买家信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerInfo")]
        public TpOpenPersonDTO BuyerInfo { get; set; }

        /// <summary>
        /// 商品信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildOrderExtInfoList")]
        public TpOpenOrderProductInfoDTO[] ChildOrderExtInfoList { get; set; }

        /// <summary>
        /// 子订单列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildOrderList")]
        public TpOpenChildOrderDTO[] ChildOrderList { get; set; }

        /// <summary>
        /// 手续费
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("EscrowFee")]
        public TradeMoney EscrowFee { get; set; }

        /// <summary>
        /// 商品总金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InitOderAmount")]
        public TradeMoney InitOderAmount { get; set; }

        /// <summary>
        /// 纠纷信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueInfo")]
        public TpOpenIssueInfoDTO IssueInfo { get; set; }

        /// <summary>
        /// 放款信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanInfo")]
        public TpOpenLoanInfoDTO LoanInfo { get; set; }

        /// <summary>
        /// 物流信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticInfoList")]
        public TpOpenLogisticInfoDTO[] LogisticInfoList { get; set; }

        /// <summary>
        /// 物流费用
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsAmount")]
        public TradeMoney LogisticsAmount { get; set; }

        /// <summary>
        /// 操作日志列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OprLogDtoList")]
        public TpOperationLogDTO[] OprLogDtoList { get; set; }

        /// <summary>
        /// 订单金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderAmount")]
        public TradeMoney OrderAmount { get; set; }

        /// <summary>
        /// 留言信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderMsgList")]
        public TpOpenOrderMsgDTO[] OrderMsgList { get; set; }

        /// <summary>
        /// 收货地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiptAddress")]
        public TpOpenAddressDTO ReceiptAddress { get; set; }

        /// <summary>
        /// 退款信息
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RefundInfo")]
        public TpOpenRefundInfoDTO RefundInfo { get; set; }

        /// <summary>
        /// 买家备注
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=SimpleOrderProductVO&t=1
    /// </summary>
    public partial class SimpleOrderProductVO
    {

        /// <summary>
        /// 子订单号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildId")]
        public long ChildId { get; set; }

        /// <summary>
        /// 备货时间
        /// 是否隐私:否
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("GoodsPrepareTime")]
        public int GoodsPrepareTime { get; set; }

        /// <summary>
        /// 是否支持假一赔三
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("MoneyBack3x")]
        public bool MoneyBack3x { get; set; }

        /// <summary>
        /// 商品数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductCount")]
        public int ProductCount { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品主图Url
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductImgUrl")]
        public string ProductImgUrl { get; set; }

        /// <summary>
        /// 商品名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 快照Url
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductSnapUrl")]
        public string ProductSnapUrl { get; set; }

        /// <summary>
        /// 商品单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductUnit")]
        public string ProductUnit { get; set; }

        /// <summary>
        /// 商品单价
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductUnitPrice")]
        public string ProductUnitPrice { get; set; }

        /// <summary>
        /// 商品货币名称
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("ProductUnitPriceCur")]
        public string ProductUnitPriceCur { get; set; }

        /// <summary>
        /// 商品编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }

        /// <summary>
        /// 子订单状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SonOrderStatus")]
        public string SonOrderStatus { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenChildOrderDTO&t=1
    /// </summary>
    public partial class TpOpenChildOrderDTO
    {

        /// <summary>
        /// 冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// NO_FROZEN
        /// </summary>
        [JsonProperty("FrozenStatus")]
        public string FrozenStatus { get; set; }

        /// <summary>
        /// 资金状态(NOT_PAY,未付款； PAY_SUCCESS,付款成功； WAIT_SELLER_CHECK，卖家验款)
        /// 是否隐私:否
        /// 示例值:
        /// NOT_PAY
        /// </summary>
        [JsonProperty("FundStatus")]
        public string FundStatus { get; set; }

        /// <summary>
        /// 子订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 纠纷状态("NO_ISSUE"无纠纷；"IN_ISSUE"纠纷中；“END_ISSUE”纠纷结束。) frozenStatus:冻结状态("NO_FROZEN"无冻结；"IN_FROZEN"冻结中；)
        /// 是否隐私:否
        /// 示例值:
        /// NO_ISSUE
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// lot数量
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("LotNum")]
        public int LotNum { get; set; }

        /// <summary>
        /// 子订单状态
        /// 是否隐私:否
        /// 示例值:
        /// PLACE_ORDER_SUCCESS
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 商品属性
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductAttributes")]
        public string ProductAttributes { get; set; }

        /// <summary>
        /// 商品数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductCount")]
        public int ProductCount { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品标题
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 产品规格
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductStandard")]
        public string ProductStandard { get; set; }

        /// <summary>
        /// 产品单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductUnit")]
        public string ProductUnit { get; set; }

        /// <summary>
        /// SKU编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }

        /// <summary>
        /// 订单原始总金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InitOrderAmt")]
        public TradeMoney InitOrderAmt { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductPrice")]
        public TradeMoney ProductPrice { get; set; }

        /// <summary>
        /// 物流类型
        /// 是否隐私:否
        /// 示例值:
        /// EMS
        /// </summary>
        [JsonProperty("LogisticsType")]
        public string LogisticsType { get; set; }

        /// <summary>
        /// 订单中商品序列号
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("OrderSortId")]
        public int OrderSortId { get; set; }

        /// <summary>
        /// 联盟佣金比例
        /// 是否隐私:否
        /// 示例值:
        /// 0.03
        /// </summary>
        [JsonProperty("AfflicateFeeRate")]
        public double AfflicateFeeRate { get; set; }

        /// <summary>
        /// 交易佣金比例
        /// 是否隐私:否
        /// 示例值:
        /// 0.08
        /// </summary>
        [JsonProperty("EscrowFeeRate")]
        public double EscrowFeeRate { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OrderListVO&t=1
    /// </summary>
    public partial class OrderListVO : AliErrorType
    {

        /// <summary>
        /// 订单总数
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 订单列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderList")]
        public OrderItemVO[] OrderList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OrderItemVO&t=1
    /// </summary>
    public partial class OrderItemVO
    {

        /// <summary>
        /// 订单类型
        /// 是否隐私:否
        /// 示例值:
        /// AE_COMMON
        /// </summary>
        [JsonProperty("BizType")]
        public string BizType { get; set; }

        /// <summary>
        /// 买家登录ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerLoginId")]
        public string BuyerLoginId { get; set; }

        /// <summary>
        /// 买家全名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerSignerFullname")]
        public string BuyerSignerFullname { get; set; }

        /// <summary>
        /// 手续费率
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("EscrowFeeRate")]
        public int EscrowFeeRate { get; set; }

        /// <summary>
        /// 冻结状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FrozenStatus")]
        public string FrozenStatus { get; set; }

        /// <summary>
        /// 资金状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FundStatus")]
        public string FundStatus { get; set; }

        /// <summary>
        /// 订单创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 支付时间（和订单详情中gmtPaysuccess字段意义相同。)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtPayTime")]
        public System.DateTimeOffset? GmtPayTime { get; set; }

        /// <summary>
        /// 发货时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtSendGoodsTime")]
        public System.DateTimeOffset? GmtSendGoodsTime { get; set; }

        /// <summary>
        /// 是否已请求放款
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("HasRequestLoan")]
        public bool HasRequestLoan { get; set; }

        /// <summary>
        /// 纠纷状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// 剩余发货时间（天）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LeftSendGoodDay")]
        public string LeftSendGoodDay { get; set; }

        /// <summary>
        /// 剩余发货时间（小时）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LeftSendGoodHour")]
        public string LeftSendGoodHour { get; set; }

        /// <summary>
        /// 剩余发货时间（分钟）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LeftSendGoodMin")]
        public string LeftSendGoodMin { get; set; }

        /// <summary>
        /// 物流状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsStatus")]
        public string LogisticsStatus { get; set; }

        /// <summary>
        /// 订单详情链接
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderDetailUrl")]
        public string OrderDetailUrl { get; set; }

        /// <summary>
        /// 订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 订单状态
        /// 是否隐私:否
        /// 示例值:
        /// PLACE_ORDER_SUCCESS
        /// </summary>
        [JsonProperty("OrderStatus")]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 支付类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PaymentType")]
        public string PaymentType { get; set; }

        /// <summary>
        /// 卖家登录ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerLoginId")]
        public string SellerLoginId { get; set; }

        /// <summary>
        /// 卖家全名
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerSignerFullname")]
        public string SellerSignerFullname { get; set; }

        /// <summary>
        /// 超时剩余时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TimeoutLeftTime")]
        public long TimeoutLeftTime { get; set; }

        /// <summary>
        /// 手续费
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("EscrowFee")]
        public TradeMoney EscrowFee { get; set; }

        /// <summary>
        /// 放款金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanAmount")]
        public TradeMoney LoanAmount { get; set; }

        /// <summary>
        /// 付款金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PayAmount")]
        public TradeMoney PayAmount { get; set; }

        /// <summary>
        /// 商品列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductList")]
        public OrderProductVO[] ProductList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=OrderProductVO&t=1
    /// </summary>
    public partial class OrderProductVO
    {

        /// <summary>
        /// 买家firstName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerSignerFirstName")]
        public string BuyerSignerFirstName { get; set; }

        /// <summary>
        /// 买家lastName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BuyerSignerLastName")]
        public string BuyerSignerLastName { get; set; }

        /// <summary>
        /// 子订单是否能提交纠纷
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("CanSubmitIssue")]
        public bool CanSubmitIssue { get; set; }

        /// <summary>
        /// 子订单号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildId")]
        public long ChildId { get; set; }

        /// <summary>
        /// 妥投时间
        /// 是否隐私:否
        /// 示例值:
        /// 5-10
        /// </summary>
        [JsonProperty("DeliveryTime")]
        public string DeliveryTime { get; set; }

        /// <summary>
        /// 限时达
        /// 是否隐私:否
        /// 示例值:
        /// 27
        /// </summary>
        [JsonProperty("FreightCommitDay")]
        public string FreightCommitDay { get; set; }

        /// <summary>
        /// 资金状态
        /// 是否隐私:否
        /// 示例值:
        /// NOT_PAY
        /// </summary>
        [JsonProperty("FundStatus")]
        public string FundStatus { get; set; }

        /// <summary>
        /// 备货时间
        /// 是否隐私:否
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("GoodsPrepareTime")]
        public int GoodsPrepareTime { get; set; }

        /// <summary>
        /// 纠纷类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueMode")]
        public string IssueMode { get; set; }

        /// <summary>
        /// 纠纷状态
        /// 是否隐私:否
        /// 示例值:
        /// NO_ISSUE
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// 物流服务
        /// 是否隐私:否
        /// 示例值:
        /// EMS
        /// </summary>
        [JsonProperty("LogisticsServiceName")]
        public string LogisticsServiceName { get; set; }

        /// <summary>
        /// 物流类型
        /// 是否隐私:否
        /// 示例值:
        /// EMS
        /// </summary>
        [JsonProperty("LogisticsType")]
        public string LogisticsType { get; set; }

        /// <summary>
        /// 订单备注
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }

        /// <summary>
        /// 是否支持假一赔三
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("MoneyBack3x")]
        public bool MoneyBack3x { get; set; }

        /// <summary>
        /// 订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }

        /// <summary>
        /// 商品数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductCount")]
        public int ProductCount { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品主图Url
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductImgUrl")]
        public string ProductImgUrl { get; set; }

        /// <summary>
        /// 商品名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 快照Url
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductSnapUrl")]
        public string ProductSnapUrl { get; set; }

        /// <summary>
        /// 商品规格
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductStandard")]
        public string ProductStandard { get; set; }

        /// <summary>
        /// 商品单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductUnit")]
        public string ProductUnit { get; set; }

        /// <summary>
        /// 卖家firstName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerSignerFirstName")]
        public string SellerSignerFirstName { get; set; }

        /// <summary>
        /// 卖家lastName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SellerSignerLastName")]
        public string SellerSignerLastName { get; set; }

        /// <summary>
        /// 发货时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SendGoodsTime")]
        public System.DateTimeOffset SendGoodsTime { get; set; }

        /// <summary>
        /// 订单显示状态
        /// 是否隐私:否
        /// 示例值:
        /// PLACE_ORDER_SUCCESS
        /// </summary>
        [JsonProperty("ShowStatus")]
        public string ShowStatus { get; set; }

        /// <summary>
        /// 商品编码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }

        /// <summary>
        /// 子订单状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SonOrderStatus")]
        public string SonOrderStatus { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsAmount")]
        public TradeMoney LogisticsAmount { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductUnitPrice")]
        public TradeMoney ProductUnitPrice { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TotalProductAmount")]
        public TradeMoney TotalProductAmount { get; set; }

        /// <summary>
        /// 联盟佣金比例
        /// 是否隐私:否
        /// 示例值:
        /// 0.03
        /// </summary>
        [JsonProperty("AfflicateFeeRate")]
        public double AfflicateFeeRate { get; set; }

        /// <summary>
        /// 交易佣金比例
        /// 是否隐私:否
        /// 示例值:
        /// 0.08
        /// </summary>
        [JsonProperty("EscrowFeeRate")]
        public double EscrowFeeRate { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenIssueInfoDTO&t=1
    /// </summary>
    public partial class TpOpenIssueInfoDTO
    {

        /// <summary>
        /// 纠纷类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueModel")]
        public string IssueModel { get; set; }

        /// <summary>
        /// 纠纷状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IssueStatus")]
        public string IssueStatus { get; set; }

        /// <summary>
        /// 纠纷原因ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReasonCategoryId")]
        public string ReasonCategoryId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenLoanInfoDTO&t=1
    /// </summary>
    public partial class TpOpenLoanInfoDTO
    {

        /// <summary>
        /// 放款时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanTime")]
        public System.DateTimeOffset LoanTime { get; set; }

        /// <summary>
        /// 放款金额
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoanAmount")]
        public TradeMoney LoanAmount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOperationLogDTO&t=1
    /// </summary>
    public partial class TpOperationLogDTO
    {

        /// <summary>
        /// 操作类型，用于记录操作事件。可能值为front_create_order,
        /// front_seller_send_all_goods,
        /// front_seller_send_part_goods,
        /// front_pay_online_success,
        /// front_trade_completed,
        /// front_trade_success,
        /// trade_close,
        /// front_buyerComfirmAcceptGoods,
        /// front_sellerAnnounceSendGoods,
        /// front_paypal_pay_success,
        /// front_pay_wu_success,
        /// front_pay_qw_success,
        /// front_mb_pay_success,
        /// cancel_order_close_trade,
        /// buyer_close_cancel,
        /// pledge_refund_ing,
        /// pledge_refund_fail,
        /// pledge_refund_success,
        /// pledge_issue_buyer_create,
        /// pledge_issue_buyer_modify,
        /// pledge_issue_buyer_accept,
        /// pledge_issue_buyer_cancel,
        /// pledge_issue_cs_cancel_money,
        /// risk_control_pass,
        /// buyer_cancle_group_after_payment,
        /// group_success,
        /// group_failure,
        /// buyer_cancle_group_after_payment,
        /// presell_promotion_end
        /// 是否隐私:否
        /// 示例值:
        /// front_create_order
        /// </summary>
        [JsonProperty("ActionType")]
        public string ActionType { get; set; }

        /// <summary>
        /// 子订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildOrderId")]
        public long ChildOrderId { get; set; }

        /// <summary>
        /// 创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// 事件ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 备注
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Memo")]
        public string Memo { get; set; }

        /// <summary>
        /// 操作员
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Operator")]
        public string Operator { get; set; }

        /// <summary>
        /// 订单ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OrderId")]
        public long OrderId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 个人基本信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenPersonDTO&t=1
    /// </summary>
    public partial class TpOpenPersonDTO
    {

        /// <summary>
        /// 国家
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Country")]
        public string Country { get; set; }

        /// <summary>
        /// firstName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FirstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// lastName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LastName")]
        public string LastName { get; set; }

        /// <summary>
        /// 登录ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LoginId")]
        public string LoginId { get; set; }

        /// <summary>
        /// 邮箱
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Email")]
        public string Email { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 收货地址
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenAddressDTO&t=1
    /// </summary>
    public partial class TpOpenAddressDTO : AliErrorType
    {

        /// <summary>
        /// 地址1
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Address")]
        public string Address { get; set; }

        /// <summary>
        /// 地址2
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Address2")]
        public string Address2 { get; set; }

        /// <summary>
        /// 城市
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("City")]
        public string City { get; set; }

        /// <summary>
        /// 收件人
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ContactPerson")]
        public string ContactPerson { get; set; }

        /// <summary>
        /// 国家
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Country")]
        public string Country { get; set; }

        /// <summary>
        /// 街道详细地址
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("DetailAddress")]
        public string DetailAddress { get; set; }

        /// <summary>
        /// 传真区号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FaxArea")]
        public string FaxArea { get; set; }

        /// <summary>
        /// 传真国家码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FaxCountry")]
        public string FaxCountry { get; set; }

        /// <summary>
        /// 传真号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("FaxNumber")]
        public string FaxNumber { get; set; }

        /// <summary>
        /// 手机
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("MobileNo")]
        public string MobileNo { get; set; }

        /// <summary>
        /// 区号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PhoneArea")]
        public string PhoneArea { get; set; }

        /// <summary>
        /// 国家码
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PhoneCountry")]
        public string PhoneCountry { get; set; }

        /// <summary>
        /// 电话
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PhoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// 省份
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Province")]
        public string Province { get; set; }

        /// <summary>
        /// 邮编
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Zip")]
        public string Zip { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenLogisticInfoDTO&t=1
    /// </summary>
    public partial class TpOpenLogisticInfoDTO
    {

        /// <summary>
        /// 妥投时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtReceived")]
        public System.DateTimeOffset GmtReceived { get; set; }

        /// <summary>
        /// 发货时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtSend")]
        public System.DateTimeOffset GmtSend { get; set; }

        /// <summary>
        /// 是否可获取物流追踪信息Y/N
        /// 是否隐私:否
        /// 示例值:
        /// N
        /// </summary>
        [JsonProperty("HaveTrackingInfo")]
        public bool HaveTrackingInfo { get; set; }

        /// <summary>
        /// 物流追踪号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsNo")]
        public string LogisticsNo { get; set; }

        /// <summary>
        /// 发货物流服务key
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsServiceName")]
        public string LogisticsServiceName { get; set; }

        /// <summary>
        /// 物流公司类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("LogisticsTypeCode")]
        public string LogisticsTypeCode { get; set; }

        /// <summary>
        /// 初始值 default、 已经妥投 received、没有妥投 not_received、疑似妥投 suspected_received
        /// 是否隐私:否
        /// 示例值:
        /// default
        /// </summary>
        [JsonProperty("ReceiveStatus")]
        public string ReceiveStatus { get; set; }

        /// <summary>
        /// 未妥投原因，如国家不匹配
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RecvStatusDesc")]
        public string RecvStatusDesc { get; set; }

        /// <summary>
        /// 物流订单id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ShipOrderId")]
        public long ShipOrderId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenOrderMsgDTO&t=1
    /// </summary>
    public partial class TpOpenOrderMsgDTO
    {

        /// <summary>
        /// 订单号
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("BusinessOrderId")]
        public int BusinessOrderId { get; set; }

        /// <summary>
        /// 留言内容
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Content")]
        public string Content { get; set; }

        /// <summary>
        /// 创建时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// 订单留言ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 信息发送放  buyer/seller
        /// 是否隐私:否
        /// 示例值:
        /// buyer
        /// </summary>
        [JsonProperty("Poster")]
        public string Poster { get; set; }

        /// <summary>
        /// 接收者adminSeq
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiverAdminSeq")]
        public int ReceiverAdminSeq { get; set; }

        /// <summary>
        /// 接收者firstName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiverFirstName")]
        public string ReceiverFirstName { get; set; }

        /// <summary>
        /// 接收者lastName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiverLastName")]
        public string ReceiverLastName { get; set; }

        /// <summary>
        /// 接收者loginId
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiverLoginId")]
        public string ReceiverLoginId { get; set; }

        /// <summary>
        /// 接收者memberSeq
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ReceiverSeq")]
        public int ReceiverSeq { get; set; }

        /// <summary>
        /// 发送者adminSeq
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderAdminSeq")]
        public int SenderAdminSeq { get; set; }

        /// <summary>
        /// 发送者firstName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderFirstName")]
        public string SenderFirstName { get; set; }

        /// <summary>
        /// 发送者lastName
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderLastName")]
        public string SenderLastName { get; set; }

        /// <summary>
        /// 发送者loginId
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderLoginId")]
        public string SenderLoginId { get; set; }

        /// <summary>
        /// 发送者memberSeq
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SenderSeq")]
        public int SenderSeq { get; set; }

        /// <summary>
        /// 留言状态 create/viewed
        /// 是否隐私:否
        /// 示例值:
        /// create
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenOrderProductInfoDTO&t=1
    /// </summary>
    public partial class TpOpenOrderProductInfoDTO
    {

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 商品标题
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductName")]
        public string ProductName { get; set; }

        /// <summary>
        /// 商品数量
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Quantity")]
        public int Quantity { get; set; }

        /// <summary>
        /// 商品SKU
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Sku")]
        public string Sku { get; set; }

        /// <summary>
        /// 商品单价
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("UnitPrice")]
        public TradeMoney UnitPrice { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 货币信息
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=trade.Money&t=1
    /// </summary>
    public partial class TradeMoney
    {

        /// <summary>
        /// 金额
        /// 是否隐私:否
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("Amount")]
        public decimal Amount { get; set; }

        /// <summary>
        /// 分
        /// 是否隐私:否
        /// 示例值:
        /// 10000
        /// </summary>
        [JsonProperty("Cent")]
        public long Cent { get; set; }

        /// <summary>
        /// 币种USD/RUB
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Currency")]
        public Currency Currency { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=TpOpenRefundInfoDTO&t=1
    /// </summary>
    public partial class TpOpenRefundInfoDTO
    {

        /// <summary>
        /// 退款原因
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RefundReason")]
        public string RefundReason { get; set; }

        /// <summary>
        /// 退款状态
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RefundStatus")]
        public string RefundStatus { get; set; }

        /// <summary>
        /// 退款类型
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("RefundType")]
        public string RefundType { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=currency&t=1
    /// </summary>
    public partial class Currency
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("DefaultFractionDigits")]
        public int DefaultFractionDigits { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// $
        /// </summary>
        [JsonProperty("Symbol")]
        public string Symbol { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 单张图片记录对象。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=PhotobankImageQueryByPathRecord&t=1
    /// </summary>
    public partial class PhotobankImageQueryByPathRecord
    {

        /// <summary>
        /// 这张图片在图片银行中显示的名称。
        /// 是否隐私:否
        /// 示例值:
        /// Hello
        /// </summary>
        [JsonProperty("DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// 这张图片的大小。单位：像素。
        /// 是否隐私:否
        /// 示例值:
        /// 205100
        /// </summary>
        [JsonProperty("FileSize")]
        public int FileSize { get; set; }

        /// <summary>
        /// 这张图片所在的分组ID。如果没有任何分组则返回一个空串("")。
        /// 是否隐私:否
        /// 示例值:
        /// 123
        /// </summary>
        [JsonProperty("GroupId")]
        public string GroupId { get; set; }

        /// <summary>
        /// 这张图片的宽度。单位：像素。
        /// 是否隐私:否
        /// 示例值:
        /// 900
        /// </summary>
        [JsonProperty("Width")]
        public int Width { get; set; }

        /// <summary>
        /// 这张图片的高度。单位：像素。
        /// 是否隐私:否
        /// 示例值:
        /// 900
        /// </summary>
        [JsonProperty("Height")]
        public int Height { get; set; }

        /// <summary>
        /// 这张图片的ID。
        /// 是否隐私:否
        /// 示例值:
        /// 3788719356
        /// </summary>
        [JsonProperty("Iid")]
        public long Iid { get; set; }

        /// <summary>
        /// 这张图片被引用的次数。
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("ReferenceCount")]
        public int ReferenceCount { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 图片银行分组对象。它有2个属性：groupId和groupName，分别表示分组ID和名称。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=PhotobankGroup&t=1
    /// </summary>
    public partial class PhotobankGroup
    {

        /// <summary>
        /// 图片分组ID
        /// 是否隐私:否
        /// 示例值:
        /// 2000123
        /// </summary>
        [JsonProperty("GroupId")]
        public string GroupId { get; set; }

        /// <summary>
        /// 图片分组名称
        /// 是否隐私:否
        /// 示例值:
        /// Test Group Name
        /// </summary>
        [JsonProperty("GroupName")]
        public string GroupName { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 这个对象保存了图片银行分页接口: api.listImagePagination中每张图片的信息。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=PhotobankImageRecord&t=1
    /// </summary>
    public partial class PhotobankImageRecord
    {

        /// <summary>
        /// 这张图片在图片银行中的ID。
        /// 是否隐私:否
        /// 示例值:
        /// 3207108922
        /// </summary>
        [JsonProperty("Iid")]
        public long Iid { get; set; }

        /// <summary>
        /// 这张图片的宽度。单位：像素。
        /// 是否隐私:否
        /// 示例值:
        /// 588
        /// </summary>
        [JsonProperty("Width")]
        public int Width { get; set; }

        /// <summary>
        /// 这张图片的高度。单位：像素。
        /// 是否隐私:否
        /// 示例值:
        /// 421
        /// </summary>
        [JsonProperty("Height")]
        public int Height { get; set; }

        /// <summary>
        /// 这张图片的大小。单位：字节(B)。
        /// 是否隐私:否
        /// 示例值:
        /// 35151
        /// </summary>
        [JsonProperty("FileSize")]
        public int FileSize { get; set; }

        /// <summary>
        /// 这张图片被引用的次数。
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("ReferenceCount")]
        public int ReferenceCount { get; set; }

        /// <summary>
        /// 这张图片在图片银行中名称。可以根据这个值在图片银行中搜索到对应的图片。
        /// 是否隐私:否
        /// 示例值:
        /// 10 E14 6W Warm White 30 SMD LED Spotlight Light Lamp Bulb
        /// </summary>
        [JsonProperty("DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// 这张图片的URL。可以将这个URL添加到产品的主图或者详描中。
        /// 是否隐私:否
        /// 示例值:
        /// http://g03.a.alicdn.com/kf/HTB1PP5AGVXXXXaIXXXXq6xXFXXXN/200042360/HTB1PP5AGVXXXXaIXXXXq6xXFXXXN.jpg
        /// </summary>
        [JsonProperty("Url")]
        public string Url { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 分页查询对象数据结构。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=PhtobankPaginationQuery&t=1
    /// </summary>
    public partial class PhtobankPaginationQuery
    {

        /// <summary>
        /// 图片银行产品分组ID
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("GroupId")]
        public string GroupId { get; set; }

        /// <summary>
        /// 当前页的值
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 每页的记录数
        /// 是否隐私:否
        /// 示例值:
        /// 19
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 分国家配置商品的价格，目前支持相对于基准价按比例调价
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.product.NationalQuoteConfiguration&t=1
    /// </summary>
    public partial class AlibabaProductNationalQuoteConfiguration
    {

        /// <summary>
        /// 分国家定价规则类型[percentage：基于基准价格按比例配置]
        /// 是否隐私:否
        /// 示例值:
        /// percentage
        /// </summary>
        [JsonProperty("ConfigurationType")]
        public string ConfigurationType { get; set; }

        /// <summary>
        /// jsonArray格式的分国家定价规则数据。
        /// 1)基于基准价格按比例配置的数据格式：[{"shiptoCountry":"US","percentage":"5"},{"shiptoCountry":"RU","percentage":"-2"}]
        /// 其中shiptoCountry：ISO两位的国家编码（目前支持11个国家：RU,US,CA,ES,FR,UK,NL,IL,BR,CL,AU），
        /// percentage：相对于基准价的调价比例（百分比整数，支持负数，当前限制>=-30 && <>
        /// 是否隐私:否
        /// 示例值:
        /// [{"shiptoCountry":"US","percentage":"5"},{"shiptoCountry":"RU","percentage":"-2"}]
        /// </summary>
        [JsonProperty("ConfigurationData")]
        public string ConfigurationData { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 服务模板
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.product.PromiseTemplate&t=1
    /// </summary>
    public partial class AlibabaProductPromiseTemplate
    {

        /// <summary>
        /// id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 一个AeopAeProductSKU表示一个商品的SKU。它包含了以下几个属性：
    /// 
    ///       1. aeopSKUProperty（SKU属性集）
    /// 
    /// 
    ///       2. skuPrice（SKU价格）
    /// 
    /// 
    ///       3. skuCode（SKU的商家编码）
    /// 
    /// 
    ///       4. skuStock（SKU有货/无货）
    /// 
    /// 
    ///       5. ipmSkuStock（SKU的实际可售库存） 
    /// 
    /// 
    /// 其中:
    /// 
    /// 
    ///       aeopSKUProperty是一个以AeopSKUProperty数组。具体属性可以查看AeopSKUProperty的数据结构。
    /// 
    /// 
    ///      skuStock是一个废弃属性，请不要设置/读取这个属性。建议使用ipmSkuStock属性来代替skuStock属性。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAeProductSKU&t=1
    /// </summary>
    public partial class AeopAeProductSKU
    {

        /// <summary>
        /// 币种
        /// 是否隐私:否
        /// 示例值:
        /// USD
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Sku属性对象list，允许1-3个sku属性对象，按sku属性顺序排放。sku属性从类目属性接口getAttributesResultByCateId获取。该项值输入sku属性，不能输入普通类目属性。注意，sku属性是有顺序的，必须按照顺序存放。
        /// 是否隐私:否
        /// 示例值:
        /// [
        ///     {
        ///      "propertyValueId": 193,
        ///      "skuImage": "http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg",
        ///      "propertyValueDefinitionName": "balck",
        ///      "skuPropertyId": 200000182
        ///     },
        ///     {
        ///      "propertyValueId": 201336100,
        ///      "skuPropertyId": 200007763
        ///     }
        ///    ]
        /// </summary>
        [JsonProperty("AeopSKUProperty")]
        public AeopSKUProperty[] AeopSKUProperty { get; set; }

        /// <summary>
        /// Sku价格。取值范围:0.01-100000;单位:美元。 如:200.07，表示:200美元7分。需要在正确的价格区间内。
        /// 是否隐私:否
        /// 示例值:
        /// 200.07
        /// </summary>
        [JsonProperty("SkuPrice")]
        public string SkuPrice { get; set; }

        /// <summary>
        /// Sku商家编码。 格式:半角英数字,长度20,不包含空格大于号和小于号。
        /// 是否隐私:否
        /// 示例值:
        /// cfas00978
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }

        /// <summary>
        /// Sku库存,数据格式有货true，无货false；至少有一条sku记录是有货的。
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("SkuStock")]
        public bool SkuStock { get; set; }

        /// <summary>
        /// SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。 如果同时设置了skuStock属性，那么系统以ipmSkuStock属性为优先；如果没有设置ipmSkuStock属性，那么系统会根据skuStock属性进行设置库存，true表示999，false表示0。
        /// 是否隐私:否
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("IpmSkuStock")]
        public long IpmSkuStock { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 延长商品的有效期结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.ae.product.AeopModifyProductResponse&t=1
    /// </summary>
    public partial class AlibabaAeProductAeopModifyProductResponse
    {

        /// <summary>
        /// 是否操作成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 操作的商品id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 成功个数
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ModifyCount")]
        public int ModifyCount { get; set; }

        /// <summary>
        /// 错误详情
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ErrorDetails")]
        public AlibabaProductOnlineErrorDetail[] ErrorDetails { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 错误码与由应错误导致上架失败的产品ID列表
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.product.online.ErrorDetail&t=1
    /// </summary>
    public partial class AlibabaProductOnlineErrorDetail
    {

        /// <summary>
        /// 错误码
        /// 是否隐私:否
        /// 示例值:
        /// 11015111
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 产品ID列表
        /// 是否隐私:否
        /// 示例值:
        /// [50001056157, 50001056153]
        /// </summary>
        [JsonProperty("ProductIds")]
        public long[] ProductIds { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 这个Domain表示商品的多媒体信息。现在多媒体信息只支持视频。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.product.AeopAEMultimedia&t=1
    /// </summary>
    public partial class AlibabaProductAeopAEMultimedia
    {

        /// <summary>
        /// 多媒体信息。
        /// 是否隐私:否
        /// 示例值:
        /// [
        /// 	{
        /// 		"aliMemberId": 117284237,
        /// 		"mediaId": 35683461,
        /// 		"mediaType": "video",
        /// 		"mediaStatus": "approved",
        /// 		"posterUrl": "http://img02.taobaocdn.com/bao/uploaded/TB1a7HKLVXXXXX5XVXXXXXXXXXX.jpg"
        /// 	}
        /// ]
        /// </summary>
        [JsonProperty("AeopAEVideos")]
        public AlibabaProductAeopAEVideo[] AeopAEVideos { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 这个Domain保存了一段视频信息。它有以下几个属性：1）aliMemberId：卖家的主账户ID，2）mediaId：视频ID，3）mediaStatus：视频的状态
    /// 
    /// 4）mediaType：视频的类型，5）posterUrl：封面图片的URL
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=alibaba.product.AeopAEVideo&t=1
    /// </summary>
    public partial class AlibabaProductAeopAEVideo
    {

        /// <summary>
        /// 卖家主账户ID
        /// 是否隐私:否
        /// 示例值:
        /// 1006680305
        /// </summary>
        [JsonProperty("AliMemberId")]
        public long AliMemberId { get; set; }

        /// <summary>
        /// 视频ID
        /// 是否隐私:否
        /// 示例值:
        /// 12345678
        /// </summary>
        [JsonProperty("MediaId")]
        public long MediaId { get; set; }

        /// <summary>
        /// 视频的类型
        /// 是否隐私:否
        /// 示例值:
        /// video
        /// </summary>
        [JsonProperty("MediaType")]
        public string MediaType { get; set; }

        /// <summary>
        /// 视频的状态
        /// 是否隐私:否
        /// 示例值:
        /// approved
        /// </summary>
        [JsonProperty("MediaStatus")]
        public string MediaStatus { get; set; }

        /// <summary>
        /// 视频封面图片的URL
        /// 是否隐私:否
        /// 示例值:
        /// http://img01.taobaocdn.com/bao/uploaded/TB1rNdGIVXXXXbTXFXXXXXXXXXX.jpg
        /// </summary>
        [JsonProperty("PosterUrl")]
        public string PosterUrl { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopProductResultDTO&t=1
    /// </summary>
    public partial class AeopProductResultDTO
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AeProductList")]
        public AeopTaoDaiXiaoSimpleProduct[] AeProductList { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopTaoDaiXiaoSimpleProduct&t=1
    /// </summary>
    public partial class AeopTaoDaiXiaoSimpleProduct
    {

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public int ProductId { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductURL")]
        public string ProductURL { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TbNumIid")]
        public long TbNumIid { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopProductGroup&t=1
    /// </summary>
    public partial class AeopProductGroup
    {

        /// <summary>
        /// 产品分组
        /// 是否隐私:否
        /// 示例值:
        /// 262007001
        /// </summary>
        [JsonProperty("GroupId")]
        public long GroupId { get; set; }

        /// <summary>
        /// 分组名称
        /// 是否隐私:否
        /// 示例值:
        /// test112fasdfds
        /// </summary>
        [JsonProperty("GroupName")]
        public string GroupName { get; set; }

        /// <summary>
        /// 子分组列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ChildGroup")]
        public AeopChildProductGroup[] ChildGroup { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopChildProductGroup&t=1
    /// </summary>
    public partial class AeopChildProductGroup
    {

        /// <summary>
        /// 产品分组ID
        /// 是否隐私:否
        /// 示例值:
        /// 500052004
        /// </summary>
        [JsonProperty("GroupId")]
        public long GroupId { get; set; }

        /// <summary>
        /// 产品分组名称
        /// 是否隐私:否
        /// 示例值:
        /// twrewerw
        /// </summary>
        [JsonProperty("GroupName")]
        public string GroupName { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=GroupIdHolder&t=1
    /// </summary>
    public partial class GroupIdHolder
    {

        /// <summary>
        /// 产品分组ID
        /// 是否隐私:否
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("GroupId")]
        public long GroupId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeProhibitedWord&t=1
    /// </summary>
    public partial class AeProhibitedWord
    {

        /// <summary>
        /// 违禁词名称
        /// 是否隐私:否
        /// 示例值:
        /// nike
        /// </summary>
        [JsonProperty("PrimaryWord")]
        public string PrimaryWord { get; set; }

        /// <summary>
        /// 违禁原因
        /// 是否隐私:否
        /// 示例值:
        /// ["FORBIDEN_TYPE", "RESTRICT_TYPE"]
        /// </summary>
        [JsonProperty("Types")]
        public string[] Types { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopTaoDaiXiaoProductResultDTO&t=1
    /// </summary>
    public partial class AeopTaoDaiXiaoProductResultDTO
    {

        /// <summary>
        /// 淘代销商品URL
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("DetailUrl")]
        public string DetailUrl { get; set; }

        /// <summary>
        /// 淘代销商品的标题
        /// 是否隐私:否
        /// 示例值:
        /// beautiful clothes in 2015
        /// </summary>
        [JsonProperty("Title")]
        public string Title { get; set; }

        /// <summary>
        /// 淘宝商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("TbNumIid")]
        public long TbNumIid { get; set; }

        /// <summary>
        /// 淘宝卖家的昵称
        /// 是否隐私:否
        /// 示例值:
        /// hello
        /// </summary>
        [JsonProperty("Nick")]
        public string Nick { get; set; }

        /// <summary>
        /// 产品主图的URL
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PicUrl")]
        public string PicUrl { get; set; }

        /// <summary>
        /// 淘宝店铺名称
        /// 是否隐私:否
        /// 示例值:
        /// qi gege
        /// </summary>
        [JsonProperty("ShopTitle")]
        public string ShopTitle { get; set; }

        /// <summary>
        /// 商品所属卖家用户类型，b：商城， c：淘宝集市
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("UserType")]
        public string UserType { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopDetailModule&t=1
    /// </summary>
    public partial class AeopDetailModule
    {

        /// <summary>
        /// 模块ID
        /// 是否隐私:否
        /// 示例值:
        /// 123
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// 模块名称
        /// 是否隐私:否
        /// 示例值:
        /// hello
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }

        /// <summary>
        /// 模块的状态
        /// 是否隐私:否
        /// 示例值:
        /// status
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }

        /// <summary>
        /// 模块的类型
        /// 是否隐私:否
        /// 示例值:
        /// custom
        /// </summary>
        [JsonProperty("Type")]
        public string Type { get; set; }

        /// <summary>
        /// 模块的内容
        /// 是否隐私:否
        /// 示例值:
        /// hello content
        /// </summary>
        [JsonProperty("DisplayContent")]
        public string DisplayContent { get; set; }

        /// <summary>
        /// 模块的内容
        /// 是否隐私:否
        /// 示例值:
        /// hello content
        /// </summary>
        [JsonProperty("ModuleContents")]
        public string ModuleContents { get; set; }

        /// <summary>
        /// 卖家主账户的ID
        /// 是否隐私:否
        /// 示例值:
        /// 1006680305
        /// </summary>
        [JsonProperty("AliMemberId")]
        public long AliMemberId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAeProductWindow&t=1
    /// </summary>
    public partial class AeopAeProductWindow
    {

        /// <summary>
        /// 被推荐的产品ID
        /// 是否隐私:否
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 橱窗的开始生效时间。
        /// 是否隐私:否
        /// 示例值:
        /// 20150423224923499-0700
        /// </summary>
        [JsonProperty("EnabledDate")]
        public System.DateTimeOffset EnabledDate { get; set; }

        /// <summary>
        /// 橱窗的失效时间。
        /// 是否隐私:否
        /// 示例值:
        /// 20150423224923499-0700
        /// </summary>
        [JsonProperty("ExpiredDate")]
        public System.DateTimeOffset ExpiredDate { get; set; }

        /// <summary>
        /// 当前橱窗的剩余有效天数。
        /// 是否隐私:否
        /// 示例值:
        /// 3
        /// </summary>
        [JsonProperty("RemainingDays")]
        public long RemainingDays { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAEProductDisplaySampleDTO&t=1
    /// </summary>
    public partial class AeopAEProductDisplaySampleDTO
    {

        /// <summary>
        /// 商品标题
        /// 是否隐私:否
        /// 示例值:
        /// knew odd
        /// </summary>
        [JsonProperty("Subject")]
        public string Subject { get; set; }

        /// <summary>
        /// 商品分组id
        /// 是否隐私:否
        /// 示例值:
        /// 123
        /// </summary>
        [JsonProperty("GroupId")]
        public int GroupId { get; set; }

        /// <summary>
        /// 下架时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WsOfflineDate")]
        public System.DateTimeOffset WsOfflineDate { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }

        /// <summary>
        /// 图片URL.静态单图主图个数为1,动态多图主图个数为2-6. 多个图片url用‘;’分隔符连接。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ImageURLs")]
        public string ImageURLs { get; set; }

        /// <summary>
        /// 产品来源。'tdx'为淘宝代销产品，isv为通过API发布的商品。其他字符或空为普通产品。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Src")]
        public string Src { get; set; }

        /// <summary>
        /// 产品发布时间。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 商品最后更新时间（系统更新时间也会记录）。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// 最小价格。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductMinPrice")]
        public string ProductMinPrice { get; set; }

        /// <summary>
        /// 最大价格。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductMaxPrice")]
        public string ProductMaxPrice { get; set; }

        /// <summary>
        /// 商品所属人loginId
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OwnerMemberId")]
        public string OwnerMemberId { get; set; }

        /// <summary>
        /// 商品所属人Seq
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OwnerMemberSeq")]
        public int OwnerMemberSeq { get; set; }

        /// <summary>
        /// 商品下架原因：expire_offline(过期下架)，user_offline(用户手工下架)、violate_offline(违规下架)、punish_offline(处罚下架)、degrade_offline(降级下架)、industry_offline(行业准入未续约下架)
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WsDisplay")]
        public int WsDisplay { get; set; }

        /// <summary>
        /// 货币单位
        /// 是否隐私:否
        /// 示例值:
        /// USD;RUB
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 尺码模版信息数据结构，它包含了以下几个属性：1)sizechartId: 尺码模版ID. 2)default: 是否是系统自带的尺码模版，true表示是系统自带的，false表示用户自定义. 3)modelName: 尺码模版的适用类型 4)name: 尺码模版的名称。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=message.sizechartDTOList&t=1
    /// </summary>
    public partial class MessageSizechartDTOList
    {

        /// <summary>
        /// 尺码模版ID.
        /// 是否隐私:否
        /// 示例值:
        /// 6135006
        /// </summary>
        [JsonProperty("SizechartId")]
        public long SizechartId { get; set; }

        /// <summary>
        /// 是否是系统自带的尺码模版，true表示是系统自带的，false表示用户自定义.
        /// 是否隐私:否
        /// 示例值:
        /// false
        /// </summary>
        [JsonProperty("Default")]
        public bool Default { get; set; }

        /// <summary>
        /// 尺码模版的适用类型
        /// 是否隐私:否
        /// 示例值:
        /// 裤子
        /// </summary>
        [JsonProperty("ModelName")]
        public string ModelName { get; set; }

        /// <summary>
        /// 尺码模版的名称
        /// 是否隐私:否
        /// 示例值:
        /// 牛仔裤尺码表
        /// </summary>
        [JsonProperty("Name")]
        public string Name { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopProductOptimizeResult&t=1
    /// </summary>
    public partial class AeopProductOptimizeResult
    {

        /// <summary>
        /// 查询中的type字段
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Type")]
        public string Type { get; set; }

        /// <summary>
        /// 查询中的productOwner字段
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductOwner")]
        public string ProductOwner { get; set; }

        /// <summary>
        /// 距离到期下架商品的日期
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("EndDay")]
        public int EndDay { get; set; }

        /// <summary>
        /// 类目ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CategoryId")]
        public int CategoryId { get; set; }

        /// <summary>
        /// 每页查询商品数
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }

        /// <summary>
        /// 查询当前页
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 查询出的总商品数
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Total")]
        public int Total { get; set; }

        /// <summary>
        /// 调用是否成功
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsSuccess")]
        public bool IsSuccess { get; set; }

        /// <summary>
        /// 需要优化的商品列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("List")]
        public AeopOptimizeProduct List { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopOptimizeProduct&t=1
    /// </summary>
    public partial class AeopOptimizeProduct
    {

        /// <summary>
        /// 扫描出需要优化的商品的时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 商品ID
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public long ProductId { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 淘代销认领返回结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopTaoDaiXiaoClaimResultDTO&t=1
    /// </summary>
    public partial class AeopTaoDaiXiaoClaimResultDTO
    {

        /// <summary>
        /// 返回错误码
        /// 是否隐私:否
        /// 示例值:
        /// 6003
        /// </summary>
        [JsonProperty("ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// 返回错误消息
        /// 是否隐私:否
        /// 示例值:
        /// has claimed the taobao product
        /// </summary>
        [JsonProperty("ErrorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// 是否成功
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// AeopAEProductDisplayDTO
    /// 
    /// 产品展示对象
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=message.AeopAEProductDisplayDTO&t=1
    /// </summary>
    public partial class MessageAeopAEProductDisplayDTO
    {

        /// <summary>
        /// 商品标题
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Subject")]
        public string Subject { get; set; }

        /// <summary>
        /// 商品分组id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GroupId")]
        public int GroupId { get; set; }

        /// <summary>
        /// 下架时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WsOfflineDate")]
        public System.DateTimeOffset WsOfflineDate { get; set; }

        /// <summary>
        /// 商品id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductId")]
        public int ProductId { get; set; }

        /// <summary>
        /// 图片URL.静态单图主图个数为1,动态多图主图个数为2-6. 多个图片url用‘;’分隔符连接。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ImageURLs")]
        public string ImageURLs { get; set; }

        /// <summary>
        /// 产品来源。'tdx'为淘宝代销产品，其他字符或空为普通产品。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Src")]
        public string Src { get; set; }

        /// <summary>
        /// 产品发布时间。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtCreate")]
        public System.DateTimeOffset GmtCreate { get; set; }

        /// <summary>
        /// 商品最后更新时间（系统更新时间也会记录）。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("GmtModified")]
        public System.DateTimeOffset GmtModified { get; set; }

        /// <summary>
        /// 最小价格。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductMinPrice")]
        public string ProductMinPrice { get; set; }

        /// <summary>
        /// 最大价格。
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ProductMaxPrice")]
        public string ProductMaxPrice { get; set; }

        /// <summary>
        /// 商品所属人loginId
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OwnerMemberId")]
        public string OwnerMemberId { get; set; }

        /// <summary>
        /// 商品所属人Seq
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("OwnerMemberSeq")]
        public int OwnerMemberSeq { get; set; }

        /// <summary>
        /// 商品下架原因：expire_offline：过期下架，user_offline：用户下架,violate_offline：违规下架,punish_offline：交易违规下架，degrade_offline：降级下架
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("WsDisplay")]
        public int WsDisplay { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=aeopAeProductPropertys&t=1
    /// </summary>
    public partial class AeopAeProductPropertys
    {

        /// <summary>
        /// 属性名ID。从类目属性接口getAttributesResultByCateId获取普通类目属性，不可填入sku属性。 自定义属性名时,该项不填.
        /// 是否隐私:否
        /// 示例值:
        /// 200000043
        /// </summary>
        [JsonProperty("AttrNameId")]
        public int AttrNameId { get; set; }

        /// <summary>
        /// 自定义属性名属性名。 自定义属性名时,该项必填.
        /// 是否隐私:否
        /// 示例值:
        /// size
        /// </summary>
        [JsonProperty("AttrName")]
        public string AttrName { get; set; }

        /// <summary>
        /// 属性值ID。从类目属性接口getAttributesResultByCateId获取普通类目属性，不可填入sku属性。自定义属性值时,该项不填。
        /// 是否隐私:否
        /// 示例值:
        /// 581
        /// </summary>
        [JsonProperty("AttrValueId")]
        public int AttrValueId { get; set; }

        /// <summary>
        /// 自定义属性值。自定义属性名时,该项必填。 当自定义属性值内容为区间情况时，建议格式2 - 5 kg。(注意，数字'-'单位三者间是要加空格的！)
        /// 是否隐私:否
        /// 示例值:
        /// 2 - 5 kg
        /// </summary>
        [JsonProperty("AttrValue")]
        public string AttrValue { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=aeopSKUProperty&t=1
    /// </summary>
    public partial class AeopSKUProperty
    {

        /// <summary>
        /// sku属性名id。从类目属性接口getAttributesResultByCateId获取sku属性。
        /// 是否隐私:否
        /// 示例值:
        /// 200000264
        /// </summary>
        [JsonProperty("SkuPropertyId")]
        public int SkuPropertyId { get; set; }

        /// <summary>
        /// sku属性值id。从类目属性接getAttributesResultByCateId获取。
        /// 是否隐私:否
        /// 示例值:
        /// 200002211
        /// </summary>
        [JsonProperty("PropertyValueId")]
        public int PropertyValueId { get; set; }

        /// <summary>
        /// 自定义属性值名称，0-20个字符，0-9和英文半角字符。
        /// 是否隐私:否
        /// 示例值:
        /// pink
        /// </summary>
        [JsonProperty("PropertyValueDefinitionName")]
        public string PropertyValueDefinitionName { get; set; }

        /// <summary>
        /// sku属性图片url。可以通过api.uploadTempImage接口上传图片或者从图片银行中选取图片来作为这个SKU的图片。
        /// 是否隐私:否
        /// 示例值:
        /// http://g02.a.alicdn.com/kf/HTB1NKEUIVXXXXcOXXXXq6xXFXXXu.jpg
        /// </summary>
        [JsonProperty("SkuImage")]
        public string SkuImage { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 这个字段主要用在商品的发布、编辑接口中. 主要的属性有: aeopSKUProperty, skuPrice, skuCode, skuStock(逐渐废弃), ipmSkuStock(实际库存字段)。
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=aeopAeProductSKUs&t=1
    /// </summary>
    public partial class AeopAeProductSKUs
    {

        /// <summary>
        /// Sku价格。取值范围:0.01-100000;单位:美元。 如:200.07，表示:200美元7分。需要在正确的价格区间内。
        /// 是否隐私:否
        /// 示例值:
        /// "200.07"
        /// </summary>
        [JsonProperty("SkuPrice")]
        public string SkuPrice { get; set; }

        /// <summary>
        /// Sku商家编码。 格式:半角英数字,长度20,不包含空格大于号和小于号。如果用户只填写零售价（productprice）和商品编码，需要完整生成一条SKU记录提交，否则商品编码无法保存。系统会认为只提交了零售价，而没有SKU，导致商品编辑未保存。
        /// 是否隐私:否
        /// 示例值:
        /// "cfas00973"
        /// </summary>
        [JsonProperty("SkuCode")]
        public string SkuCode { get; set; }

        /// <summary>
        /// Sku库存,数据格式有货true，无货false；至少有一条sku记录是有货的。
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("SkuStock")]
        public bool SkuStock { get; set; }

        /// <summary>
        /// SKU实际可售库存属性ipmSkuStock，该属性值的合理取值范围为0~999999，如该商品有SKU时，请确保至少有一个SKU是有货状态，也就是ipmSkuStock取值是1~999999，在整个商品纬度库存值的取值范围是1~999999。 如果同时设置了skuStock属性，那么系统以ipmSkuStock属性为优先；如果没有设置ipmSkuStock属性，那么系统会根据skuStock属性进行设置库存，true表示999，false表示0。
        /// 是否隐私:否
        /// 示例值:
        /// 1234
        /// </summary>
        [JsonProperty("IpmSkuStock")]
        public long IpmSkuStock { get; set; }

        /// <summary>
        /// SKU ID。 可以唯一表示一个商品范围内的SKU。注意: 这是一个只读参数，在发布和编辑商品信息时，在设置aeopAeProductSKUs参数时不需要提供这个参数。isv可以通过api.findAeProductById(查询单个商品信息)接口来获取到这个属性。这个属性被api.editMutilpleSkuStocks(编辑一个或多个SKU的可售库存)、api.editSingleSkuStock(编辑单个SKU的可售库存)、api.editSingleSkuPrice(编辑单个SKU的价格)三个接口使用到。
        /// 是否隐私:否
        /// 示例值:
        /// "200000182:193;200007763:201336100"
        /// </summary>
        [JsonProperty("Id")]
        public string Id { get; set; }

        /// <summary>
        /// 货币单位。如果不提供该值信息，则默认为"USD"；非俄罗斯卖家这个属性值可以不提供。对于俄罗斯海外卖家，该单位值必须提供，如: "RUB"。
        /// 是否隐私:否
        /// 示例值:
        /// "USD"或者"RUB"
        /// </summary>
        [JsonProperty("CurrencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Sku属性对象list，允许1-6个sku属性对象，按sku属性顺序排放。sku属性从类目属性接口getAttributesResultByCateId获取。该项值输入sku属性，不能输入普通类目属性。注意，sku属性是有顺序的，必须按照顺序存放。
        /// 是否隐私:否
        /// 示例值:
        /// "aeopSKUProperty":[{"skuPropertyId":14,"propertyValueId":771, "propertyValueDefinitionName": "black", "skuImage": "http://g01.a.alicdn.com/kf/HTB13GKLJXXXXXbYaXXXq6xXFXXXi.jpg" },{"skuPropertyId":25,"propertyValueId":775,  "propertyValueDefinitionName": "red"}]
        /// </summary>
        [JsonProperty("AeopSKUProperty")]
        public AeopSKUProperty[] AeopSKUProperty { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运费模板详细内容
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightSetting&t=1
    /// </summary>
    public partial class AeopFreightSetting
    {

        /// <summary>
        /// 运费模板基础信息内容
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Template")]
        public AeopFreightTemplate Template { get; set; }

        /// <summary>
        /// 运费模板自定义按件或按重内容
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Selfdefine")]
        public AeopFreightSelfdefine[] Selfdefine { get; set; }

        /// <summary>
        /// 运费模板自定义标准内容
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Selfstandard")]
        public AeopFreightSelfdefineStandard[] Selfstandard { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运费模板自定义按件或按重内容
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightSelfdefine&t=1
    /// </summary>
    public partial class AeopFreightSelfdefine
    {

        /// <summary>
        /// 起始采购量
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("StartOrderNum")]
        public int StartOrderNum { get; set; }

        /// <summary>
        /// 截至采购量
        /// 是否隐私:否
        /// 示例值:
        /// 5
        /// </summary>
        [JsonProperty("EndOrderNum")]
        public int EndOrderNum { get; set; }

        /// <summary>
        /// 最低报价
        /// 是否隐私:否
        /// 示例值:
        /// 1.5
        /// </summary>
        [JsonProperty("MinFreight")]
        public double MinFreight { get; set; }

        /// <summary>
        /// 每增加定额产品采购量
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("PerAddNum")]
        public int PerAddNum { get; set; }

        /// <summary>
        /// 续增运费
        /// 是否隐私:否
        /// 示例值:
        /// 0.5
        /// </summary>
        [JsonProperty("AddFreight")]
        public double AddFreight { get; set; }

        /// <summary>
        /// 自定义运送国家
        /// 是否隐私:否
        /// 示例值:
        /// US,BR
        /// </summary>
        [JsonProperty("ShippingCountry")]
        public string ShippingCountry { get; set; }

        /// <summary>
        /// 自定义的方式（按件/按重）
        /// 是否隐私:否
        /// 示例值:
        /// order_num
        /// </summary>
        [JsonProperty("CustomFreightType")]
        public string CustomFreightType { get; set; }

        /// <summary>
        /// 自定义按重内容
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SelfDefineWeightList")]
        public AeopFreightSelfdefineWeight[] SelfDefineWeightList { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运费模板按重自定义内容
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightSelfdefineWeight&t=1
    /// </summary>
    public partial class AeopFreightSelfdefineWeight
    {

        /// <summary>
        /// 重量区间起始
        /// 是否隐私:否
        /// 示例值:
        /// 0
        /// </summary>
        [JsonProperty("StartWeight")]
        public double StartWeight { get; set; }

        /// <summary>
        /// 重量区间结束
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("EndWeight")]
        public double EndWeight { get; set; }

        /// <summary>
        /// 区间内,单位重量
        /// 是否隐私:否
        /// 示例值:
        /// 0.5
        /// </summary>
        [JsonProperty("IntervalUnitWeight")]
        public double IntervalUnitWeight { get; set; }

        /// <summary>
        /// 区间内,单元重量运费
        /// 是否隐私:否
        /// 示例值:
        /// 1.5
        /// </summary>
        [JsonProperty("IntervalUnitFreight")]
        public double IntervalUnitFreight { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运费计算结果
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightCalculateResultDTO&t=1
    /// </summary>
    public partial class AeopFreightCalculateResultDTO
    {

        /// <summary>
        /// 错误代码
        /// 是否隐私:否
        /// 示例值:
        /// 1表示没有错误；-1表示参数不完整；-2表示计算限制，无法计算结果；-3表示货币错误或转换错误；-4表示无有效的运费头数据；-5表示无有效的运费数据
        /// -6表示卖家设置的全局不支持的国家；-7表示不支持的国家；-8表示商品小于起购量；-9表示大小包由于纠纷限制；-10表示产品在搜索中不存在；-11表示商品重量大于卖家设置的重量区间结束值；
        /// -12表示商品或国家满足不支持的规则；-100表示其他错误
        /// </summary>
        [JsonProperty("ErrorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// 物流方式名称
        /// 是否隐私:否
        /// 示例值:
        /// CPAM
        /// </summary>
        [JsonProperty("ServiceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// 实际运费值
        /// 是否隐私:否
        /// 示例值:
        /// {"cent":677,"amount":6.77,"currencyCode":"USD"}
        /// </summary>
        [JsonProperty("Freight")]
        public Money Freight { get; set; }

        /// <summary>
        /// 标准运费值
        /// 是否隐私:否
        /// 示例值:
        /// {"cent":677,"amount":6.77,"currencyCode":"USD"}
        /// </summary>
        [JsonProperty("StandardFreight")]
        public Money StandardFreight { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 运费模板基础信息内容
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightTemplate&t=1
    /// </summary>
    public partial class AeopFreightTemplate
    {

        /// <summary>
        /// 物流公司
        /// 是否隐私:否
        /// 示例值:
        /// CPAM
        /// </summary>
        [JsonProperty("LogisticsCompany")]
        public string LogisticsCompany { get; set; }

        /// <summary>
        /// 是否完全采用标准运费
        /// 是否隐私:否
        /// 示例值:
        /// N
        /// </summary>
        [JsonProperty("AllStandardShipping")]
        public string AllStandardShipping { get; set; }

        /// <summary>
        /// 完全标准运费折扣
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AllStandardDiscount")]
        public double AllStandardDiscount { get; set; }

        /// <summary>
        /// 免运费国家
        /// 是否隐私:否
        /// 示例值:
        /// US,BR
        /// </summary>
        [JsonProperty("FreeShippingCountry")]
        public string FreeShippingCountry { get; set; }

        /// <summary>
        /// 标准运费国家
        /// 是否隐私:否
        /// 示例值:
        /// UK,RU
        /// </summary>
        [JsonProperty("StandardShippingCountry")]
        public string StandardShippingCountry { get; set; }

        /// <summary>
        /// 标准运费折扣
        /// 是否隐私:否
        /// 示例值:
        /// 10.0
        /// </summary>
        [JsonProperty("StandardShippingDiscount")]
        public double StandardShippingDiscount { get; set; }

        /// <summary>
        /// 是否全免费
        /// 是否隐私:否
        /// 示例值:
        /// N
        /// </summary>
        [JsonProperty("AllFreeShipping")]
        public string AllFreeShipping { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运费模板自定义标准内容
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightSelfdefineStandard&t=1
    /// </summary>
    public partial class AeopFreightSelfdefineStandard
    {

        /// <summary>
        /// 自定义标准折扣
        /// 是否隐私:否
        /// 示例值:
        /// 10
        /// </summary>
        [JsonProperty("SelfStandardDiscount")]
        public double SelfStandardDiscount { get; set; }

        /// <summary>
        /// 自定义运费国家
        /// 是否隐私:否
        /// 示例值:
        /// RU,US
        /// </summary>
        [JsonProperty("SelfStandardCountry")]
        public string SelfStandardCountry { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// 描述运费模板ID及名称及是否为默认
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopFreightTemplateDTO&t=1
    /// </summary>
    public partial class AeopFreightTemplateDTO
    {

        /// <summary>
        /// 运费模板Id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TemplateId")]
        public int TemplateId { get; set; }

        /// <summary>
        /// 运费模板名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("TemplateName")]
        public string TemplateName { get; set; }

        /// <summary>
        /// 是否是默认
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Default")]
        public bool Default { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAttributeDTO&t=1
    /// </summary>
    public partial class AeopAttributeDTO
    {

        /// <summary>
        /// 发布属性展现样式
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AttributeShowTypeValue")]
        public string AttributeShowTypeValue { get; set; }

        /// <summary>
        /// sku属性是否可自定义名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CustomizedName")]
        public bool CustomizedName { get; set; }

        /// <summary>
        /// sku属性是否可自定义图片
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CustomizedPic")]
        public bool CustomizedPic { get; set; }

        /// <summary>
        /// 属性id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 文本输入框型属性输入格式（文本|数字）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InputType")]
        public string InputType { get; set; }

        /// <summary>
        /// 发布属性是否关键
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("KeyAttribute")]
        public bool KeyAttribute { get; set; }

        /// <summary>
        /// 属性名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 发布属性是否必填
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Required")]
        public bool Required { get; set; }

        /// <summary>
        /// 发布属性是否是sku
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Sku")]
        public bool Sku { get; set; }

        /// <summary>
        /// sku属性展现样式（色卡|普通）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuStyleValue")]
        public string SkuStyleValue { get; set; }

        /// <summary>
        /// sku维度（1维~3维）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Spec")]
        public int Spec { get; set; }

        /// <summary>
        /// 发布属性单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Units")]
        public AeopUnit[] Units { get; set; }

        /// <summary>
        /// 发布属性值
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Values")]
        public AeAttrValueDTO[] Values { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeAttrValueDTO&t=1
    /// </summary>
    public partial class AeAttrValueDTO
    {

        /// <summary>
        /// 属性值id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 属性值名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 下一层属性
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Attributes")]
        public AeopAttributeDTO2[] Attributes { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAttributeDTO2&t=1
    /// </summary>
    public partial class AeopAttributeDTO2
    {

        /// <summary>
        /// 发布属性展现样式
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AttributeShowTypeValue")]
        public string AttributeShowTypeValue { get; set; }

        /// <summary>
        /// sku属性是否可自定义名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CustomizedName")]
        public bool CustomizedName { get; set; }

        /// <summary>
        /// sku属性是否可自定义图片
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CustomizedPic")]
        public bool CustomizedPic { get; set; }

        /// <summary>
        /// 属性id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 文本输入框型属性输入格式（文本|数字）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InputType")]
        public string InputType { get; set; }

        /// <summary>
        /// 发布属性是否关键
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("KeyAttribute")]
        public bool KeyAttribute { get; set; }

        /// <summary>
        /// 属性名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 发布属性是否必填
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Required")]
        public bool Required { get; set; }

        /// <summary>
        /// 发布属性是否是sku
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Sku")]
        public bool Sku { get; set; }

        /// <summary>
        /// sku属性展现样式（色卡|普通）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuStyleValue")]
        public string SkuStyleValue { get; set; }

        /// <summary>
        /// sku维度（1维~3维）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Spec")]
        public int Spec { get; set; }

        /// <summary>
        /// 发布属性单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Units")]
        public AeopUnit[] Units { get; set; }

        /// <summary>
        /// 发布属性值
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Values")]
        public AeAttrValueDTO2[] Values { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeAttrValueDTO2&t=1
    /// </summary>
    public partial class AeAttrValueDTO2
    {

        /// <summary>
        /// 属性值id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 属性值名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 下一层属性
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Attributes")]
        public AeopAttributeDTO3[] Attributes { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopAttributeDTO3&t=1
    /// </summary>
    public partial class AeopAttributeDTO3
    {

        /// <summary>
        /// 发布属性展现样式
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AttributeShowTypeValue")]
        public string AttributeShowTypeValue { get; set; }

        /// <summary>
        /// sku属性是否可自定义名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CustomizedName")]
        public bool CustomizedName { get; set; }

        /// <summary>
        /// sku属性是否可自定义图片
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("CustomizedPic")]
        public bool CustomizedPic { get; set; }

        /// <summary>
        /// 属性id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 文本输入框型属性输入格式（文本|数字）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("InputType")]
        public string InputType { get; set; }

        /// <summary>
        /// 发布属性是否关键
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("KeyAttribute")]
        public bool KeyAttribute { get; set; }

        /// <summary>
        /// 属性名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 发布属性是否必填
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Required")]
        public bool Required { get; set; }

        /// <summary>
        /// 发布属性是否是sku
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Sku")]
        public bool Sku { get; set; }

        /// <summary>
        /// sku属性展现样式（色卡|普通）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuStyleValue")]
        public string SkuStyleValue { get; set; }

        /// <summary>
        /// sku维度（1维~3维）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Spec")]
        public int Spec { get; set; }

        /// <summary>
        /// 发布属性单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Units")]
        public AeopUnit[] Units { get; set; }

        /// <summary>
        /// 发布属性值
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Values")]
        public AeAttrValueDTO3[] Values { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopUnit&t=1
    /// </summary>
    public partial class AeopUnit
    {

        /// <summary>
        /// 单位名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("UnitName")]
        public string UnitName { get; set; }

        /// <summary>
        /// 和标准属性对换比率
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Rate")]
        public double Rate { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeAttrValueDTO3&t=1
    /// </summary>
    public partial class AeAttrValueDTO3
    {

        /// <summary>
        /// 属性值id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public string Id { get; set; }

        /// <summary>
        /// 属性值名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeopPostCategoryDTO&t=1
    /// </summary>
    public partial class AeopPostCategoryDTO
    {

        /// <summary>
        /// 发布类目id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Id")]
        public int Id { get; set; }

        /// <summary>
        /// 发布类目多语言名称
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 是否叶子类目
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Isleaf")]
        public bool Isleaf { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?ns=aliexpress.open&n=AeAttributeDTO&t=1
    /// </summary>
    public partial class AeAttributeDTO
    {

        /// <summary>
        /// 属性值列表
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Values")]
        public System.Array Values { get; set; }

        /// <summary>
        /// 是否spu关键属性，web页面支持spu回填
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsSpu")]
        public bool IsSpu { get; set; }

        /// <summary>
        /// 是否sku属性
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("IsSku")]
        public bool IsSku { get; set; }

        /// <summary>
        /// 属性多语言名称
        /// 是否隐私:否
        /// 示例值:
        /// [en->Color]
        /// </summary>
        [JsonProperty("Names")]
        public string Names { get; set; }

        /// <summary>
        /// 如果是sku属性，sku规格（1表示第一级sku，最多3级）
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Spec")]
        public int Spec { get; set; }

        /// <summary>
        /// 属性id
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("It")]
        public int It { get; set; }

        /// <summary>
        /// 是否关键属性
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("IsKeyAttribute")]
        public bool IsKeyAttribute { get; set; }

        /// <summary>
        /// 是否必填属性
        /// 是否隐私:否
        /// 示例值:
        /// ture
        /// </summary>
        [JsonProperty("Required")]
        public bool Required { get; set; }

        /// <summary>
        /// 如果是sku属性，是否可自定义图片
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("CustomizedPic")]
        public bool CustomizedPic { get; set; }

        /// <summary>
        /// 如果是sku属性，是否可自定义名称
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("Sku")]
        public bool Sku { get; set; }

        /// <summary>
        /// 当前属性的所有单位
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("Units")]
        public System.Array Units { get; set; }

        /// <summary>
        /// 属性展现样式（list_box下拉列表，input输入框，input_int数值输入框，input_string文本输入框，check_box多选框，intervel区间，other下拉或多选框选择other属性值后弹出的子属性）不同展现样式的校验不同
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ShowType")]
        public string ShowType { get; set; }

        /// <summary>
        /// 如果是sku属性，sku特殊样式，目前只有色卡
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("SkuStyle")]
        public string SkuStyle { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?n=SellerCouponActivity&ns=aliexpress.open&t=2&a=findSellerCouponActivity&v=1
    /// </summary>
    public partial class SellerCouponActivity
    {

        /// <summary>
        /// coupon活动id
        /// 是否隐私:否
        /// 示例值:
        /// 11111
        /// </summary>
        [JsonProperty("Id")]
        public long Id { get; set; }

        /// <summary>
        /// coupon活动名称
        /// 是否隐私:否
        /// 示例值:
        /// "couponName"
        /// </summary>
        [JsonProperty("ActivityName")]
        public string ActivityName { get; set; }

        /// <summary>
        /// 卖家admin帐号
        /// 是否隐私:否
        /// 示例值:
        /// 2222222
        /// </summary>
        [JsonProperty("SellerAdminId")]
        public long SellerAdminId { get; set; }

        /// <summary>
        /// 总共发行数量
        /// 是否隐私:否
        /// 示例值:
        /// 50
        /// </summary>
        [JsonProperty("TotalReleaseNum")]
        public int TotalReleaseNum { get; set; }

        /// <summary>
        /// 已发放数量
        /// 是否隐私:否
        /// 示例值:
        /// 30
        /// </summary>
        [JsonProperty("ReleasedNum")]
        public int ReleasedNum { get; set; }

        /// <summary>
        /// 活动开始时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AcquireStartDate")]
        public System.DateTimeOffset AcquireStartDate { get; set; }

        /// <summary>
        /// 活动结束时间
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("AcquireEndDate")]
        public System.DateTimeOffset AcquireEndDate { get; set; }

        /// <summary>
        /// coupon面额，单位:美分
        /// 是否隐私:否
        /// 示例值:
        /// 50
        /// </summary>
        [JsonProperty("Denomination")]
        public int Denomination { get; set; }

        /// <summary>
        /// coupon使用条件：订单最小金额，单位:美分
        /// 是否隐私:否
        /// 示例值:
        /// 1000
        /// </summary>
        [JsonProperty("MinOrderAmount")]
        public int MinOrderAmount { get; set; }

        /// <summary>
        /// 是否有使用条件
        /// 是否隐私:否
        /// 示例值:
        /// true
        /// </summary>
        [JsonProperty("HasUseCondtion")]
        public bool HasUseCondtion { get; set; }

        /// <summary>
        /// coupon有效期，单位:秒
        /// 是否隐私:否
        /// 示例值:
        /// 3600
        /// </summary>
        [JsonProperty("ConsumeValidTime")]
        public int ConsumeValidTime { get; set; }

        /// <summary>
        /// 每买家限领张数
        /// 是否隐私:否
        /// 示例值:
        /// 2
        /// </summary>
        [JsonProperty("NumPerBuyer")]
        public int NumPerBuyer { get; set; }

        /// <summary>
        /// 活动状态，可选值(括号内为中文解释)：not_started(未开始) / releasing(活动中) / release_end(已结束) / closed(已关闭)
        /// 是否隐私:否
        /// 示例值:
        /// not_started
        /// </summary>
        [JsonProperty("Status")]
        public string Status { get; set; }
    }

    /// <summary>
    /// aliexpress.open
    /// http://gw.api.alibaba.com/dev/doc/intl/message.htm?n=SellerCouponActivityList&ns=aliexpress.open&t=2&a=getActList&v=1
    /// </summary>
    public partial class SellerCouponActivityList
    {

        /// <summary>
        /// 卖家自主coupon活动集合
        /// 是否隐私:否
        /// 示例值:
        /// 
        /// </summary>
        [JsonProperty("ActivityList")]
        public SellerCouponActivity ActivityList { get; set; }

        /// <summary>
        /// 当前页码
        /// 是否隐私:否
        /// 示例值:
        /// 1
        /// </summary>
        [JsonProperty("CurrentPage")]
        public int CurrentPage { get; set; }

        /// <summary>
        /// 符合查询条件的总记录数
        /// 是否隐私:否
        /// 示例值:
        /// 100
        /// </summary>
        [JsonProperty("TotalItem")]
        public int TotalItem { get; set; }

        /// <summary>
        /// 总页数
        /// 是否隐私:否
        /// 示例值:
        /// 5
        /// </summary>
        [JsonProperty("TotalPage")]
        public int TotalPage { get; set; }

        /// <summary>
        /// 每页记录数
        /// 是否隐私:否
        /// 示例值:
        /// 20
        /// </summary>
        [JsonProperty("PageSize")]
        public int PageSize { get; set; }
    }
    #endregion 实体对象
}